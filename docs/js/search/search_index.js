var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/ActivePageNumberItem.html",[0,0.815,1,1.936]],["body/interfaces/ActivePageNumberItem.html",[0,1.159,1,3.01,2,1.27,3,0.182,4,0.161,5,0.161,6,0.77,7,1.27,8,1.27,9,1.435,10,1.764,11,1.531,12,1.609,13,1.435,14,1.639,15,0.652,16,3.821,17,2.962,18,2.905,19,3.012,20,2.739,21,3.496,22,0.497,23,0.937,24,0.772,25,0.022,26,0.204,27,0.885,28,0.346,29,2.08,30,2.08,31,2.411,32,0.907,33,0.354,34,2.354,35,2.988,36,2.08,37,2.754,38,3.099,39,2.988,40,1.639,41,1.666,42,3.237,43,1.907,44,1.348,45,1.131,46,0.272,47,1.531,48,0.69,49,2.08,50,3.496,51,3.821,52,2.08,53,2.73,54,2.08,55,2.739,56,2.988,57,2.531,58,1.531,59,2.08,60,2.08,61,2.08,62,1.609,63,2.08,64,1.907,65,0.77,66,2.08,67,2.08,68,2.988,69,2.08,70,1.763,71,2.411,72,2.08,73,4.046,74,2.988,75,2.988,76,2.988,77,1.531,78,0.015,79,0.012,80,0.009]],["title/components/AppComponent.html",[81,0.815,82,1.336]],["body/components/AppComponent.html",[3,0.237,4,0.21,5,0.21,10,1.183,12,1.249,25,0.021,26,0.266,28,0.451,32,1.183,33,0.237,45,1.951,46,0.355,78,0.011,79,0.015,80,0.011,81,1.333,82,2.327,83,2.326,84,1.872,85,1.872,86,1.872,87,1.872,88,3.376,89,1.759,90,3.363,91,3.16,92,2.475,93,5.856,94,2.475,95,5.226,96,2.475,97,3.376,98,5.323,99,2.488,100,6.231,101,2.714,102,3.952,103,2.997,104,3.952,105,3.952,106,3.376,107,2.714,108,3.952,109,1.476,110,2.475,111,2.326,112,1.872,113,2.951,114,1.872,115,0.946,116,1.872,117,1.395,118,1.872,119,1.872,120,1.395,121,2.19,122,1.872,123,1.476,124,0.851,125,1.872,126,1.476,127,1.872,128,1.476,129,1.872,130,1.476,131,1.872,132,1.476,133,2.475,134,1.872,135,1.872,136,1.872]],["title/modules/AppMockModule.html",[137,1.195,138,2.252]],["body/modules/AppMockModule.html",[3,0.228,4,0.202,5,0.202,15,0.817,22,0.497,25,0.022,26,0.442,28,0.433,33,0.345,41,1.522,46,0.34,62,1.608,78,0.011,79,0.015,80,0.011,115,0.687,124,1.095,137,1.698,138,3.201,139,1.589,140,2.604,141,2.604,142,4.344,143,5.085,144,5.085,145,4.351,146,2.57,147,2.751,148,1.916,149,3.792,150,3.24,151,4.344,152,2.876,153,2.604,154,3.792,155,4.344,156,2.387,157,4.344,158,1.767,159,3.24,160,4.209,161,3.24,162,2.387,163,3.24,164,2.604,165,4.901,166,2.604,167,2.604,168,3.24,169,4.344,170,3.24,171,5.737,172,3.792,173,5.085,174,3.201,175,3.856,176,3.201,177,4.344,178,3.24,179,4.344,180,2.052,181,1.796,182,1.916,183,3.792,184,3.792,185,2.604,186,2.052]],["title/modules/AppModule.html",[137,1.195,187,2.457]],["body/modules/AppModule.html",[3,0.177,4,0.156,5,0.156,25,0.022,26,0.486,28,0.336,33,0.177,46,0.264,78,0.008,79,0.012,80,0.008,82,2.537,109,1.098,126,2.267,128,2.267,137,0.982,138,3.822,139,1.232,145,2.23,146,2.152,150,2.512,152,2.23,153,2.019,156,1.851,181,2.371,182,2.152,185,2.019,187,4.88,188,1.711,189,3.437,190,3.151,191,1.591,192,2.512,193,2.512,194,2.512,195,2.512,196,2.512,197,3.822,198,3.285,199,3.822,200,2.924,201,2.019,202,1.851,203,2.94,204,4.258,205,3.638,206,2.019,207,2.94,208,4.258,209,2.94,210,2.019,211,1.422,212,2.94,213,2.512,214,1.711,215,2.94,216,2.019,217,1.486,218,4.258,219,2.94,220,4.258,221,2.019,222,2.019,223,2.94,224,2.23,225,2.94,226,4.258,227,2.512,228,4.258,229,2.94,230,3.229,231,2.23,232,4.258,233,2.94,234,3.638,235,2.512,236,2.94,237,2.94,238,4.258,239,2.94,240,1.711,241,2.94,242,2.23,243,4.258,244,2.94,245,2.23,246,2.94,247,2.94,248,2.94,249,2.94,250,2.94,251,2.94,252,2.512,253,2.94,254,1.851,255,2.94,256,2.512,257,2.94,258,2.94]],["title/classes/AppPage.html",[46,0.321,259,2.713]],["body/classes/AppPage.html",[3,0.292,4,0.259,5,0.259,22,0.475,25,0.021,26,0.327,33,0.292,45,1.817,46,0.437,62,1.887,78,0.014,79,0.017,80,0.014,111,2.166,206,3.342,259,4.526,260,4.867,261,4.158,262,1.787,263,6.73,264,6.73,265,1.437,266,4.867,267,1.787,268,6.005,269,4.867,270,4.158,271,4.867,272,4.867,273,3.691,274,4.867]],["title/modules/AppRoutingModule.html",[137,1.195,197,2.252]],["body/modules/AppRoutingModule.html",[3,0.261,4,0.231,5,0.231,25,0.022,26,0.412,28,0.495,33,0.261,41,1.663,46,0.389,78,0.012,79,0.016,80,0.012,121,2.328,124,1.196,139,1.818,146,2.806,147,3.005,148,2.192,158,1.165,176,4.065,181,2.055,182,2.192,186,3.314,191,2.347,197,3.496,275,3.29,276,2.731,277,4.212,278,2.731,279,4.645,280,5.553,281,4.338,282,2.524,283,4.338,284,4.338,285,4.338,286,2.347,287,4.338,288,4.338,289,5.553,290,4.212,291,4.212,292,4.338]],["title/components/CollectedConsentsComponent.html",[81,0.815,117,1.263]],["body/components/CollectedConsentsComponent.html",[3,0.173,4,0.153,5,0.153,6,1.469,7,2.421,10,0.863,12,0.911,15,0.621,22,0.281,23,0.904,24,0.479,25,0.021,26,0.333,28,0.329,32,0.863,33,0.173,45,1.567,46,0.259,48,0.956,55,1.814,65,0.733,78,0.008,79,0.012,80,0.008,81,1.316,82,1.076,83,1.868,84,1.365,85,1.365,86,1.365,87,1.365,89,1.283,90,3.17,91,2.979,92,1.987,94,1.987,96,1.365,98,2.462,106,2.462,107,3.398,109,1.076,110,1.987,111,2.419,112,1.365,113,2.574,114,1.365,115,1.127,116,1.365,117,1.919,118,3.021,119,1.365,120,1.017,121,1.759,122,1.365,123,1.076,124,1.066,125,1.365,126,1.076,127,1.365,128,1.076,129,1.365,130,1.076,131,1.365,132,1.076,133,1.987,134,1.365,135,1.365,136,1.365,158,1.774,162,3.422,262,1.256,265,1.308,267,0.863,273,2.186,286,3.262,293,2.462,294,3.585,295,4.122,296,1.987,297,2.677,298,2.641,299,2.641,300,4.949,301,4.196,302,4.949,303,3.163,304,2.462,305,3.795,306,4.196,307,0.694,308,0.656,309,2.882,310,1.659,311,1.567,312,1.481,313,4.196,314,2.882,315,1.677,316,2.462,317,2.462,318,2.882,319,2.462,320,4.196,321,4.196,322,4.196,323,3.585,324,3.753,325,2.462,326,2.882,327,2.462,328,2.882,329,4.196,330,2.882,331,2.882,332,2.882,333,2.186,334,2.882,335,2.882]],["title/modules/CollectedConsentsModule.html",[137,1.195,336,2.457]],["body/modules/CollectedConsentsModule.html",[3,0.19,4,0.168,5,0.168,6,0.802,8,2.182,9,1.494,10,1.341,15,0.679,25,0.022,26,0.48,28,0.36,32,1.861,33,0.19,46,0.283,78,0.009,79,0.013,80,0.009,103,3.397,109,1.178,117,2.195,130,2.321,132,2.321,137,1.739,139,1.322,146,2.263,147,2.423,148,1.594,158,1.398,181,2.466,182,2.263,188,1.836,189,2.167,190,1.986,191,1.707,198,3.364,200,3.076,201,2.167,202,1.986,210,2.167,211,1.054,216,2.167,217,1.594,221,2.167,222,2.167,230,3.397,231,2.393,234,3.826,235,2.696,242,2.393,286,2.423,319,2.696,336,4.904,337,2.696,338,2.696,339,2.696,340,3.914,341,3.914,342,3.155,343,3.397,344,3.397,345,4.842,346,2.696,347,3.155,348,3.155,349,2.393,350,2.167,351,3.155,352,2.696,353,4.479,354,3.155,355,2.393,356,3.155,357,4.479,358,3.155,359,2.393,360,3.155,361,3.155,362,3.826,363,2.393,364,3.155,365,3.155,366,3.155,367,3.155,368,1.594,369,3.155,370,3.155]],["title/modules/CollectedConsentsRoutingModule.html",[137,1.195,341,2.252]],["body/modules/CollectedConsentsRoutingModule.html",[3,0.273,4,0.242,5,0.242,6,1.156,25,0.022,26,0.455,28,0.519,33,0.273,41,1.362,46,0.408,78,0.013,79,0.016,80,0.013,81,1.036,117,2.02,139,1.906,146,2.892,147,3.096,148,2.298,158,1.537,176,2.863,181,2.154,182,2.298,186,3.388,191,2.461,276,2.863,277,4.34,278,2.863,286,2.461,290,3.449,291,3.449,341,3.602,345,3.886,346,3.886,371,4.548,372,3.93,373,4.548,374,3.449,375,4.548,376,3.886,377,3.886]],["title/injectables/CollectedConsentsService.html",[27,0.728,305,2.252]],["body/injectables/CollectedConsentsService.html",[3,0.242,4,0.214,5,0.214,6,1.597,15,0.868,22,0.394,23,1.14,24,0.46,25,0.021,26,0.422,27,1.077,28,0.46,31,1.909,33,0.242,44,1.794,45,1.505,46,0.362,48,1.206,65,1.025,78,0.012,79,0.015,80,0.012,115,0.73,158,1.752,211,1.347,262,1.585,265,1.423,267,1.207,286,3.398,305,3.333,307,0.97,308,0.918,310,1.594,311,1.505,312,1.423,378,1.794,379,5.365,380,3.444,381,4.524,382,3.636,383,4.016,384,3.081,385,4.358,386,4.061,387,4.479,388,2.768,389,5.296,390,4.032,391,4.016,392,3.636,393,3.333,394,5.296,395,3.444,396,3.057,397,3.444,398,4.032]],["title/interfaces/CollectedConsentsState.html",[0,0.815,399,2.713]],["body/interfaces/CollectedConsentsState.html",[0,1.069,2,1.968,3,0.282,4,0.25,5,0.25,6,1.194,22,0.459,23,1.257,24,0.536,25,0.021,26,0.427,33,0.399,41,1.902,78,0.013,79,0.017,80,0.013,158,1.835,211,1.568,214,2.732,254,2.956,368,2.373,384,3.867,399,4.427,400,3.561,401,4.009,402,4.009,403,3.561,404,4.009,405,4.695,406,3.561,407,4.011,408,2.956]],["title/interfaces/Consent.html",[0,0.815,124,0.77]],["body/interfaces/Consent.html",[0,1.015,2,1.869,3,0.268,4,0.237,5,0.237,15,0.96,19,2.601,22,0.436,23,1.217,24,0.785,25,0.021,33,0.268,78,0.013,79,0.016,80,0.013,115,1.181,124,1.336,160,4.48,162,4.107,164,4.48,166,4.48,167,4.48,308,1.656,409,3.81,410,4.459,411,4.002,412,4.492]],["title/injectables/ConsentsEffects.html",[27,0.728,350,2.457]],["body/injectables/ConsentsEffects.html",[3,0.23,4,0.203,5,0.203,6,1.466,22,0.374,23,1.102,24,0.437,25,0.022,26,0.444,27,1.041,28,0.437,33,0.23,46,0.344,48,1.165,62,1.945,65,1.301,78,0.011,79,0.015,80,0.011,115,0.693,158,1.374,217,1.935,265,1.232,307,0.921,308,0.872,311,1.43,312,1.352,350,3.514,378,1.704,387,4.225,413,3.271,414,2.903,415,5.004,416,4.241,417,3.829,418,4.371,419,3.881,420,5.117,421,4.925,422,5.117,423,5.117,424,3.958,425,2.739,426,5.117,427,5.117,428,5.117,429,3.829,430,2.903,431,3.271,432,2.903,433,3.271,434,3.271,435,2.903,436,2.41,437,2.071]],["title/injectables/ConsentsManagementEffects.html",[27,0.728,438,2.457]],["body/injectables/ConsentsManagementEffects.html",[3,0.211,4,0.187,5,0.187,15,0.757,22,0.343,23,1.04,24,0.402,25,0.022,26,0.443,27,0.983,28,0.402,33,0.211,46,0.316,48,1.1,62,1.878,65,1.228,78,0.01,79,0.014,80,0.01,115,0.637,124,1.279,158,1.482,180,3.214,217,1.777,265,1.163,307,0.846,308,0.801,311,1.313,312,1.241,344,3.664,378,1.565,392,3.317,414,2.667,415,4.88,416,4.149,418,4.185,419,3.664,421,4.715,425,2.864,430,2.667,431,3.004,434,3.004,435,2.667,436,2.214,437,1.903,438,3.317,439,2.456,440,3.79,441,2.986,442,3.004,443,4.831,444,4.831,445,4.127,446,3.517,447,4.831,448,4.831,449,4.831,450,4.831,451,4.831,452,4.831,453,3.517,454,4.831,455,3.041,456,2.415,457,2.667,458,3.517,459,2.214,460,3.517]],["title/injectables/ConsentsManagementService.html",[27,0.728,461,2.457]],["body/injectables/ConsentsManagementService.html",[3,0.24,4,0.212,5,0.212,15,1.133,22,0.39,24,0.601,25,0.021,26,0.421,27,1.07,28,0.456,31,1.89,33,0.24,44,1.776,45,1.49,46,0.358,48,1.198,57,2.322,65,1.015,78,0.011,79,0.015,80,0.011,115,0.952,124,1.531,180,2.159,211,1.333,262,1.575,265,1.266,267,1.195,307,1.266,308,1.198,310,1.578,378,1.776,381,4.494,382,3.613,383,3.99,385,4.349,388,2.741,391,3.99,392,3.613,425,1.776,439,2.619,441,2.159,455,3.311,457,3.027,461,3.613,462,5.027,463,3.41,464,3.061,465,3.99,466,3.991,467,5.261,468,3.991,469,3.64,470,2.322,471,3.41,472,3.991]],["title/interfaces/ConsentsManagementState.html",[0,0.815,464,2.082]],["body/interfaces/ConsentsManagementState.html",[0,1.054,2,1.939,3,0.278,4,0.246,5,0.246,22,0.452,23,1.246,24,0.528,25,0.021,26,0.389,33,0.397,41,1.889,78,0.013,79,0.017,80,0.013,158,1.243,211,1.546,411,3.672,425,2.575,439,2.059,440,3.178,441,2.503,456,3.178,457,3.509,464,3.672,473,3.509,474,5.931,475,3.953,476,3.972,477,3.509,478,3.509,479,3.641,480,3.509,481,3.178,482,3.953,483,3.13]],["title/guards/ConsentsResolverService.html",[372,2.457,484,2.713]],["body/guards/ConsentsResolverService.html",[3,0.247,4,0.218,5,0.218,6,1.517,22,0.401,24,0.612,25,0.021,26,0.441,27,1.09,28,0.469,33,0.247,44,1.827,45,1.532,46,0.368,48,1.22,62,1.298,65,1.044,78,0.012,79,0.015,80,0.012,115,0.97,124,0.884,262,1.604,265,1.29,267,1.229,268,4.577,278,2.583,286,2.22,296,1.944,304,3.506,305,4.235,307,1.29,308,1.22,310,2.118,316,3.506,317,3.506,372,3.679,374,4.524,376,5.402,437,2.22,470,2.388,483,3.227,485,4.104,486,5.096,487,3.506,488,4.104,489,5.358,490,6.324,491,6.324,492,4.104,493,4.104,494,4.096,495,4.104,496,4.104]],["title/injectables/ConsentsService.html",[27,0.728,416,2.252]],["body/injectables/ConsentsService.html",[3,0.24,4,0.212,5,0.212,15,0.859,22,0.39,23,1.133,24,0.672,25,0.021,26,0.421,27,1.07,28,0.456,33,0.24,44,1.776,45,1.49,46,0.358,48,1.198,62,1.663,65,1.015,78,0.011,79,0.015,80,0.011,115,0.952,124,1.438,156,2.512,158,1.68,174,3.938,180,2.846,262,1.575,265,1.506,267,1.575,307,1.266,308,1.198,311,1.49,312,1.409,378,1.776,386,4.041,411,2.322,416,3.311,437,2.159,494,4.465,497,3.41,498,5.261,499,5.885,500,5.885,501,3.991,502,6.676,503,5.261,504,5.261,505,3.991,506,3.991,507,3.991,508,3.991,509,3.991]],["title/interfaces/ConsentsState.html",[0,0.815,384,2.082]],["body/interfaces/ConsentsState.html",[0,0.77,2,1.418,3,0.203,4,0.18,5,0.18,6,0.86,19,2.449,22,0.33,23,1.013,24,0.386,25,0.022,26,0.393,33,0.392,41,2.047,53,3.075,62,1.942,70,1.968,71,2.768,77,3.213,78,0.01,79,0.013,80,0.01,124,1.013,158,0.908,211,1.13,384,3.4,404,2.323,424,2.323,425,2.601,433,2.89,470,1.968,476,3.23,479,2.96,483,3.738,510,2.565,511,4.703,512,5.406,513,4.018,514,3.383,515,2.89,516,1.968,517,2.323,518,2.129,519,2.565,520,4.1,521,2.565,522,2.89,523,2.89,524,2.89,525,2.565,526,4.018,527,2.89,528,2.89,529,2.89,530,2.89,531,2.89,532,4.619,533,4.018,534,2.89,535,4.018,536,2.89]],["title/components/GiveConsentComponent.html",[81,0.815,120,1.263]],["body/components/GiveConsentComponent.html",[3,0.201,4,0.178,5,0.178,10,1.002,12,1.058,15,0.721,22,0.327,24,0.533,25,0.021,26,0.361,28,0.382,32,1.002,33,0.201,46,0.3,48,1.063,65,0.851,78,0.01,79,0.013,80,0.01,81,1.224,82,1.25,83,2.078,84,1.585,85,1.585,86,1.585,87,1.585,89,1.49,90,3.266,91,3.069,92,2.211,94,2.211,96,2.546,107,2.298,109,1.25,110,2.211,111,2.078,112,1.585,113,2.755,114,1.585,115,1.053,116,1.585,117,1.182,118,1.585,119,1.585,120,2.053,121,2.824,122,1.585,123,1.25,124,1.469,125,1.585,126,1.25,127,1.585,128,1.25,129,1.585,130,1.25,131,1.585,132,1.25,133,2.211,134,1.585,135,1.585,136,1.585,262,1.398,265,1.124,267,1.002,282,3.128,297,1.811,298,2.939,299,2.939,307,1.124,308,1.063,310,1.323,315,1.947,333,2.538,439,2.393,455,2.939,461,3.994,470,1.947,537,4.077,538,2.86,539,4.593,540,3.541,541,5.376,542,4.669,543,3.989,544,3.347,545,3.347,546,4.669,547,4.669,548,3.347,549,3.347,550,3.347,551,3.347,552,3.347]],["title/components/GiveConsentFormComponent.html",[81,0.815,123,1.336]],["body/components/GiveConsentFormComponent.html",[3,0.145,4,0.128,5,0.128,10,0.723,12,0.764,15,0.52,17,2.141,22,0.236,23,0.792,24,0.509,25,0.021,26,0.3,28,0.276,32,0.723,33,0.145,41,0.723,46,0.217,48,0.838,62,1.409,64,2.316,65,0.614,78,0.007,79,0.011,80,0.007,81,1.221,82,0.902,83,1.637,84,1.144,85,1.144,86,1.144,87,1.144,89,1.075,90,3.046,91,2.863,92,1.742,94,1.742,96,1.144,109,0.902,110,1.742,111,1.637,112,1.144,113,2.36,114,1.144,115,1.023,116,1.144,117,0.853,118,1.144,119,1.144,120,0.853,121,2.696,122,1.144,123,1.86,124,1.544,125,1.144,126,0.902,127,1.144,128,0.902,129,1.144,130,0.902,131,1.144,132,0.902,133,1.742,134,1.144,135,1.144,136,1.144,162,3.375,164,3.06,166,3.06,167,3.06,185,1.659,262,1.101,265,1.36,267,1.334,282,3.418,296,1.742,297,2.411,298,2.316,299,2.316,303,2.899,307,0.581,308,0.55,310,1.455,315,1.405,412,1.521,439,2.614,455,2.316,469,1.405,470,1.405,480,4.284,537,4.454,539,5.018,540,2.79,543,4.256,553,4.454,554,2.064,555,3.143,556,4.456,557,3.679,558,4.982,559,2.79,560,4.456,561,2.416,562,4.982,563,3.679,564,3.679,565,3.379,566,2.416,567,2.416,568,3.143,569,5.649,570,3.679,571,2.416,572,2.416,573,2.79,574,3.679,575,1.832,576,2.416,577,2.416,578,2.416,579,2.416,580,2.416,581,2.416,582,2.416,583,3.679,584,3.679,585,3.679,586,3.679,587,3.679,588,3.143,589,2.79,590,3.143,591,3.143,592,3.679,593,3.143,594,3.143,595,3.143]],["title/modules/GiveConsentModule.html",[137,1.195,596,2.252]],["body/modules/GiveConsentModule.html",[3,0.199,4,0.176,5,0.176,15,0.715,25,0.022,26,0.485,28,0.379,33,0.199,46,0.298,78,0.01,79,0.013,80,0.01,103,3.52,109,1.239,120,2.231,123,2.36,124,1.152,137,1.788,139,1.391,146,2.345,147,2.511,148,1.677,156,2.089,158,1.246,181,2.535,182,2.345,188,1.931,189,2.279,190,2.089,191,1.796,198,3.419,200,3.187,201,2.279,202,2.089,210,2.279,211,1.109,216,2.279,217,1.677,221,2.279,222,2.279,230,3.52,231,2.517,242,2.517,282,3.114,343,3.52,344,3.52,349,2.517,352,2.836,362,3.965,368,1.677,438,2.279,439,1.477,441,1.796,471,2.836,553,2.517,575,2.517,596,4.373,597,2.836,598,2.836,599,2.836,600,3.978,601,3.319,602,3.965,603,2.836,604,3.319,605,4.641,606,3.319,607,4.641,608,3.319,609,4.641,610,3.319,611,4.641,612,3.319,613,4.641,614,4.641,615,3.319,616,4.641,617,3.319,618,3.319,619,3.319,620,3.319,621,3.319,622,3.319,623,3.319]],["title/modules/GiveConsentRoutingModule.html",[137,1.195,600,2.252]],["body/modules/GiveConsentRoutingModule.html",[3,0.277,4,0.245,5,0.245,25,0.022,26,0.444,28,0.527,31,2.185,33,0.277,41,1.381,46,0.414,78,0.013,79,0.017,80,0.013,81,1.051,120,2.038,124,0.993,137,1.541,139,1.934,146,2.918,147,3.124,148,2.332,176,2.904,181,2.185,182,2.332,186,3.41,191,2.496,276,2.904,277,4.379,278,2.904,282,2.685,290,3.499,291,3.499,377,3.942,439,2.054,596,2.904,600,3.635,602,3.942,603,3.942,624,4.614,625,4.614]],["title/interfaces/GiveConsentState.html",[0,0.815,626,2.713]],["body/interfaces/GiveConsentState.html",[0,1.063,2,1.956,3,0.281,4,0.248,5,0.248,22,0.456,23,1.252,24,0.533,25,0.021,26,0.426,33,0.399,41,1.897,78,0.013,79,0.017,80,0.013,158,1.253,211,1.559,214,2.716,254,2.938,368,2.359,401,3.994,402,3.994,403,3.54,408,2.938,439,2.078,441,2.525,464,3.859,465,3.54,478,5.175,481,3.994,626,4.411,627,3.54,628,4.668,629,3.54]],["title/components/LoaderComponent.html",[81,0.815,126,1.336]],["body/components/LoaderComponent.html",[3,0.205,4,0.181,5,0.181,10,1.021,12,1.079,15,0.735,18,2.241,22,0.462,23,1.019,24,0.39,25,0.021,26,0.318,28,0.39,32,1.021,33,0.205,46,0.306,48,1.077,65,0.867,78,0.01,79,0.014,80,0.01,81,1.237,82,1.274,83,2.106,84,1.616,85,1.616,86,1.616,87,1.616,89,1.518,90,3.278,91,3.08,92,2.241,94,2.241,96,1.616,99,2.978,101,3.729,109,1.274,110,2.241,111,2.106,112,1.616,113,2.778,114,1.616,115,0.983,116,1.616,117,1.204,118,1.616,119,1.616,120,1.204,121,1.983,122,1.616,123,1.274,124,0.735,125,1.616,126,2.19,127,1.616,128,1.274,129,1.616,130,1.274,131,1.616,132,1.274,133,2.241,134,1.616,135,1.616,136,1.616,240,3.16,262,1.416,265,1.307,267,1.021,294,4.042,296,2.241,297,2.938,303,3.412,307,0.821,308,0.777,310,1.87,311,1.274,312,1.204,315,1.985,333,3.588,393,3.878,630,2.914,631,4.731,632,5.431,633,4.731,634,3.411,635,3.692,636,4.731,637,4.731,638,3.411,639,4.731,640,2.343,641,2.914,642,3.411,643,2.914,644,3.411,645,2.914,646,3.411]],["title/components/MainAreaComponent.html",[81,0.815,128,1.336]],["body/components/MainAreaComponent.html",[3,0.171,4,0.151,5,0.151,10,0.851,12,0.898,20,1.788,22,0.406,23,0.894,24,0.561,25,0.022,26,0.363,28,0.324,31,2.557,32,0.851,33,0.171,46,0.255,48,0.647,71,1.346,77,1.436,78,0.008,79,0.012,80,0.008,81,1.118,82,1.061,83,1.848,84,1.346,85,1.346,86,1.346,87,1.346,89,1.264,90,3.161,91,3.033,92,1.967,94,1.967,96,3.009,97,3.548,99,2.614,101,2.852,107,1.951,109,1.061,110,1.967,111,1.848,112,1.346,113,2.557,114,1.346,115,0.889,116,1.346,117,1.003,118,2.324,119,1.346,120,1.003,121,2.514,122,1.346,123,1.061,124,1.237,125,1.346,126,1.061,127,1.346,128,2.016,129,1.346,130,1.061,131,1.346,132,1.061,133,1.967,134,1.346,135,1.346,136,1.346,158,1.45,224,4.094,227,2.427,265,1.181,273,2.155,307,0.684,308,0.647,311,1.551,312,1.466,324,2.155,325,2.427,327,2.427,435,2.155,436,1.788,437,1.537,494,3.37,643,2.427,645,2.427,647,4.613,648,2.427,649,4.908,650,4.153,651,4.908,652,4.908,653,2.841,654,5.999,655,2.841,656,4.153,657,2.614,658,4.153,659,4.153,660,4.908,661,2.841,662,5.399,663,2.841,664,2.841,665,2.841,666,4.153,667,4.153,668,4.153,669,3.548,670,4.908,671,2.841,672,2.841,673,2.841,674,4.153,675,2.841,676,2.841,677,2.841,678,2.841,679,2.841,680,2.841,681,2.841]],["title/interfaces/NumberPageItem.html",[0,0.815,37,1.936]],["body/interfaces/NumberPageItem.html",[0,1.159,1,2.754,2,1.27,3,0.182,4,0.161,5,0.161,6,0.77,7,1.27,8,1.27,9,1.435,10,1.764,11,1.531,12,1.609,13,1.435,14,1.639,15,0.652,16,3.821,17,2.962,18,2.905,19,3.012,20,1.907,21,3.496,22,0.497,23,0.937,24,0.772,25,0.022,26,0.204,27,0.885,28,0.346,29,2.08,30,2.08,31,2.411,32,0.907,33,0.354,34,2.354,35,2.988,36,2.988,37,3.01,38,3.099,39,2.988,40,1.639,41,1.666,42,3.237,43,1.907,44,1.348,45,1.131,46,0.272,47,1.531,48,0.69,49,2.08,50,3.496,51,3.821,52,2.08,53,2.73,54,2.08,55,2.739,56,2.988,57,2.531,58,1.531,59,2.08,60,2.08,61,2.08,62,1.609,63,2.08,64,1.907,65,0.77,66,2.08,67,2.08,68,2.988,69,2.08,70,1.763,71,2.411,72,2.08,73,4.046,74,2.988,75,2.988,76,2.988,77,1.531,78,0.015,79,0.012,80,0.009]],["title/injectables/PagesPanelGeneratorService.html",[27,0.728,47,1.808]],["body/injectables/PagesPanelGeneratorService.html",[0,1.059,1,2.516,3,0.156,4,0.138,5,0.138,6,1.313,7,2.164,8,2.164,9,2.445,10,1.958,11,2.609,12,2,13,2.445,14,1.402,15,0.835,16,3.194,17,2.258,18,2.996,19,2.987,20,1.632,21,2.665,22,0.504,24,0.722,25,0.022,26,0.174,27,0.789,28,0.296,29,1.78,30,1.78,31,2.203,32,1.162,33,0.332,34,2.099,35,2.665,36,1.78,37,2.516,38,2.932,39,2.665,40,2.099,41,1.546,42,3.004,43,1.632,44,1.154,45,0.968,46,0.233,47,1.961,48,1.059,49,2.665,50,3.985,51,4.248,52,2.665,53,2.911,54,2.665,55,2.927,56,3.194,57,2.258,58,2.35,59,3.194,60,3.194,61,3.194,62,1.47,63,1.78,64,1.632,65,1.183,66,2.665,67,1.78,68,2.665,69,1.78,70,1.508,71,2.203,72,1.78,73,3.797,74,2.665,75,2.665,76,2.665,77,1.31,78,0.013,79,0.011,80,0.007,115,0.703,262,1.162,265,1.119,267,1.162,307,0.934,308,0.884,378,1.154,682,3.88,683,3.973,684,2.592,685,2.592,686,2.592,687,2.592,688,2.592,689,2.214]],["title/components/PaginationComponent.html",[81,0.815,130,1.336]],["body/components/PaginationComponent.html",[3,0.155,4,0.137,5,0.137,6,1.701,7,2.804,8,2.804,10,1.157,11,1.303,12,1.466,13,1.222,15,0.555,18,2.439,19,2.517,22,0.252,24,0.705,25,0.021,26,0.26,28,0.295,32,0.772,33,0.155,38,1.303,40,1.396,46,0.232,47,1.303,48,1.056,53,2.064,58,2.343,78,0.007,79,0.011,80,0.007,81,1.256,82,0.963,83,1.721,84,1.222,85,1.222,86,1.222,87,1.222,89,1.148,90,3.094,91,2.907,92,1.831,94,1.831,96,1.222,109,0.963,110,1.831,111,1.721,112,1.222,113,2.439,114,1.222,115,0.84,116,1.222,117,0.911,118,1.222,119,1.222,120,0.911,121,1.62,122,1.222,123,0.963,124,0.555,125,1.222,126,0.963,127,1.222,128,0.963,129,1.222,130,1.923,131,1.222,132,0.963,133,2.613,134,1.222,135,1.222,136,1.222,262,1.157,265,1.593,267,1.542,296,1.831,297,2.509,298,2.434,299,2.434,303,2.997,307,0.621,308,0.587,310,2.181,315,1.501,343,2.932,412,3.242,469,2.698,516,2.997,555,3.303,559,2.932,565,4.555,573,3.906,640,3.789,690,2.204,691,3.303,692,4.637,693,3.866,694,3.303,695,3.906,696,3.303,697,4.637,698,4.637,699,4.637,700,3.962,701,4.637,702,3.866,703,2.579,704,2.579,705,2.579,706,2.579,707,2.579,708,2.579,709,3.303,710,2.579,711,2.579,712,2.579,713,2.579,714,2.204,715,2.204,716,2.204,717,2.204,718,2.579,719,2.579,720,3.866,721,3.303,722,2.932,723,3.866]],["title/components/PaginationControllerComponent.html",[81,0.815,132,1.336]],["body/components/PaginationControllerComponent.html",[3,0.16,4,0.141,5,0.141,6,1.648,7,2.716,8,2.716,10,1.413,12,0.84,15,0.572,19,1.978,22,0.259,23,0.851,24,0.451,25,0.021,26,0.266,28,0.303,32,0.795,33,0.16,38,1.342,46,0.238,48,0.9,53,2.1,58,2.385,65,0.675,78,0.008,79,0.011,80,0.008,81,1.075,82,0.992,83,1.759,84,1.258,85,1.258,86,1.258,87,1.258,89,1.182,90,3.115,91,2.927,92,1.872,94,1.872,96,1.258,101,3.589,109,0.992,110,1.872,111,1.759,112,1.258,113,2.475,114,1.258,115,0.946,116,1.258,117,0.938,118,1.258,119,1.258,120,0.938,121,1.656,122,1.258,123,0.992,124,0.572,125,1.258,126,0.992,127,1.258,128,0.992,129,1.258,130,0.992,131,1.258,132,1.952,133,3.115,134,1.258,135,1.258,136,1.258,262,1.183,265,1.533,267,1.565,296,1.872,297,2.553,303,3.041,307,0.951,308,0.9,310,2.209,311,1.952,312,1.845,359,4.915,516,3.041,518,2.488,640,1.824,691,4.465,695,3.964,724,2.27,725,5.227,726,3.952,727,5.227,728,3.952,729,3.952,730,3.952,731,2.3,732,3.377,733,4.719,734,3.952,735,3.241,736,3.241,737,2.657,738,4.021,739,3.952,740,2.657,741,2.657,742,2.657,743,3.377,744,2.657,745,3.952,746,2.657,747,3.952,748,2.657,749,3.952,750,3.952,751,2.657,752,2.657,753,2.015,754,2.657,755,2.657,756,2.657,757,2.657]],["title/components/PaginationPagesPanelComponent.html",[32,1.071,81,0.815]],["body/components/PaginationPagesPanelComponent.html",[3,0.149,4,0.132,5,0.132,6,1.588,7,2.618,8,2.618,9,2.958,10,2.153,12,1.714,13,1.172,15,0.533,19,2.483,22,0.242,23,0.807,24,0.677,25,0.021,26,0.252,28,0.283,31,1.172,32,1.51,33,0.149,38,1.251,40,2.447,46,0.222,47,2.882,48,0.854,53,2.013,58,2.286,62,0.783,65,0.629,71,1.172,78,0.007,79,0.011,80,0.007,81,1.234,82,0.924,83,1.668,84,1.172,85,1.172,86,1.172,87,1.172,89,1.102,90,3.064,91,2.879,92,1.775,94,1.775,96,1.172,109,0.924,110,1.775,111,1.668,112,1.172,113,2.389,114,1.172,115,0.981,116,1.172,117,0.874,118,1.172,119,1.172,120,0.874,121,1.571,122,1.172,123,0.924,124,0.533,125,1.172,126,0.924,127,1.172,128,0.924,129,1.172,130,1.689,131,1.172,132,0.924,133,2.958,134,1.172,135,1.172,136,1.172,262,1.122,265,1.468,267,1.354,296,1.775,297,2.447,298,2.359,299,2.359,303,2.935,307,1.089,308,1.03,310,1.995,311,0.924,312,0.874,315,1.44,363,4.737,469,1.44,559,2.842,565,3.43,573,2.842,640,3.106,694,3.202,696,3.202,700,3.864,709,3.202,714,3.864,715,4.31,716,2.115,717,2.115,732,3.202,758,2.115,759,3.748,760,3.748,761,3.748,762,4.523,763,3.748,764,4.523,765,3.748,766,2.475,767,3.748,768,2.475,769,2.475,770,2.475,771,2.475,772,3.748,773,2.475,774,2.475,775,2.475,776,2.475,777,2.475,778,2.475,779,5.045]],["title/interfaces/PlaceholderPageItem.html",[0,0.815,34,1.936]],["body/interfaces/PlaceholderPageItem.html",[0,1.17,1,2.781,2,1.292,3,0.185,4,0.164,5,0.164,6,0.784,7,1.292,8,1.292,9,1.46,10,1.776,11,1.558,12,1.625,13,1.46,14,1.668,15,0.664,16,3.851,17,2.563,18,2.809,19,2.92,20,1.94,21,3.025,22,0.502,23,0.948,24,0.766,25,0.022,26,0.207,27,0.896,28,0.352,29,3.025,30,3.025,31,2.434,32,1.319,33,0.356,34,2.781,35,3.025,36,2.117,37,2.781,38,3.117,39,3.025,40,1.668,41,1.679,42,3.263,43,1.94,44,1.372,45,1.151,46,0.277,47,1.558,48,0.702,49,2.117,50,3.529,51,3.851,52,2.117,53,2.746,54,2.117,55,2.773,56,3.025,57,2.563,58,1.558,59,2.117,60,2.117,61,2.117,62,1.625,63,2.117,64,1.94,65,0.784,66,2.117,67,2.117,68,3.025,69,2.117,70,1.793,71,2.434,72,2.117,73,4.073,74,3.025,75,3.025,76,3.025,77,1.558,78,0.015,79,0.013,80,0.009]],["title/modules/SharedModule.html",[137,1.195,198,1.936]],["body/modules/SharedModule.html",[3,0.264,4,0.233,5,0.233,15,0.944,25,0.022,26,0.468,28,0.501,33,0.264,46,0.394,78,0.013,79,0.016,80,0.013,137,1.868,139,2.58,146,2.826,147,3.026,148,2.216,181,2.077,182,2.216,190,2.761,198,3.026,210,3.012,211,1.465,216,3.012,217,2.216,240,2.552,256,3.747,349,3.326,368,2.216,780,4.386,781,5.592,782,4.778,783,5.592,784,4.386,785,3.012,786,4.386,787,5.592,788,5.592,789,3.747,790,4.386,791,4.386,792,4.386,793,4.386,794,4.386,795,4.386,796,4.386]],["title/interfaces/SharedState.html",[0,0.815,797,2.713]],["body/interfaces/SharedState.html",[0,1.072,2,1.974,3,0.283,4,0.25,5,0.25,22,0.46,23,1.259,24,0.538,25,0.021,26,0.428,33,0.4,41,1.904,78,0.013,79,0.017,80,0.013,211,1.573,214,2.74,254,2.964,368,2.38,401,4.016,402,4.016,403,3.571,408,2.964,797,4.435,798,3.571,799,5.188,800,4.188,801,4.016,802,4.709,803,3.571,804,4.023]],["title/interceptors/ShowLoaderInterceptor.html",[199,2.252,805,3.056]],["body/interceptors/ShowLoaderInterceptor.html",[3,0.255,4,0.226,5,0.226,22,0.415,24,0.626,25,0.021,26,0.446,27,1.114,28,0.485,33,0.255,46,0.381,48,1.247,62,1.342,65,1.08,78,0.012,79,0.016,80,0.012,115,0.992,155,5.473,156,2.673,199,3.448,245,4.598,262,1.64,265,1.318,267,1.271,296,2.011,307,1.318,308,1.247,436,2.673,437,2.297,494,4.164,635,4.274,641,3.627,722,4.598,806,4.246,807,5.18,808,3.627,809,5.477,810,4.246,811,4.246,812,5.477,813,6.406,814,4.246,815,4.246,816,4.246,817,5.477,818,4.246,819,4.246,820,4.246,821,4.246]],["title/pipes/StringifyConsentPipe.html",[340,2.252,657,2.252]],["body/pipes/StringifyConsentPipe.html",[3,0.252,4,0.223,5,0.223,6,1.383,15,0.905,17,3.165,24,0.48,25,0.021,26,0.366,28,0.48,33,0.252,41,1.258,46,0.377,62,1.328,78,0.012,79,0.016,80,0.012,89,1.87,115,1.092,124,1.374,158,1.62,262,1.258,265,1.011,267,1.258,296,1.99,307,1.011,308,0.957,312,1.483,323,4.647,340,3.424,355,4.125,411,2.444,470,2.444,588,3.589,589,3.186,590,3.589,591,3.589,593,3.589,594,3.589,595,3.589,657,3.424,689,4.647,731,3.165,822,4.201,823,4.647,824,3.589,825,5.44,826,4.201,827,5.44,828,6.033,829,6.609,830,4.201,831,5.44,832,4.201,833,4.201,834,4.201,835,4.201,836,4.201,837,4.201,838,4.201]],["title/injectables/TableHandlerService.html",[27,0.728,738,2.457]],["body/injectables/TableHandlerService.html",[3,0.198,4,0.175,5,0.175,6,1.708,15,0.71,19,2.236,22,0.322,23,0.995,24,0.528,25,0.021,26,0.389,27,0.94,28,0.377,33,0.198,38,2.335,44,1.468,45,1.232,46,0.296,48,1.052,53,2.374,58,2.696,65,0.839,78,0.009,79,0.013,80,0.009,115,0.837,158,1.241,211,1.102,262,1.384,265,1.591,267,1.597,295,3.505,307,1.112,308,1.052,310,2.109,311,2.158,312,2.04,378,1.468,382,3.173,383,3.505,385,3.97,386,4.766,388,2.265,395,2.818,397,2.818,425,1.468,483,2.5,516,3.541,517,2.265,518,3.358,695,4.383,735,3.969,736,3.969,738,3.173,743,3.948,753,5.093,839,5.737,840,2.818,841,4.621,842,3.299,843,3.299,844,3.299,845,4.621,846,3.299,847,4.621,848,3.299,849,4.621,850,4.621,851,3.299,852,2.502,853,2.502,854,3.299,855,3.299,856,3.299]],["title/injectables/UiEffects.html",[27,0.728,785,2.457]],["body/injectables/UiEffects.html",[3,0.245,4,0.217,5,0.217,22,0.399,23,1.15,24,0.466,25,0.022,26,0.44,27,1.086,28,0.466,33,0.245,46,0.366,48,1.216,65,1.358,78,0.012,79,0.015,80,0.012,115,0.739,217,2.063,240,3.462,265,1.285,307,0.983,308,0.93,311,1.525,312,1.441,378,1.817,414,3.096,415,5.095,418,4.513,419,4.05,425,2.377,430,3.096,436,2.57,459,3.973,731,3.107,785,3.667,789,3.488,857,3.488,858,5.95,859,6.311,860,4.083,861,5.34,862,5.95,863,5.34,864,5.34,865,4.05,866,4.083,867,4.05,868,4.562,869,3.488]],["title/injectables/UiService.html",[27,0.728,635,2.252]],["body/injectables/UiService.html",[3,0.209,4,0.185,5,0.185,15,1.181,18,2.271,22,0.34,23,1.032,24,0.627,25,0.021,26,0.398,27,0.975,28,0.397,33,0.209,44,1.548,45,1.299,46,0.312,48,1.092,57,2.79,65,0.884,78,0.01,79,0.014,80,0.01,99,3.018,115,0.993,211,1.162,240,3.895,262,1.436,265,1.423,267,1.436,307,1.321,308,1.249,310,1.896,311,1.299,312,2.088,378,1.548,382,3.293,385,4.037,386,3.768,388,2.389,393,3.723,411,3.192,412,3.454,425,2.134,445,4.096,459,3.454,483,2.594,589,3.636,635,3.018,731,3.441,799,3.636,867,4.983,868,5.052,870,2.972,871,4.485,872,3.768,873,4.795,874,4.795,875,3.478,876,4.096,877,4.795,878,4.795,879,3.478,880,4.795,881,4.795,882,3.478,883,3.478,884,3.478,885,3.478]],["title/interfaces/UiState.html",[0,0.815,800,2.252]],["body/interfaces/UiState.html",[0,1.027,2,1.89,3,0.271,4,0.24,5,0.24,18,2.696,22,0.44,23,1.226,24,0.515,25,0.021,26,0.383,33,0.375,41,1.704,78,0.013,79,0.016,80,0.013,99,3.583,211,1.506,240,3.312,393,4.46,412,3.926,425,2.533,476,3.909,479,3.583,483,3.544,731,3.312,800,3.926,801,3.097,865,3.42,869,3.853,872,3.097,876,4.863,886,3.42,887,5.692,888,5.692,889,3.853]],["title/coverage.html",[890,4.176]],["body/coverage.html",[0,1.301,1,0.926,5,0.091,6,1.8,7,2.327,8,2.248,9,2.306,10,1.539,11,2.291,12,1.806,13,2.147,14,2.453,24,0.195,25,0.021,27,1.129,32,0.512,34,0.926,37,0.926,42,0.996,46,0.154,47,0.865,77,3.686,78,0.005,79,0.008,80,0.005,81,1.264,82,0.639,88,1.462,117,0.604,120,0.604,123,0.639,124,0.766,126,0.639,128,0.639,130,0.639,132,0.639,140,3.113,141,3.113,158,0.46,160,1.175,169,2.393,174,1.077,175,1.298,180,1.516,199,1.077,214,1.63,224,1.298,245,1.298,252,1.462,259,1.298,261,1.462,275,1.298,276,1.077,279,1.298,282,1.63,286,1.516,293,1.462,295,1.298,305,1.077,324,2.697,340,1.077,350,1.175,355,1.298,359,1.298,363,1.298,368,1.797,372,1.175,374,1.298,379,1.462,380,1.462,384,0.996,387,1.175,396,1.298,399,1.298,400,3.117,404,1.175,406,1.298,408,2.239,409,1.462,413,1.462,416,1.077,424,1.175,432,1.298,438,1.175,439,2.746,440,3.529,441,2.78,442,1.462,456,1.175,459,1.077,461,1.175,462,1.462,463,1.462,464,0.996,469,0.996,473,3.117,477,1.298,479,2.239,481,1.175,484,1.298,486,1.462,487,1.462,497,1.462,510,3.897,516,0.996,517,1.175,518,1.077,519,1.298,520,1.298,521,1.298,525,1.298,537,2.124,538,1.462,553,1.298,554,1.462,626,1.298,627,3.117,629,1.298,630,1.462,635,1.077,647,1.462,648,1.462,657,1.077,690,1.462,724,1.462,735,1.175,736,1.175,738,1.175,753,1.298,758,1.462,785,1.175,797,1.298,798,3.117,800,1.077,801,1.175,803,1.298,805,1.462,807,1.462,808,1.462,823,1.462,824,1.462,839,1.462,840,1.462,852,1.298,853,1.298,857,1.462,870,1.462,871,1.298,872,1.175,886,2.697,890,1.462,891,1.711,892,1.711,893,1.711,894,4.11,895,7.218,896,1.711,897,1.711,898,7.209,899,2.801,900,2.801,901,1.462,902,1.711,903,4.11,904,2.801,905,4.11,906,4.11,907,2.801,908,2.801,909,2.801,910,1.711,911,1.711,912,3.556,913,4.159,914,4.534,915,4.391,916,1.462,917,1.462,918,1.462,919,1.711,920,1.711,921,2.801,922,2.801,923,2.393,924,1.711,925,1.711,926,1.711,927,1.711,928,1.462,929,1.462,930,2.393,931,2.393,932,1.462,933,1.462,934,1.462,935,2.393,936,1.462,937,1.462,938,1.711]],["title/dependencies.html",[188,2.504,939,2.985]],["body/dependencies.html",[25,0.021,28,0.519,78,0.013,79,0.016,80,0.013,145,3.449,148,2.298,152,3.449,153,3.123,157,3.886,188,2.646,205,4.889,206,3.93,211,1.911,213,3.886,217,2.298,221,3.123,222,3.123,278,2.863,437,2.461,515,3.886,575,3.449,940,4.548,941,6.063,942,4.548,943,5.723,944,4.548,945,4.548,946,4.548,947,4.548,948,4.548,949,6.772,950,4.548,951,4.548,952,4.548,953,4.548,954,4.548,955,4.548,956,4.548,957,4.548,958,4.548,959,4.548,960,4.548]],["title/miscellaneous/functions.html",[961,1.737,962,3.677]],["body/miscellaneous/functions.html",[22,0.527,25,0.019,78,0.015,79,0.018,80,0.015,115,0.976,140,3.703,141,4.633,170,4.607,174,4.247,180,3.435,307,1.298,308,1.228,961,3.138,962,4.607,963,5.423,964,5.393,965,5.393]],["title/index.html",[22,0.292,966,2.985,967,2.985]],["body/index.html",[4,0.231,25,0.016,78,0.012,79,0.016,80,0.012,81,1.397,91,1.936,115,0.788,142,5.24,153,3.82,202,2.738,270,3.716,469,2.531,568,3.716,669,3.716,683,5.24,782,3.716,941,3.716,968,4.35,969,5.563,970,4.35,971,6.133,972,4.35,973,4.35,974,6.681,975,6.947,976,4.35,977,4.35,978,4.35,979,4.35,980,4.35,981,4.35,982,4.35,983,4.35,984,4.35,985,6.133,986,4.35,987,6.681,988,4.35,989,4.35,990,4.35,991,4.35,992,4.35,993,4.35,994,3.716,995,5.563,996,5.563,997,6.464,998,5.563,999,5.563,1000,4.35,1001,6.464,1002,4.35,1003,4.35,1004,6.133,1005,4.35,1006,4.35,1007,4.35]],["title/modules.html",[139,2.049]],["body/modules.html",[25,0.018,78,0.015,79,0.018,80,0.015,138,3.231,139,2.151,187,3.525,197,3.231,198,2.777,206,4.537,336,3.525,341,3.231,596,3.231,600,3.231,1008,7.009,1009,7.009,1010,7.258,1011,6.607,1012,6.607]],["title/overview.html",[1013,4.176]],["body/overview.html",[2,1.556,25,0.021,32,1.699,46,0.333,71,2.688,78,0.011,79,0.014,80,0.011,82,2.496,83,1.652,109,1.386,117,2.004,120,2.004,123,2.119,126,2.119,128,2.119,130,2.119,132,2.119,137,1.24,138,3.573,139,1.556,181,1.758,186,2.009,187,4.982,188,2.16,189,2.55,190,2.337,191,2.009,192,3.172,193,3.172,194,3.172,195,3.172,196,3.172,197,3.573,198,3.434,199,3.573,200,3.442,201,2.55,202,2.337,336,4.963,337,3.172,338,3.172,339,3.172,340,3.573,341,3.573,378,1.652,484,2.816,596,4.384,597,3.172,598,3.172,599,3.172,600,3.573,657,2.337,901,3.172,1013,3.172,1014,5.013,1015,5.013]],["title/routes.html",[186,2.645]],["body/routes.html",[25,0.019,78,0.017,79,0.019,80,0.017,186,3.129]],["title/miscellaneous/typealiases.html",[961,1.737,1016,4.304]],["body/miscellaneous/typealiases.html",[1,2.889,6,1.358,7,2.238,8,2.238,9,2.529,10,1.598,11,2.698,12,2.124,13,2.529,14,3.414,22,0.521,24,0.61,25,0.02,34,2.889,37,2.889,40,3.414,78,0.015,79,0.018,80,0.015,961,3.106,1017,5.339,1018,4.561]],["title/miscellaneous/variables.html",[961,1.737,1019,3.677]],["body/miscellaneous/variables.html",[6,1.161,7,0.629,8,0.629,9,0.711,10,0.449,11,0.758,12,1.025,13,0.711,14,1.359,18,1.535,19,1.358,22,0.317,24,0.747,25,0.022,41,1.367,42,1.462,43,0.945,53,2.157,62,1.533,70,0.873,71,1.999,77,2.449,78,0.004,79,0.007,80,0.004,115,0.272,121,0.629,124,1.044,140,1.031,141,2.603,151,1.282,158,1.623,159,1.282,160,2.226,161,1.282,162,0.945,163,1.282,164,1.031,165,2.769,166,1.031,167,1.031,168,1.282,174,0.945,175,1.906,176,1.582,177,2.147,178,1.282,179,2.147,180,2.283,185,1.725,214,2.206,254,2.04,275,1.138,276,1.582,279,1.906,311,2.656,312,2.511,368,2.307,384,2.455,385,0.945,387,1.725,391,1.138,392,1.725,393,2.04,396,1.906,400,1.138,401,2.226,402,2.226,404,2.226,406,1.906,407,1.282,408,2.873,411,2.656,424,1.725,425,2.262,432,1.906,439,1.443,440,1.725,441,1.359,455,1.582,456,1.725,459,1.582,464,0.873,465,1.138,473,2.875,474,2.147,475,2.147,476,2.226,477,1.906,478,1.906,479,3.326,480,1.138,481,2.226,482,1.282,483,3.393,510,1.138,513,1.282,516,1.462,517,1.725,518,1.582,519,1.906,520,3.462,521,1.906,522,1.282,523,1.282,524,1.282,525,2.458,526,2.147,527,1.282,528,1.282,529,1.282,530,1.282,531,1.282,532,3.238,533,2.147,534,1.282,535,2.769,536,1.282,540,1.138,627,1.138,629,1.906,721,1.282,722,1.138,731,0.873,735,1.725,736,1.725,798,1.138,799,2.458,800,0.945,801,2.226,803,1.906,804,1.282,852,1.906,853,1.906,865,1.906,867,1.138,871,1.906,872,1.725,886,1.138,889,1.282,913,1.282,915,1.282,916,4.141,917,1.282,918,2.769,923,2.769,928,1.282,929,2.147,930,1.282,931,1.282,932,2.147,933,1.282,934,1.282,935,1.282,936,2.147,937,2.147,961,0.873,963,3.238,994,2.147,1018,1.282,1019,1.282,1020,4.565,1021,5.284,1022,4.22,1023,2.513,1024,1.501,1025,1.501,1026,4.847,1027,2.513,1028,4.565,1029,2.513,1030,2.513,1031,2.513,1032,1.501,1033,1.501,1034,1.501,1035,5.456,1036,2.513,1037,4.847,1038,2.513,1039,1.501,1040,2.513,1041,4.565,1042,1.501,1043,3.241,1044,2.513,1045,1.501,1046,1.501,1047,1.501,1048,3.241,1049,2.513,1050,2.513,1051,1.501,1052,1.501,1053,1.501,1054,1.501,1055,1.501,1056,1.501]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":77,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/ConsentsState.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.10.2",{"_index":960,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":954,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":895,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":914,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":894,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":897,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":71,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/ConsentsState.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.10.0",{"_index":958,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":912,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":902,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":911,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":907,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":906,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":896,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":900,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":925,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":909,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":901,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["100",{"_index":324,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/MainAreaComponent.html":{},"coverage.html":{}}}],["1000",{"_index":646,"title":{},"body":{"components/LoaderComponent.html":{}}}],["1000px",{"_index":335,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["11",{"_index":908,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":924,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":325,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/MainAreaComponent.html":{}}}],["2",{"_index":70,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/ConsentsState.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":955,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":922,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":904,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":920,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":899,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":672,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["240px",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["25",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["2500",{"_index":796,"title":{},"body":{"modules/SharedModule.html":{}}}],["25px",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["28",{"_index":919,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":927,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":905,"title":{},"body":{"coverage.html":{}}}],["4.1.0",{"_index":951,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":43,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"miscellaneous/variables.html":{}}}],["50",{"_index":903,"title":{},"body":{"coverage.html":{}}}],["500px",{"_index":552,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["6.5.4",{"_index":956,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":926,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":921,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":910,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1014,"title":{},"body":{"overview.html":{}}}],["9",{"_index":1015,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":945,"title":{},"body":{"dependencies.html":{}}}],["9.1.0",{"_index":949,"title":{},"body":{"dependencies.html":{}}}],["9.1.4",{"_index":941,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["9.2.2",{"_index":943,"title":{},"body":{"dependencies.html":{}}}],["a.active",{"_index":678,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["absolute",{"_index":644,"title":{},"body":{"components/LoaderComponent.html":{}}}],["action",{"_index":475,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"miscellaneous/variables.html":{}}}],["actionreducermap",{"_index":401,"title":{},"body":{"interfaces/CollectedConsentsState.html":{},"interfaces/GiveConsentState.html":{},"interfaces/SharedState.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":415,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/UiEffects.html":{}}}],["activatedroutesnapshot",{"_index":490,"title":{},"body":{"guards/ConsentsResolverService.html":{}}}],["activepagenumber",{"_index":39,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["activepagenumberitem",{"_index":1,"title":{"interfaces/ActivePageNumberItem.html":{}},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["actual_component",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["add",{"_index":75,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["address",{"_index":583,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["ads",{"_index":591,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"pipes/StringifyConsentPipe.html":{}}}],["agree",{"_index":586,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["aliases",{"_index":1017,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular",{"_index":142,"title":{},"body":{"modules/AppMockModule.html":{},"index.html":{}}}],["angular/animations",{"_index":940,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":942,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"components/MainAreaComponent.html":{}}}],["angular/common",{"_index":148,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":156,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"injectables/ConsentsService.html":{},"modules/GiveConsentModule.html":{},"interceptors/ShowLoaderInterceptor.html":{}}}],["angular/compiler",{"_index":944,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":28,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":575,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":947,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{}}}],["angular/material/card",{"_index":612,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["angular/material/checkbox",{"_index":615,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["angular/material/icon",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{}}}],["angular/material/input",{"_index":606,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["angular/material/list",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/paginator",{"_index":358,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["angular/material/progress",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/radio",{"_index":610,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["angular/material/select",{"_index":608,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["angular/material/sidenav",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":789,"title":{},"body":{"modules/SharedModule.html":{},"injectables/UiEffects.html":{}}}],["angular/material/table",{"_index":319,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{}}}],["angular/material/toolbar",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"guards/ConsentsResolverService.html":{},"modules/GiveConsentRoutingModule.html":{},"dependencies.html":{}}}],["anonymous",{"_index":593,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"pipes/StringifyConsentPipe.html":{}}}],["app",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"index.html":{}}}],["app.component",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":82,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmockmodule",{"_index":138,"title":{"modules/AppMockModule.html":{}},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appmockroutes",{"_index":175,"title":{},"body":{"modules/AppMockModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":187,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":259,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":197,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/MainAreaComponent.html":{}}}],["area'},{'name",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["area.component",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["area.component.html",{"_index":650,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["area.component.scss",{"_index":649,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["area.component.ts",{"_index":648,"title":{},"body":{"components/MainAreaComponent.html":{},"coverage.html":{}}}],["area.component.ts:12",{"_index":663,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["area.component.ts:16",{"_index":661,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["area.component.ts:20",{"_index":655,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["area/main",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"components/MainAreaComponent.html":{},"coverage.html":{}}}],["args",{"_index":828,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["array(4)].map((_",{"_index":159,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/variables.html":{}}}],["artifacts",{"_index":988,"title":{},"body":{"index.html":{}}}],["atleastonepermissionrequiredvalidator",{"_index":558,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["atleastonpermissionrequired",{"_index":570,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["automatically",{"_index":980,"title":{},"body":{"index.html":{}}}],["available",{"_index":1009,"title":{},"body":{"modules.html":{}}}],["background",{"_index":674,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["bar",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"components/LoaderComponent.html":{},"modules/SharedModule.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{}}}],["before",{"_index":74,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["beta.29",{"_index":946,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":783,"title":{},"body":{"modules/SharedModule.html":{}}}],["body",{"_index":76,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["boolean",{"_index":412,"title":{},"body":{"interfaces/Consent.html":{},"components/GiveConsentFormComponent.html":{},"components/PaginationComponent.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{}}}],["bootstrap",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"overview.html":{}}}],["bottom",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{}}}],["breakpointobserver",{"_index":654,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["breakpoints",{"_index":664,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["browse",{"_index":1010,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":271,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":987,"title":{},"body":{"index.html":{}}}],["button",{"_index":21,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["calculate",{"_index":49,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["calculatestartindex",{"_index":682,"title":{},"body":{"injectables/PagesPanelGeneratorService.html":{}}}],["calculatestartindex(totalpages",{"_index":66,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["calculatetotalpagescount",{"_index":525,"title":{},"body":{"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calculatetotalpagescount(consentsstate",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calculatetotalpagescount(state",{"_index":533,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["callback",{"_index":179,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/variables.html":{}}}],["cannext",{"_index":697,"title":{},"body":{"components/PaginationComponent.html":{}}}],["canprev",{"_index":698,"title":{},"body":{"components/PaginationComponent.html":{}}}],["catcherror",{"_index":434,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{}}}],["catcherror((e",{"_index":450,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["catcherror(error",{"_index":426,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["center",{"_index":55,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/CollectedConsentsComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["central",{"_index":760,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["change",{"_index":982,"title":{},"body":{"index.html":{}}}],["changedetection",{"_index":298,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["changedetectionstrategy",{"_index":315,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":299,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["changepagenumber",{"_index":694,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["changepagenumber(pagenumber",{"_index":709,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["changes",{"_index":774,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["check",{"_index":568,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"index.html":{}}}],["chevron_left",{"_index":720,"title":{},"body":{"components/PaginationComponent.html":{}}}],["chevron_right",{"_index":723,"title":{},"body":{"components/PaginationComponent.html":{}}}],["class",{"_index":46,"title":{"classes/AppPage.html":{}},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":260,"title":{},"body":{"classes/AppPage.html":{}}}],["cli",{"_index":971,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_collectedconsentsmodule",{"_index":337,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"overview.html":{}}}],["cluster_collectedconsentsmodule_declarations",{"_index":338,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"overview.html":{}}}],["cluster_collectedconsentsmodule_imports",{"_index":339,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"overview.html":{}}}],["cluster_giveconsentmodule",{"_index":597,"title":{},"body":{"modules/GiveConsentModule.html":{},"overview.html":{}}}],["cluster_giveconsentmodule_declarations",{"_index":598,"title":{},"body":{"modules/GiveConsentModule.html":{},"overview.html":{}}}],["cluster_giveconsentmodule_imports",{"_index":599,"title":{},"body":{"modules/GiveConsentModule.html":{},"overview.html":{}}}],["code",{"_index":782,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["collected",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["collectedconsents",{"_index":407,"title":{},"body":{"interfaces/CollectedConsentsState.html":{},"miscellaneous/variables.html":{}}}],["collectedconsentscomponent",{"_index":117,"title":{"components/CollectedConsentsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["collectedconsentsfeaturekey",{"_index":406,"title":{},"body":{"interfaces/CollectedConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["collectedconsentsmodule",{"_index":336,"title":{"modules/CollectedConsentsModule.html":{}},"body":{"modules/CollectedConsentsModule.html":{},"modules.html":{},"overview.html":{}}}],["collectedconsentsroutingmodule",{"_index":341,"title":{"modules/CollectedConsentsRoutingModule.html":{}},"body":{"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["collectedconsentsservice",{"_index":305,"title":{"injectables/CollectedConsentsService.html":{}},"body":{"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"guards/ConsentsResolverService.html":{},"coverage.html":{}}}],["collectedconsentsstate",{"_index":399,"title":{"interfaces/CollectedConsentsState.html":{}},"body":{"interfaces/CollectedConsentsState.html":{},"coverage.html":{}}}],["color",{"_index":679,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["commonmodule",{"_index":147,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules/SharedModule.html":{}}}],["component",{"_index":81,"title":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsRoutingModule.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentRoutingModule.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["components",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"overview.html":{}}}],["components/collected",{"_index":345,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{}}}],["components/give",{"_index":602,"title":{},"body":{"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{}}}],["components/loader/loader.component",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["components/main",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["consent",{"_index":124,"title":{"interfaces/Consent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"interfaces/Consent.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"pipes/StringifyConsentPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consent'},{'name",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["consent.component",{"_index":603,"title":{},"body":{"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{}}}],["consent.component.html",{"_index":542,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["consent.component.scss",{"_index":541,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["consent.component.ts",{"_index":538,"title":{},"body":{"components/GiveConsentComponent.html":{},"coverage.html":{}}}],["consent.component.ts:14",{"_index":545,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["consent.component.ts:20",{"_index":548,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["consent.id",{"_index":523,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["consent.module').then(m",{"_index":283,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["consent.module.ts",{"_index":601,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["consent.pipe",{"_index":356,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["consent.pipe.ts",{"_index":824,"title":{},"body":{"pipes/StringifyConsentPipe.html":{},"coverage.html":{}}}],["consent.pipe.ts:12",{"_index":830,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["consent/components/give",{"_index":537,"title":{},"body":{"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"coverage.html":{}}}],["consent/give",{"_index":282,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"coverage.html":{}}}],["consent/routing/give",{"_index":624,"title":{},"body":{"modules/GiveConsentRoutingModule.html":{}}}],["consent/services/consents",{"_index":462,"title":{},"body":{"injectables/ConsentsManagementService.html":{},"coverage.html":{}}}],["consent/store/consents",{"_index":440,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{},"interfaces/ConsentsManagementState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consent/store/reducers.ts",{"_index":627,"title":{},"body":{"interfaces/GiveConsentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consent/stringify",{"_index":355,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"pipes/StringifyConsentPipe.html":{},"coverage.html":{}}}],["consents",{"_index":158,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"interfaces/ConsentsManagementState.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"modules/GiveConsentModule.html":{},"interfaces/GiveConsentState.html":{},"components/MainAreaComponent.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consents'},{'name",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["consents.actions",{"_index":433,"title":{},"body":{"injectables/ConsentsEffects.html":{},"interfaces/ConsentsState.html":{}}}],["consents.component",{"_index":346,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{}}}],["consents.component.html",{"_index":301,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["consents.component.scss",{"_index":300,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["consents.component.ts",{"_index":293,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"coverage.html":{}}}],["consents.component.ts:15",{"_index":314,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["consents.component.ts:16",{"_index":306,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["consents.component.ts:21",{"_index":309,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["consents.join",{"_index":838,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["consents.length",{"_index":168,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/variables.html":{}}}],["consents.module').then(m",{"_index":287,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["consents.module.ts",{"_index":342,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["consents.push('be",{"_index":835,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["consents.push('contribute",{"_index":837,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["consents.push('receive",{"_index":833,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["consents.service",{"_index":317,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"guards/ConsentsResolverService.html":{}}}],["consents.service.ts",{"_index":380,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"coverage.html":{}}}],["consents.service.ts:13",{"_index":389,"title":{},"body":{"injectables/CollectedConsentsService.html":{}}}],["consents.service.ts:22",{"_index":390,"title":{},"body":{"injectables/CollectedConsentsService.html":{}}}],["consents/collected",{"_index":286,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"guards/ConsentsResolverService.html":{},"coverage.html":{}}}],["consents/components/collected",{"_index":7,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/CollectedConsentsComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["consents/consents.reducer",{"_index":405,"title":{},"body":{"interfaces/CollectedConsentsState.html":{}}}],["consents/pagination",{"_index":8,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"modules/CollectedConsentsModule.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["consents/pipes/stringify",{"_index":823,"title":{},"body":{"pipes/StringifyConsentPipe.html":{},"coverage.html":{}}}],["consents/routing/collected",{"_index":371,"title":{},"body":{"modules/CollectedConsentsRoutingModule.html":{}}}],["consents/routing/resolvers/consents",{"_index":486,"title":{},"body":{"guards/ConsentsResolverService.html":{},"coverage.html":{}}}],["consents/services/collected",{"_index":379,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"coverage.html":{}}}],["consents/services/table",{"_index":839,"title":{},"body":{"injectables/TableHandlerService.html":{},"coverage.html":{}}}],["consents/store/consents/consents.actions.ts",{"_index":913,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["consents/store/consents/consents.effects.ts",{"_index":413,"title":{},"body":{"injectables/ConsentsEffects.html":{},"coverage.html":{}}}],["consents/store/consents/consents.effects.ts:10",{"_index":417,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["consents/store/consents/consents.effects.ts:17",{"_index":429,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["consents/store/consents/consents.reducer.ts",{"_index":510,"title":{},"body":{"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consents/store/consents/consents.selectors.ts",{"_index":915,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["consents/store/reducers.ts",{"_index":400,"title":{},"body":{"interfaces/CollectedConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consents/store/selector.ts",{"_index":917,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["consents_url",{"_index":500,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["consentsadapter",{"_index":521,"title":{},"body":{"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consentsadapter.getinitialstate",{"_index":524,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["consentsadapter.getselectors",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consentsadapter.setall(payload",{"_index":530,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["consentseffects",{"_index":350,"title":{"injectables/ConsentsEffects.html":{}},"body":{"modules/CollectedConsentsModule.html":{},"injectables/ConsentsEffects.html":{},"coverage.html":{}}}],["consentsfeaturekey",{"_index":519,"title":{},"body":{"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consentsmanagement",{"_index":478,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"interfaces/GiveConsentState.html":{},"miscellaneous/variables.html":{}}}],["consentsmanagementeffects",{"_index":438,"title":{"injectables/ConsentsManagementEffects.html":{}},"body":{"injectables/ConsentsManagementEffects.html":{},"modules/GiveConsentModule.html":{},"coverage.html":{}}}],["consentsmanagementreducer",{"_index":481,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"interfaces/GiveConsentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consentsmanagementservice",{"_index":461,"title":{"injectables/ConsentsManagementService.html":{}},"body":{"injectables/ConsentsManagementService.html":{},"components/GiveConsentComponent.html":{},"coverage.html":{}}}],["consentsmanagementstate",{"_index":464,"title":{"interfaces/ConsentsManagementState.html":{}},"body":{"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"interfaces/GiveConsentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consentsreducer",{"_index":404,"title":{},"body":{"interfaces/CollectedConsentsState.html":{},"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consentsresolverservice",{"_index":372,"title":{"guards/ConsentsResolverService.html":{}},"body":{"modules/CollectedConsentsRoutingModule.html":{},"guards/ConsentsResolverService.html":{},"coverage.html":{}}}],["consentsservice",{"_index":416,"title":{"injectables/ConsentsService.html":{}},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsService.html":{},"coverage.html":{}}}],["consentsstate",{"_index":384,"title":{"interfaces/ConsentsState.html":{}},"body":{"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consentsstate.currentpage",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":41,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"modules/AppMockModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/ConsentsManagementState.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"interfaces/SharedState.html":{},"pipes/StringifyConsentPipe.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":48,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"interceptors/ShowLoaderInterceptor.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{}}}],["constructor(actions",{"_index":414,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/UiEffects.html":{}}}],["constructor(breakpointobserver",{"_index":653,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["constructor(collectedconsentsservice",{"_index":304,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"guards/ConsentsResolverService.html":{}}}],["constructor(fb",{"_index":561,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["constructor(giveconsentservice",{"_index":544,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["constructor(httpclient",{"_index":501,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["constructor(loadingservice",{"_index":634,"title":{},"body":{"components/LoaderComponent.html":{}}}],["constructor(pagespanelgeneratorservice",{"_index":766,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["constructor(private",{"_index":665,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["constructor(store",{"_index":388,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{}}}],["constructor(tablehandlerservice",{"_index":737,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["constructor(uiservice",{"_index":810,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["container",{"_index":671,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["content",{"_index":273,"title":{},"body":{"classes/AppPage.html":{},"components/CollectedConsentsComponent.html":{},"components/MainAreaComponent.html":{}}}],["context",{"_index":936,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contribute",{"_index":592,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["controller",{"_index":725,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller'},{'name",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["controller.component",{"_index":360,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["controller.component.html",{"_index":734,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller.component.scss",{"_index":733,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller.component.ts",{"_index":724,"title":{},"body":{"components/PaginationControllerComponent.html":{},"coverage.html":{}}}],["controller.component.ts:14",{"_index":751,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller.component.ts:15",{"_index":746,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller.component.ts:16",{"_index":748,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller.component.ts:17",{"_index":739,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller.component.ts:23",{"_index":741,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller.component.ts:26",{"_index":740,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller.component.ts:30",{"_index":742,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller.component.ts:34",{"_index":744,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller/pagination",{"_index":359,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"components/PaginationControllerComponent.html":{},"coverage.html":{}}}],["controller/pagination/pagination",{"_index":9,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"modules/CollectedConsentsModule.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["controller/pagination/pagination.component",{"_index":361,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["controller/pagination/pagination.component.ts",{"_index":690,"title":{},"body":{"components/PaginationComponent.html":{},"coverage.html":{}}}],["controller/pagination/pagination.component.ts:23",{"_index":705,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:24",{"_index":706,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:25",{"_index":703,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:26",{"_index":704,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:28",{"_index":707,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:29",{"_index":708,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:30",{"_index":702,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:34",{"_index":712,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:37",{"_index":710,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:41",{"_index":711,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:45",{"_index":713,"title":{},"body":{"components/PaginationComponent.html":{}}}],["count",{"_index":60,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["coverage",{"_index":890,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createconsent",{"_index":180,"title":{},"body":{"modules/AppMockModule.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"injectables/ConsentsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createconsent(consent",{"_index":504,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["createconsent(req",{"_index":170,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/functions.html":{}}}],["createconsentfail",{"_index":456,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{},"interfaces/ConsentsManagementState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createconsentfeaturekey",{"_index":477,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["created",{"_index":344,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"injectables/ConsentsManagementEffects.html":{},"modules/GiveConsentModule.html":{}}}],["createeffect",{"_index":418,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/UiEffects.html":{}}}],["createentityadapter",{"_index":513,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["createfeatureselector(collectedconsentsfeaturekey",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createfeatureselector(sharedfeaturekey",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createreducer",{"_index":476,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"interfaces/ConsentsState.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["createselector",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectshared",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectuistate",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creating",{"_index":455,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"miscellaneous/variables.html":{}}}],["current",{"_index":61,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["currentindex",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentpage",{"_index":53,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/ConsentsState.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"injectables/TableHandlerService.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":171,"title":{},"body":{"modules/AppMockModule.html":{}}}],["declarations",{"_index":181,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["default",{"_index":311,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsService.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"miscellaneous/variables.html":{}}}],["defaultroute",{"_index":279,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":265,"title":{},"body":{"classes/AppPage.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{}}}],["dependencies",{"_index":188,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":15,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"modules/AppMockModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/Consent.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"components/LoaderComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{}}}],["dev",{"_index":977,"title":{},"body":{"index.html":{}}}],["development",{"_index":973,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["didomi",{"_index":668,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["didomitestapp",{"_index":968,"title":{},"body":{"index.html":{}}}],["direction",{"_index":330,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["directive",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["directives",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":986,"title":{},"body":{"index.html":{}}}],["directory",{"_index":991,"title":{},"body":{"index.html":{}}}],["dispatch",{"_index":864,"title":{},"body":{"injectables/UiEffects.html":{}}}],["display",{"_index":328,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["displayedcolumns",{"_index":302,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["displaying",{"_index":343,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"components/PaginationComponent.html":{}}}],["dist",{"_index":990,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":891,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":730,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["dom",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["dots",{"_index":30,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["dumb",{"_index":555,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"components/PaginationComponent.html":{}}}],["duration",{"_index":795,"title":{},"body":{"modules/SharedModule.html":{}}}],["dynamic",{"_index":948,"title":{},"body":{"dependencies.html":{}}}],["e.message",{"_index":452,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["e2e",{"_index":1002,"title":{},"body":{"index.html":{}}}],["e2e/src/app.po.ts",{"_index":261,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":269,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":266,"title":{},"body":{"classes/AppPage.html":{}}}],["effects",{"_index":443,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["effectsmodule",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"modules/SharedModule.html":{}}}],["effectsmodule.forfeature([consentseffects",{"_index":370,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["effectsmodule.forfeature([consentsmanagementeffects",{"_index":623,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["effectsmodule.forfeature([uieffects",{"_index":793,"title":{},"body":{"modules/SharedModule.html":{}}}],["effectsmodule.forroot",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["element",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["element(by.css('app",{"_index":272,"title":{},"body":{"classes/AppPage.html":{}}}],["element.email",{"_index":321,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["element.name",{"_index":320,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["email",{"_index":162,"title":{},"body":{"modules/AppMockModule.html":{},"components/CollectedConsentsComponent.html":{},"interfaces/Consent.html":{},"components/GiveConsentFormComponent.html":{},"miscellaneous/variables.html":{}}}],["enabled",{"_index":184,"title":{},"body":{"modules/AppMockModule.html":{}}}],["end",{"_index":1001,"title":{},"body":{"index.html":{}}}],["entity",{"_index":540,"title":{},"body":{"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"miscellaneous/variables.html":{}}}],["entityadapter",{"_index":514,"title":{},"body":{"interfaces/ConsentsState.html":{}}}],["entitystate",{"_index":512,"title":{},"body":{"interfaces/ConsentsState.html":{}}}],["environment",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/GiveConsentState.html":{},"interfaces/SharedState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/GiveConsentState.html":{},"interfaces/SharedState.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":474,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"miscellaneous/variables.html":{}}}],["error.message",{"_index":428,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["eventemitter",{"_index":565,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["execute",{"_index":998,"title":{},"body":{"index.html":{}}}],["export",{"_index":33,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{}}}],["exports",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":511,"title":{},"body":{"interfaces/ConsentsState.html":{}}}],["fail",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["failure",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["faker",{"_index":157,"title":{},"body":{"modules/AppMockModule.html":{},"dependencies.html":{}}}],["faker.internet.email",{"_index":163,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/variables.html":{}}}],["faker.name.findname",{"_index":161,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/variables.html":{}}}],["faker.random.boolean",{"_index":165,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":865,"title":{},"body":{"injectables/UiEffects.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":564,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["fb.group",{"_index":577,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["field",{"_index":887,"title":{},"body":{"interfaces/UiState.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"coverage.html":{}}}],["files",{"_index":983,"title":{},"body":{"index.html":{}}}],["finalize",{"_index":818,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["flag",{"_index":993,"title":{},"body":{"index.html":{}}}],["flex",{"_index":329,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["flexlayoutmodule",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["flexmodule",{"_index":362,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{}}}],["form",{"_index":539,"title":{},"body":{"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{}}}],["form'},{'name",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["form.component",{"_index":617,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["form.component.html",{"_index":557,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["form.component.scss",{"_index":556,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["form.component.ts",{"_index":554,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:15",{"_index":566,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["form.component.ts:17",{"_index":563,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["form.component.ts:35",{"_index":567,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["form.component.ts:44",{"_index":571,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["form.component.ts:47",{"_index":572,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["form/give",{"_index":553,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"coverage.html":{}}}],["format",{"_index":585,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["formbuilder",{"_index":562,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["formgroup",{"_index":569,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["formgroup.value",{"_index":580,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["fromcollectedconsents",{"_index":348,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["fromcollectedconsents.collectedconsentsfeaturekey",{"_index":366,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["fromcollectedconsents.metareducers",{"_index":369,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["fromcollectedconsents.reducers",{"_index":367,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["fromgiveconsent",{"_index":618,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["fromgiveconsent.metareducers",{"_index":622,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["fromgiveconsent.reducers",{"_index":621,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["fromshared",{"_index":784,"title":{},"body":{"modules/SharedModule.html":{}}}],["fromshared.metareducers",{"_index":792,"title":{},"body":{"modules/SharedModule.html":{}}}],["fromshared.reducers",{"_index":791,"title":{},"body":{"modules/SharedModule.html":{}}}],["full",{"_index":291,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentRoutingModule.html":{}}}],["function",{"_index":169,"title":{},"body":{"modules/AppMockModule.html":{},"coverage.html":{}}}],["functions",{"_index":962,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["further",{"_index":1003,"title":{},"body":{"index.html":{}}}],["gateway",{"_index":498,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["generate",{"_index":683,"title":{},"body":{"injectables/PagesPanelGeneratorService.html":{},"index.html":{}}}],["generate(totalpages",{"_index":686,"title":{},"body":{"injectables/PagesPanelGeneratorService.html":{}}}],["generated",{"_index":970,"title":{},"body":{"index.html":{}}}],["generator.service",{"_index":716,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["generator.service.ts",{"_index":14,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["generator.service.ts:33",{"_index":684,"title":{},"body":{"injectables/PagesPanelGeneratorService.html":{}}}],["generator.service.ts:45",{"_index":685,"title":{},"body":{"injectables/PagesPanelGeneratorService.html":{}}}],["generator.service.ts:60",{"_index":687,"title":{},"body":{"injectables/PagesPanelGeneratorService.html":{}}}],["generator/pages",{"_index":13,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["getconsents",{"_index":174,"title":{},"body":{"modules/AppMockModule.html":{},"injectables/ConsentsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":966,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":263,"title":{},"body":{"classes/AppPage.html":{}}}],["give",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["giveconsent",{"_index":465,"title":{},"body":{"injectables/ConsentsManagementService.html":{},"interfaces/GiveConsentState.html":{},"miscellaneous/variables.html":{}}}],["giveconsent(consent",{"_index":467,"title":{},"body":{"injectables/ConsentsManagementService.html":{}}}],["giveconsentcomponent",{"_index":120,"title":{"components/GiveConsentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["giveconsentfeaturekey",{"_index":629,"title":{},"body":{"interfaces/GiveConsentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["giveconsentformcomponent",{"_index":123,"title":{"components/GiveConsentFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["giveconsentmodule",{"_index":596,"title":{"modules/GiveConsentModule.html":{}},"body":{"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["giveconsentroutingmodule",{"_index":600,"title":{"modules/GiveConsentRoutingModule.html":{}},"body":{"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["giveconsentservice",{"_index":546,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["giveconsentstate",{"_index":626,"title":{"interfaces/GiveConsentState.html":{}},"body":{"interfaces/GiveConsentState.html":{},"coverage.html":{}}}],["given",{"_index":322,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["go",{"_index":1006,"title":{},"body":{"index.html":{}}}],["graph",{"_index":1008,"title":{},"body":{"modules.html":{}}}],["guard",{"_index":484,"title":{"guards/ConsentsResolverService.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":485,"title":{},"body":{"guards/ConsentsResolverService.html":{}}}],["half",{"_index":68,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["handler.service",{"_index":754,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["handler.service.ts",{"_index":840,"title":{},"body":{"injectables/TableHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:13",{"_index":851,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["handler.service.ts:14",{"_index":846,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["handler.service.ts:15",{"_index":848,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["handler.service.ts:16",{"_index":841,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["handler.service.ts:22",{"_index":842,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["handler.service.ts:26",{"_index":843,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["handler.service.ts:30",{"_index":844,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["handler/table",{"_index":753,"title":{},"body":{"components/PaginationControllerComponent.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{}}}],["handling",{"_index":454,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["hasnextpage",{"_index":735,"title":{},"body":{"components/PaginationControllerComponent.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hasprevpage",{"_index":736,"title":{},"body":{"components/PaginationControllerComponent.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":327,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/MainAreaComponent.html":{}}}],["help",{"_index":1004,"title":{},"body":{"index.html":{}}}],["here",{"_index":729,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["hide",{"_index":876,"title":{},"body":{"injectables/UiService.html":{},"interfaces/UiState.html":{}}}],["host",{"_index":326,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["html",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["http",{"_index":144,"title":{},"body":{"modules/AppMockModule.html":{}}}],["http://localhost:4200",{"_index":979,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":502,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["httpclientmodule",{"_index":616,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["httpevent",{"_index":816,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["httphandler",{"_index":813,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["httpinterceptor",{"_index":817,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["httprequest",{"_index":155,"title":{},"body":{"modules/AppMockModule.html":{},"interceptors/ShowLoaderInterceptor.html":{}}}],["id",{"_index":160,"title":{},"body":{"modules/AppMockModule.html":{},"interfaces/Consent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":892,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":296,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"guards/ConsentsResolverService.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{}}}],["import",{"_index":26,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{}}}],["import('../modules/collected",{"_index":285,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('../modules/give",{"_index":281,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":182,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules/SharedModule.html":{}}}],["incorrect",{"_index":584,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"interfaces/ActivePageNumberItem.html":{},"modules/AppMockModule.html":{},"classes/AppPage.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{}}}],["inherit",{"_index":675,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["initialstate",{"_index":479,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"interfaces/ConsentsState.html":{},"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initiate",{"_index":391,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":27,"title":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"injectables/ConsentsService.html":{},"injectables/PagesPanelGeneratorService.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{}},"body":{"interfaces/ActivePageNumberItem.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"interceptors/ShowLoaderInterceptor.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"coverage.html":{}}}],["injectables",{"_index":378,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"injectables/ConsentsService.html":{},"injectables/PagesPanelGeneratorService.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"overview.html":{}}}],["input",{"_index":640,"title":{},"body":{"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["inputs",{"_index":696,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["inside",{"_index":56,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["intercept",{"_index":809,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["intercept(request",{"_index":812,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["interceptor",{"_index":805,"title":{"interceptors/ShowLoaderInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":806,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActivePageNumberItem.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"interfaces/ConsentsManagementState.html":{},"interfaces/ConsentsState.html":{},"interfaces/GiveConsentState.html":{},"interfaces/NumberPageItem.html":{},"interfaces/PlaceholderPageItem.html":{},"interfaces/SharedState.html":{},"interfaces/UiState.html":{}},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"interfaces/ConsentsManagementState.html":{},"interfaces/ConsentsState.html":{},"interfaces/GiveConsentState.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"interfaces/SharedState.html":{},"interfaces/UiState.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"interfaces/ConsentsManagementState.html":{},"interfaces/ConsentsState.html":{},"interfaces/GiveConsentState.html":{},"interfaces/NumberPageItem.html":{},"interfaces/PlaceholderPageItem.html":{},"interfaces/SharedState.html":{},"interfaces/UiState.html":{},"overview.html":{}}}],["intermediate",{"_index":688,"title":{},"body":{"injectables/PagesPanelGeneratorService.html":{}}}],["ishandset",{"_index":651,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["it's",{"_index":759,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["item.number",{"_index":779,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["item.title",{"_index":666,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["jasmine",{"_index":952,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":149,"title":{},"body":{"modules/AppMockModule.html":{}}}],["json(200",{"_index":173,"title":{},"body":{"modules/AppMockModule.html":{}}}],["justify",{"_index":332,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["karma",{"_index":1000,"title":{},"body":{"index.html":{}}}],["layout",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"dependencies.html":{}}}],["layoutmodule",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["left",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"overview.html":{}}}],["level",{"_index":143,"title":{},"body":{"modules/AppMockModule.html":{}}}],["link",{"_index":31,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"modules/GiveConsentRoutingModule.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["links",{"_index":652,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["list",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{}}}],["literal",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["load",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":280,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadconsents",{"_index":387,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadconsentsfail",{"_index":432,"title":{},"body":{"injectables/ConsentsEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadconsentssuccess",{"_index":424,"title":{},"body":{"injectables/ConsentsEffects.html":{},"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loader",{"_index":631,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader'},{'name",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["loader.component.html",{"_index":633,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":632,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.interceptor",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["loader.interceptor.ts",{"_index":808,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{},"coverage.html":{}}}],["loader.interceptor.ts:13",{"_index":811,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["loader.interceptor.ts:19",{"_index":814,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["loader/show",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"interceptors/ShowLoaderInterceptor.html":{},"coverage.html":{}}}],["loadercomponent",{"_index":126,"title":{"components/LoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loading",{"_index":393,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"components/LoaderComponent.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["loadingservice",{"_index":637,"title":{},"body":{"components/LoaderComponent.html":{}}}],["logonly",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["m.collectedconsentsmodule",{"_index":288,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.giveconsentmodule",{"_index":284,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["mainareacomponent",{"_index":128,"title":{"components/MainAreaComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["management",{"_index":445,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{},"injectables/UiService.html":{}}}],["management.actions",{"_index":457,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{}}}],["management.actions.ts",{"_index":923,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["management.effects",{"_index":619,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["management.effects.ts",{"_index":442,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{},"coverage.html":{}}}],["management.effects.ts:13",{"_index":446,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["management.effects.ts:23",{"_index":453,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["management.reducer",{"_index":628,"title":{},"body":{"interfaces/GiveConsentState.html":{}}}],["management.reducer.ts",{"_index":473,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["management.service",{"_index":550,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["management.service.ts",{"_index":463,"title":{},"body":{"injectables/ConsentsManagementService.html":{},"coverage.html":{}}}],["management.service.ts:12",{"_index":466,"title":{},"body":{"injectables/ConsentsManagementService.html":{}}}],["management.service.ts:23",{"_index":468,"title":{},"body":{"injectables/ConsentsManagementService.html":{}}}],["management/consents",{"_index":441,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"modules/GiveConsentModule.html":{},"interfaces/GiveConsentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["map",{"_index":435,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"components/MainAreaComponent.html":{}}}],["map(consents",{"_index":423,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["map(result",{"_index":658,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["mapto",{"_index":458,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["mapto(showsuccessmessage",{"_index":449,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["marbles",{"_index":953,"title":{},"body":{"dependencies.html":{}}}],["margin",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{}}}],["mat",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationControllerComponent.html":{}}}],["mat_snack_bar_default_options",{"_index":787,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbuttonmodule",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{}}}],["matcardmodule",{"_index":611,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["matcheckboxmodule",{"_index":614,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["matching",{"_index":79,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor(numberofentities",{"_index":528,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["math.floor(panellength",{"_index":69,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["maticonmodule",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{}}}],["matinputmodule",{"_index":605,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["matlistmodule",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["matpaginatormodule",{"_index":357,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["matprogressbarmodule",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["matradiomodule",{"_index":609,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["matselectmodule",{"_index":607,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["matsidenavmodule",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":859,"title":{},"body":{"injectables/UiEffects.html":{}}}],["matsnackbarmodule",{"_index":788,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattabledatasource",{"_index":318,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["mattablemodule",{"_index":353,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["mattoolbarmodule",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["maxage",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["menu",{"_index":667,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["message",{"_index":867,"title":{},"body":{"injectables/UiEffects.html":{},"injectables/UiService.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"pipes/StringifyConsentPipe.html":{}}}],["metareducer",{"_index":402,"title":{},"body":{"interfaces/CollectedConsentsState.html":{},"interfaces/GiveConsentState.html":{},"interfaces/SharedState.html":{},"miscellaneous/variables.html":{}}}],["metareducers",{"_index":368,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"interfaces/CollectedConsentsState.html":{},"modules/GiveConsentModule.html":{},"interfaces/GiveConsentState.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["method",{"_index":177,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":262,"title":{},"body":{"classes/AppPage.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{}}}],["min",{"_index":334,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["miscellaneous",{"_index":961,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":145,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["mock.module",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["mock.module.ts",{"_index":141,"title":{},"body":{"modules/AppMockModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mock/app",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["model",{"_index":410,"title":{},"body":{"interfaces/Consent.html":{}}}],["models/consent",{"_index":507,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["module",{"_index":137,"title":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":139,"title":{"modules.html":{}},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/shared/models/consent",{"_index":154,"title":{},"body":{"modules/AppMockModule.html":{}}}],["modules/shared/services/ui/ui.service",{"_index":641,"title":{},"body":{"components/LoaderComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{}}}],["modules/shared/shared.module",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":1005,"title":{},"body":{"index.html":{}}}],["multi",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"modules/AppMockModule.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nav",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["navigate",{"_index":978,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":264,"title":{},"body":{"classes/AppPage.html":{}}}],["new",{"_index":469,"title":{},"body":{"injectables/ConsentsManagementService.html":{},"components/GiveConsentFormComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{},"index.html":{}}}],["newsletter",{"_index":588,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"pipes/StringifyConsentPipe.html":{}}}],["next",{"_index":722,"title":{},"body":{"components/PaginationComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"miscellaneous/variables.html":{}}}],["next.handle(request).pipe(finalize",{"_index":820,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["nextclicked",{"_index":699,"title":{},"body":{"components/PaginationComponent.html":{}}}],["nextpage",{"_index":516,"title":{},"body":{"interfaces/ConsentsState.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":975,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":146,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules/SharedModule.html":{}}}],["ngonchanges",{"_index":765,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["ngonchanges(changes",{"_index":772,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["ngoninit",{"_index":303,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["ngrx/effects",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"modules/GiveConsentModule.html":{},"modules/SharedModule.html":{},"injectables/UiEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":515,"title":{},"body":{"interfaces/ConsentsState.html":{},"dependencies.html":{}}}],["ngrx/schematics",{"_index":950,"title":{},"body":{"dependencies.html":{}}}],["ngrx/store",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"interfaces/ConsentsState.html":{},"modules/GiveConsentModule.html":{},"interfaces/GiveConsentState.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"dependencies.html":{}}}],["ngx",{"_index":152,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"dependencies.html":{}}}],["ngxmockservermodule",{"_index":150,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{}}}],["ngxmockservermodule.forroot",{"_index":183,"title":{},"body":{"modules/AppMockModule.html":{}}}],["non",{"_index":36,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["null",{"_index":480,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"components/GiveConsentFormComponent.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":19,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/Consent.html":{},"interfaces/ConsentsState.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"injectables/TableHandlerService.html":{},"miscellaneous/variables.html":{}}}],["numberofentities",{"_index":526,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["numberpageitem",{"_index":37,"title":{"interfaces/NumberPageItem.html":{}},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["numbers",{"_index":732,"title":{},"body":{"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["object",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(state.entities).length",{"_index":527,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":494,"title":{},"body":{"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/MainAreaComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{}}}],["of(createconsentfail",{"_index":451,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["of(loadconsentsfail",{"_index":427,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["of(undefined",{"_index":496,"title":{},"body":{"guards/ConsentsResolverService.html":{}}}],["oftype",{"_index":430,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/UiEffects.html":{}}}],["oftype(createconsent.type",{"_index":447,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["oftype(loadconsents.type",{"_index":420,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["oftype(showsuccessmessage.type",{"_index":861,"title":{},"body":{"injectables/UiEffects.html":{}}}],["on(createconsentfail",{"_index":482,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"miscellaneous/variables.html":{}}}],["on(loadconsentssuccess",{"_index":529,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["on(nextpage",{"_index":531,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["on(previouspage",{"_index":534,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["on(setloading",{"_index":889,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["on(setpage",{"_index":536,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["onchanges",{"_index":714,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["one",{"_index":64,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/GiveConsentFormComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["oninit",{"_index":297,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["optional",{"_index":308,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":573,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["outputs",{"_index":559,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["overview",{"_index":1013,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":939,"title":{"dependencies.html":{}},"body":{}}],["padding",{"_index":681,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["page",{"_index":18,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/LoaderComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["page_size",{"_index":520,"title":{},"body":{"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagechanged",{"_index":700,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["pageitem",{"_index":40,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"miscellaneous/typealiases.html":{}}}],["pageitems",{"_index":764,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["pagenumber",{"_index":38,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"injectables/TableHandlerService.html":{}}}],["pages",{"_index":10,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["pagespanelgeneratorservice",{"_index":47,"title":{"injectables/PagesPanelGeneratorService.html":{}},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{}}}],["pagination",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["pagination'},{'name",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["pagination.component.html",{"_index":693,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.component.scss",{"_index":692,"title":{},"body":{"components/PaginationComponent.html":{}}}],["paginationcomponent",{"_index":130,"title":{"components/PaginationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["paginationcontrollercomponent",{"_index":132,"title":{"components/PaginationControllerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["paginationpagespanelcomponent",{"_index":32,"title":{"components/PaginationPagesPanelComponent.html":{}},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"overview.html":{}}}],["paginator",{"_index":691,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{}}}],["panel",{"_index":12,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["panel.component",{"_index":364,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["panel.component.html",{"_index":763,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["panel.component.scss",{"_index":762,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["panel.component.ts",{"_index":758,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{},"coverage.html":{}}}],["panel.component.ts:23",{"_index":769,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["panel.component.ts:24",{"_index":768,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["panel.component.ts:26",{"_index":770,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["panel.component.ts:28",{"_index":767,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["panel.component.ts:33",{"_index":775,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["panel.component.ts:36",{"_index":773,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["panel.component.ts:40",{"_index":771,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["panel/pages",{"_index":11,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["panel/pagination",{"_index":363,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{}}}],["panel_length",{"_index":42,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["panellength",{"_index":67,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["param",{"_index":57,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"injectables/UiService.html":{}}}],["parameters",{"_index":307,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":761,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["path",{"_index":176,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":290,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentRoutingModule.html":{}}}],["payload",{"_index":425,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"interfaces/ConsentsState.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":657,"title":{"pipes/StringifyConsentPipe.html":{}},"body":{"components/MainAreaComponent.html":{},"pipes/StringifyConsentPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":822,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["pipes/stringify",{"_index":354,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["pipetransform",{"_index":831,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["placeholder",{"_index":35,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["placeholderpageitem",{"_index":34,"title":{"interfaces/PlaceholderPageItem.html":{}},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["position",{"_index":643,"title":{},"body":{"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{}}}],["post",{"_index":178,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/variables.html":{}}}],["preferably",{"_index":54,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["prevclicked",{"_index":701,"title":{},"body":{"components/PaginationComponent.html":{}}}],["previous",{"_index":721,"title":{},"body":{"components/PaginationComponent.html":{},"miscellaneous/variables.html":{}}}],["previouspage",{"_index":517,"title":{},"body":{"interfaces/ConsentsState.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prevpage",{"_index":695,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"injectables/TableHandlerService.html":{}}}],["primary",{"_index":20,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["private",{"_index":65,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"interceptors/ShowLoaderInterceptor.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{}}}],["process",{"_index":392,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"miscellaneous/variables.html":{}}}],["prod",{"_index":992,"title":{},"body":{"index.html":{}}}],["production",{"_index":994,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":642,"title":{},"body":{"components/LoaderComponent.html":{}}}],["project",{"_index":969,"title":{},"body":{"index.html":{}}}],["promise",{"_index":268,"title":{},"body":{"classes/AppPage.html":{},"guards/ConsentsResolverService.html":{}}}],["properties",{"_index":23,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"interfaces/ConsentsManagementState.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentFormComponent.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"interfaces/SharedState.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{}}}],["props",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["protractor",{"_index":270,"title":{},"body":{"classes/AppPage.html":{},"index.html":{}}}],["provide",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["providedin",{"_index":44,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{}}}],["providers",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["proxy",{"_index":381,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{}}}],["put",{"_index":63,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["range",{"_index":52,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["reactiveformsmodule",{"_index":613,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["readme",{"_index":1007,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":386,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsService.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{}}}],["receive",{"_index":587,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["receivenewsletter",{"_index":164,"title":{},"body":{"modules/AppMockModule.html":{},"interfaces/Consent.html":{},"components/GiveConsentFormComponent.html":{},"miscellaneous/variables.html":{}}}],["redirectto",{"_index":289,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reducers",{"_index":408,"title":{},"body":{"interfaces/CollectedConsentsState.html":{},"interfaces/GiveConsentState.html":{},"interfaces/SharedState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["related",{"_index":444,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["reload",{"_index":981,"title":{},"body":{"index.html":{}}}],["replacement",{"_index":726,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["represent",{"_index":16,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["representation",{"_index":689,"title":{},"body":{"injectables/PagesPanelGeneratorService.html":{},"pipes/StringifyConsentPipe.html":{}}}],["represents",{"_index":888,"title":{},"body":{"interfaces/UiState.html":{}}}],["req",{"_index":964,"title":{},"body":{"miscellaneous/functions.html":{}}}],["req.body",{"_index":172,"title":{},"body":{"modules/AppMockModule.html":{}}}],["request",{"_index":815,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["require",{"_index":937,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"overview.html":{}}}],["resolve",{"_index":376,"title":{},"body":{"modules/CollectedConsentsRoutingModule.html":{},"guards/ConsentsResolverService.html":{}}}],["resolve(route",{"_index":489,"title":{},"body":{"guards/ConsentsResolverService.html":{}}}],["resolver.service",{"_index":375,"title":{},"body":{"modules/CollectedConsentsRoutingModule.html":{}}}],["resolver.service.ts",{"_index":487,"title":{},"body":{"guards/ConsentsResolverService.html":{},"coverage.html":{}}}],["resolver.service.ts:10",{"_index":488,"title":{},"body":{"guards/ConsentsResolverService.html":{}}}],["resolver.service.ts:16",{"_index":492,"title":{},"body":{"guards/ConsentsResolverService.html":{}}}],["resolver/consents",{"_index":374,"title":{},"body":{"modules/CollectedConsentsRoutingModule.html":{},"guards/ConsentsResolverService.html":{},"coverage.html":{}}}],["resolvers/consents",{"_index":373,"title":{},"body":{"modules/CollectedConsentsRoutingModule.html":{}}}],["result",{"_index":78,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.matches",{"_index":659,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["results",{"_index":80,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":62,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"modules/AppMockModule.html":{},"classes/AppPage.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentFormComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":267,"title":{},"body":{"classes/AppPage.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{}}}],["rgba(0,0,0,.08",{"_index":680,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["right",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":45,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{}}}],["root'},{'name",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["route",{"_index":493,"title":{},"body":{"guards/ConsentsResolverService.html":{}}}],["routedeclaration",{"_index":151,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/variables.html":{}}}],["routermodule",{"_index":277,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":377,"title":{},"body":{"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":292,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":491,"title":{},"body":{"guards/ConsentsResolverService.html":{}}}],["routes",{"_index":186,"title":{"routes.html":{}},"body":{"modules/AppMockModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":625,"title":{},"body":{"modules/GiveConsentRoutingModule.html":{}}}],["routing.module",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{}}}],["routing.module.ts",{"_index":276,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing/app",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["routing/collected",{"_index":347,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["routing/give",{"_index":604,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["row",{"_index":331,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["run",{"_index":974,"title":{},"body":{"index.html":{}}}],["running",{"_index":995,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":437,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/MainAreaComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":436,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"components/MainAreaComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"injectables/UiEffects.html":{}}}],["scaffolding",{"_index":984,"title":{},"body":{"index.html":{}}}],["selectall(consentsstate).slice(currentindex",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["selectcollectedconsents",{"_index":918,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectconsents",{"_index":396,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectconsentsstore",{"_index":916,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcurrentpage",{"_index":853,"title":{},"body":{"injectables/TableHandlerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":17,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/GiveConsentFormComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"pipes/StringifyConsentPipe.html":{}}}],["selectid",{"_index":522,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["selectloading",{"_index":871,"title":{},"body":{"injectables/UiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["selectshared",{"_index":929,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selecttotalpages",{"_index":852,"title":{},"body":{"injectables/TableHandlerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectuistate",{"_index":932,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serve",{"_index":976,"title":{},"body":{"index.html":{}}}],["server",{"_index":153,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["service",{"_index":382,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{}}}],["services/collected",{"_index":316,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"guards/ConsentsResolverService.html":{}}}],["services/consents",{"_index":549,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["services/show",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["services/table",{"_index":752,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["set",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setloading",{"_index":872,"title":{},"body":{"injectables/UiService.html":{},"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setloading(value",{"_index":874,"title":{},"body":{"injectables/UiService.html":{}}}],["setpage",{"_index":518,"title":{},"body":{"interfaces/ConsentsState.html":{},"components/PaginationControllerComponent.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setpage(pagenumber",{"_index":743,"title":{},"body":{"components/PaginationControllerComponent.html":{},"injectables/TableHandlerService.html":{}}}],["shared",{"_index":804,"title":{},"body":{"interfaces/SharedState.html":{},"miscellaneous/variables.html":{}}}],["shared/models/consent",{"_index":470,"title":{},"body":{"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"pipes/StringifyConsentPipe.html":{}}}],["shared/services/consents/consents.service",{"_index":431,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{}}}],["shared/shared.module",{"_index":352,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{}}}],["shared/store/ui/ui.actions",{"_index":460,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["sharedfeaturekey",{"_index":803,"title":{},"body":{"interfaces/SharedState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sharedmodule",{"_index":198,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["sharedstate",{"_index":797,"title":{"interfaces/SharedState.html":{}},"body":{"interfaces/SharedState.html":{},"coverage.html":{}}}],["sharereplay",{"_index":660,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["sharing",{"_index":781,"title":{},"body":{"modules/SharedModule.html":{}}}],["show",{"_index":731,"title":{},"body":{"components/PaginationControllerComponent.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["showing",{"_index":294,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/LoaderComponent.html":{}}}],["showloaderinterceptor",{"_index":199,"title":{"interceptors/ShowLoaderInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ShowLoaderInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["shown",{"_index":589,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/UiService.html":{}}}],["showsuccessmessage",{"_index":459,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["showsuccessmessage(message",{"_index":878,"title":{},"body":{"injectables/UiService.html":{}}}],["sidenav",{"_index":670,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["simplechanges",{"_index":715,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["slice(startindex",{"_index":72,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["snack",{"_index":868,"title":{},"body":{"injectables/UiEffects.html":{},"injectables/UiService.html":{}}}],["snackbar",{"_index":858,"title":{},"body":{"injectables/UiEffects.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"index.html":{}}}],["span')).gettext",{"_index":274,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app",{"_index":963,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../consents",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../consents.actions.ts",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../consents.reducer.ts",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../consents.selectors.ts",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pages",{"_index":1018,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../reducers.ts",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../selector.ts",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ui.actions.ts",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ui.reducer.ts",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ui.selectors.ts",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/loader/loader.component.ts",{"_index":630,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["src/app/components/loader/loader.component.ts:13",{"_index":636,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:18",{"_index":638,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/main",{"_index":647,"title":{},"body":{"components/MainAreaComponent.html":{},"coverage.html":{}}}],["src/app/mock/app",{"_index":140,"title":{},"body":{"modules/AppMockModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/collected",{"_index":6,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"injectables/ConsentsEffects.html":{},"guards/ConsentsResolverService.html":{},"interfaces/ConsentsState.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/give",{"_index":439,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/shared/models/consent.ts",{"_index":409,"title":{},"body":{"interfaces/Consent.html":{},"coverage.html":{}}}],["src/app/modules/shared/services/consents/consents.service.ts",{"_index":497,"title":{},"body":{"injectables/ConsentsService.html":{},"coverage.html":{}}}],["src/app/modules/shared/services/consents/consents.service.ts:13",{"_index":503,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["src/app/modules/shared/services/consents/consents.service.ts:18",{"_index":505,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["src/app/modules/shared/services/consents/consents.service.ts:22",{"_index":506,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["src/app/modules/shared/services/ui/ui.service.ts",{"_index":870,"title":{},"body":{"injectables/UiService.html":{},"coverage.html":{}}}],["src/app/modules/shared/services/ui/ui.service.ts:13",{"_index":873,"title":{},"body":{"injectables/UiService.html":{}}}],["src/app/modules/shared/services/ui/ui.service.ts:24",{"_index":875,"title":{},"body":{"injectables/UiService.html":{}}}],["src/app/modules/shared/services/ui/ui.service.ts:32",{"_index":879,"title":{},"body":{"injectables/UiService.html":{}}}],["src/app/modules/shared/shared.module.ts",{"_index":780,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/modules/shared/store/reducers.ts",{"_index":798,"title":{},"body":{"interfaces/SharedState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/shared/store/selector.ts",{"_index":928,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/shared/store/ui/ui.actions.ts",{"_index":930,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/shared/store/ui/ui.effects.ts",{"_index":857,"title":{},"body":{"injectables/UiEffects.html":{},"coverage.html":{}}}],["src/app/modules/shared/store/ui/ui.effects.ts:10",{"_index":860,"title":{},"body":{"injectables/UiEffects.html":{}}}],["src/app/modules/shared/store/ui/ui.effects.ts:19",{"_index":866,"title":{},"body":{"injectables/UiEffects.html":{}}}],["src/app/modules/shared/store/ui/ui.reducer.ts",{"_index":886,"title":{},"body":{"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/shared/store/ui/ui.selectors.ts",{"_index":931,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/routing/app",{"_index":275,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/show",{"_index":807,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{},"coverage.html":{}}}],["src/environments/environment",{"_index":403,"title":{},"body":{"interfaces/CollectedConsentsState.html":{},"interfaces/GiveConsentState.html":{},"interfaces/SharedState.html":{}}}],["src/environments/environment.prod.ts",{"_index":933,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":934,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":935,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standard",{"_index":727,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["start",{"_index":50,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["started",{"_index":967,"title":{"index.html":{}},"body":{}}],["startindex",{"_index":73,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["state",{"_index":483,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"interfaces/ConsentsState.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["state.currentpage",{"_index":535,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["state.loading",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.ui",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":893,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":499,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["statistic",{"_index":595,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"pipes/StringifyConsentPipe.html":{}}}],["sticky",{"_index":677,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["store",{"_index":385,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{},"miscellaneous/variables.html":{}}}],["store.consents",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store/consents",{"_index":471,"title":{},"body":{"injectables/ConsentsManagementService.html":{},"modules/GiveConsentModule.html":{}}}],["store/consents/consents.actions",{"_index":395,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/TableHandlerService.html":{}}}],["store/consents/consents.effects",{"_index":351,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["store/consents/consents.selectors",{"_index":397,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/TableHandlerService.html":{}}}],["store/reducers",{"_index":349,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"modules/SharedModule.html":{}}}],["store/ui/ui.actions",{"_index":883,"title":{},"body":{"injectables/UiService.html":{}}}],["store/ui/ui.effects",{"_index":786,"title":{},"body":{"modules/SharedModule.html":{}}}],["store/ui/ui.selectors",{"_index":882,"title":{},"body":{"injectables/UiService.html":{}}}],["stored",{"_index":989,"title":{},"body":{"index.html":{}}}],["storedevtoolsmodule",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"modules/SharedModule.html":{}}}],["storemodule.forfeature",{"_index":365,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["storemodule.forfeature(fromgiveconsent.giveconsentfeaturekey",{"_index":620,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["storemodule.forfeature(fromshared.sharedfeaturekey",{"_index":790,"title":{},"body":{"modules/SharedModule.html":{}}}],["storemodule.forroot",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":411,"title":{},"body":{"interfaces/Consent.html":{},"interfaces/ConsentsManagementState.html":{},"injectables/ConsentsService.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/UiService.html":{},"miscellaneous/variables.html":{}}}],["stringifyconsent",{"_index":323,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"pipes/StringifyConsentPipe.html":{}}}],["stringifyconsentpipe",{"_index":340,"title":{"pipes/StringifyConsentPipe.html":{}},"body":{"modules/CollectedConsentsModule.html":{},"pipes/StringifyConsentPipe.html":{},"coverage.html":{},"overview.html":{}}}],["styles",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["styleurls",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["submit",{"_index":543,"title":{},"body":{"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{}}}],["submit(consent",{"_index":547,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["submitted",{"_index":560,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["subrange",{"_index":51,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["success",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["suitable",{"_index":728,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["support",{"_index":1011,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1012,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":421,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{}}}],["table",{"_index":295,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{}}}],["tablehandlerservice",{"_index":738,"title":{"injectables/TableHandlerService.html":{}},"body":{"components/PaginationControllerComponent.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":938,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":862,"title":{},"body":{"injectables/UiEffects.html":{}}}],["targeted",{"_index":590,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"pipes/StringifyConsentPipe.html":{}}}],["targetedads",{"_index":167,"title":{},"body":{"modules/AppMockModule.html":{},"interfaces/Consent.html":{},"components/GiveConsentFormComponent.html":{},"miscellaneous/variables.html":{}}}],["template",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["templateurl",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["test",{"_index":669,"title":{},"body":{"components/MainAreaComponent.html":{},"index.html":{}}}],["tests",{"_index":997,"title":{},"body":{"index.html":{}}}],["text",{"_index":825,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["this.actions$.pipe",{"_index":419,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/UiEffects.html":{}}}],["this.atleastonepermissionrequiredvalidator",{"_index":579,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["this.breakpointobserver.observe(breakpoints.handset",{"_index":656,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["this.collectedconsentsservice.consents",{"_index":313,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["this.collectedconsentsservice.loadconsents",{"_index":495,"title":{},"body":{"guards/ConsentsResolverService.html":{}}}],["this.consentsservice.createconsent(payload).pipe",{"_index":448,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["this.consentsservice.getconsents().pipe",{"_index":422,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["this.currentpage",{"_index":778,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["this.form",{"_index":576,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["this.form.valid",{"_index":581,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["this.giveconsentservice.giveconsent(consent",{"_index":551,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["this.httpclient.get(consentsservice.consents_url",{"_index":509,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["this.httpclient.post(consentsservice.consents_url",{"_index":508,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["this.loadingservice.selectloading",{"_index":639,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.nextclicked.emit",{"_index":718,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.pagechanged.emit(pagenumber",{"_index":717,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["this.pageitems",{"_index":776,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["this.pagespanelgeneratorservice.generate(this.totalpages",{"_index":777,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["this.prevclicked.emit",{"_index":719,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.snackbar.open(payload",{"_index":863,"title":{},"body":{"injectables/UiEffects.html":{}}}],["this.store.dispatch(createconsent",{"_index":472,"title":{},"body":{"injectables/ConsentsManagementService.html":{}}}],["this.store.dispatch(loadconsents",{"_index":398,"title":{},"body":{"injectables/CollectedConsentsService.html":{}}}],["this.store.dispatch(nextpage",{"_index":854,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["this.store.dispatch(previouspage",{"_index":855,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["this.store.dispatch(setloading",{"_index":884,"title":{},"body":{"injectables/UiService.html":{}}}],["this.store.dispatch(setpage",{"_index":856,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["this.store.dispatch(showsuccessmessage",{"_index":885,"title":{},"body":{"injectables/UiService.html":{}}}],["this.store.select(hasnextpage",{"_index":847,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["this.store.select(hasprevpage",{"_index":849,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["this.store.select(selectconsents",{"_index":394,"title":{},"body":{"injectables/CollectedConsentsService.html":{}}}],["this.store.select(selectcurrentpage",{"_index":845,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["this.store.select(selectloading",{"_index":881,"title":{},"body":{"injectables/UiService.html":{}}}],["this.store.select(selecttotalpages",{"_index":850,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["this.submitted.emit(this.form.value",{"_index":582,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["this.tablehandlerservice.currentpage",{"_index":745,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["this.tablehandlerservice.hasnextpage",{"_index":747,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["this.tablehandlerservice.hasprevpage",{"_index":749,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["this.tablehandlerservice.nextpage",{"_index":755,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["this.tablehandlerservice.prevpage",{"_index":756,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["this.tablehandlerservice.setpage(pagenumber",{"_index":757,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["this.tablehandlerservice.totalpages",{"_index":750,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["this.uiservice.setloading(false",{"_index":821,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["this.uiservice.setloading(true",{"_index":819,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["three",{"_index":29,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["title",{"_index":662,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["toolbar",{"_index":673,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["toolbar.mat",{"_index":676,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["top",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{}}}],["total",{"_index":59,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["totalpages",{"_index":58,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"injectables/TableHandlerService.html":{}}}],["totalpagescount",{"_index":532,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["trackvisits",{"_index":166,"title":{},"body":{"modules/AppMockModule.html":{},"interfaces/Consent.html":{},"components/GiveConsentFormComponent.html":{},"miscellaneous/variables.html":{}}}],["transform",{"_index":826,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["transform(value",{"_index":827,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["tree",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["true",{"_index":185,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"components/GiveConsentFormComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":957,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":24,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1016,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["ui",{"_index":799,"title":{},"body":{"interfaces/SharedState.html":{},"injectables/UiService.html":{},"miscellaneous/variables.html":{}}}],["ui.actions",{"_index":869,"title":{},"body":{"injectables/UiEffects.html":{},"interfaces/UiState.html":{}}}],["ui/ui.reducer",{"_index":802,"title":{},"body":{"interfaces/SharedState.html":{}}}],["uieffects",{"_index":785,"title":{"injectables/UiEffects.html":{}},"body":{"modules/SharedModule.html":{},"injectables/UiEffects.html":{},"coverage.html":{}}}],["uireducer",{"_index":801,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uiservice",{"_index":635,"title":{"injectables/UiService.html":{}},"body":{"components/LoaderComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"injectables/UiService.html":{},"coverage.html":{}}}],["uistate",{"_index":800,"title":{"interfaces/UiState.html":{}},"body":{"interfaces/SharedState.html":{},"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":996,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":829,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["use",{"_index":985,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["usevalue",{"_index":794,"title":{},"body":{"modules/SharedModule.html":{}}}],["validators",{"_index":574,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["validators.email",{"_index":578,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["value",{"_index":312,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsService.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"miscellaneous/variables.html":{}}}],["value.receivenewsletter",{"_index":832,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["value.targetedads",{"_index":834,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["value.trackvisits",{"_index":836,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["var",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["variable",{"_index":898,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1019,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":972,"title":{},"body":{"index.html":{}}}],["via",{"_index":999,"title":{},"body":{"index.html":{}}}],["visibility",{"_index":877,"title":{},"body":{"injectables/UiService.html":{}}}],["visit",{"_index":594,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"pipes/StringifyConsentPipe.html":{}}}],["void",{"_index":310,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{}}}],["which'll",{"_index":880,"title":{},"body":{"injectables/UiService.html":{}}}],["width",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/MainAreaComponent.html":{}}}],["working",{"_index":383,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"injectables/TableHandlerService.html":{}}}],["wrapper",{"_index":333,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/LoaderComponent.html":{}}}],["yes",{"_index":965,"title":{},"body":{"miscellaneous/functions.html":{}}}],["z",{"_index":645,"title":{},"body":{"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{}}}],["zone.js",{"_index":959,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActivePageNumberItem.html":{"url":"interfaces/ActivePageNumberItem.html","title":"interface - ActivePageNumberItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActivePageNumberItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n        \n\n            \n                Description\n            \n            \n                Represent a selected page number (primary button with number)\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        number\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        number\n                                    \n                                \n                                \n                                    \n                                        number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Represent three dots (...) in {@link PaginationPagesPanelComponent}\n */\nexport interface PlaceholderPageItem {\n  type: 'placeholder';\n}\n\n/**\n * Represent a non-selected page number (button with {@link number})\n */\nexport interface NumberPageItem {\n  type: 'pageNumber';\n  number: number;\n}\n\n/**\n * Represent a selected page number (primary button with {@link number})\n */\nexport interface ActivePageNumberItem {\n  type: 'activePageNumber';\n  number: number;\n}\n\nexport type PageItem = PlaceholderPageItem | NumberPageItem | ActivePageNumberItem;\n\nconst PANEL_LENGTH = 5;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PagesPanelGeneratorService {\n  constructor() {\n  }\n\n  /**\n   * Calculate the start page number of subrange of the pages range so\n   * currentPage will be preferably at the center of this subrange or at least inside of the subrange\n   * @param totalPages - total count of pages\n   * @param currentPage - current page\n   * @return start index (start page) of subrange\n   */\n  // put currentPage in the center of the panel or at least inside of one\n  private calculateStartIndex(totalPages: number, currentPage: number): number {\n    const panelLength = PANEL_LENGTH;\n    const half = Math.floor(panelLength / 2);\n    if (currentPage + half  {\n        const pageNumber = index + 1;\n        if (pageNumber === currentPage + 1) {\n          return { type: 'activePageNumber', number: pageNumber } as ActivePageNumberItem;\n        } else {\n          return { type: 'pageNumber', number: pageNumber } as NumberPageItem;\n        }\n      })\n      .slice(startIndex, startIndex + PANEL_LENGTH)\n    ;\n\n    // If there are pages before startIndex we add ... before \"the body\"\n    if (startIndex !== 0) {\n      result = [{ type: 'placeholder' }, ...result];\n    }\n\n    // If there are pages after startIndex we add ... after \"the body\"\n    if ((startIndex + PANEL_LENGTH + 1) \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .main-area {\n  margin-top: 25px;\n}\n\nmat-nav-list {\n  margin-right: 25px;\n  margin-left: 25px;\n  margin-bottom: 25px;\n  width: 240px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectedConsentsComponent', 'selector': 'app-collected-consents'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'GiveConsentFormComponent', 'selector': 'app-give-consent-form'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainAreaComponent', 'selector': 'app-main-area'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'PaginationControllerComponent', 'selector': 'app-pagination-controller'},{'name': 'PaginationPagesPanelComponent', 'selector': 'app-pagination-pages-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppMockModule.html":{"url":"modules/AppMockModule.html","title":"module - AppMockModule","body":"\n                   \n\n\n\n\n    Modules\n    AppMockModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/mock/app-mock.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Module for angular-level http mock\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { json, NgxMockServerModule, RouteDeclaration } from 'ngx-mock-server';\nimport { Consent } from '../modules/shared/models/consent';\nimport { HttpRequest } from '@angular/common/http';\nimport * as faker from 'faker';\n\nlet consents: Consent[] = [...Array(4)].map((_, index) => ({\n  id: index,\n  name: faker.name.findName(),\n  email: faker.internet.email(),\n  receiveNewsletter: faker.random.boolean(),\n  trackVisits: faker.random.boolean(),\n  targetedAds: faker.random.boolean()\n}));\n\nlet id = consents.length;\n\nexport function createConsent(req?: HttpRequest) {\n  const data = { ...req.body, id: id++ };\n  consents = [...consents, data];\n  return json(200, data);\n}\n\nexport function getConsents() {\n  return json(200, consents);\n}\n\nconst appMockRoutes: RouteDeclaration[] = [\n  {\n    path: '/consents',\n    method: 'POST',\n    callback: createConsent\n  },\n  {\n    path: '/consents',\n    method: 'GET',\n    callback: getConsents\n  }\n];\n\n/**\n * Module for angular-level http mock\n */\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    NgxMockServerModule.forRoot({ enabled: true, routes: appMockRoutes })\n  ]\n})\nexport class AppMockModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nAppModule -->\n\nLoaderComponent->AppModule\n\n\n\n\n\nMainAreaComponent\n\nMainAreaComponent\n\nAppModule -->\n\nMainAreaComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppMockModule\n\nAppMockModule\n\nAppModule -->\n\nAppMockModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nShowLoaderInterceptor\n\nShowLoaderInterceptor\n\nAppModule -->\n\nShowLoaderInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            LoaderComponent\n                        \n                        \n                            MainAreaComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ShowLoaderInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppMockModule\n                        \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { EffectsModule } from '@ngrx/effects';\nimport { MatListModule } from '@angular/material/list';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MainAreaComponent } from './components/main-area/main-area.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { SharedModule } from './modules/shared/shared.module';\nimport { LoaderComponent } from './components/loader/loader.component';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { AppRoutingModule } from './routing/app-routing.module';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ShowLoaderInterceptor } from './services/show-loader/show-loader.interceptor';\nimport { NgxMockServerModule } from 'ngx-mock-server';\nimport { AppMockModule } from './mock/app-mock.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainAreaComponent,\n    LoaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    StoreModule.forRoot({}, {}),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\n    EffectsModule.forRoot([]),\n    MatListModule,\n    FlexLayoutModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatProgressBarModule,\n    SharedModule,\n    AppMockModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ShowLoaderInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/routing/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst defaultRoute = '/give-consent';\n\nconst routes: Routes = [\n  {\n    path: 'give-consent',\n    loadChildren: () => \"import('../modules/give-consent/give-consent.module').then(m => m.GiveConsentModule)\"\n  },\n  {\n    path: 'consents',\n    loadChildren: () => \"import('../modules/collected-consents/collected-consents.module').then(m => m.CollectedConsentsModule)\"\n  },\n  { path: '', redirectTo: defaultRoute, pathMatch: 'full' },\n  { path: '**', redirectTo: defaultRoute, pathMatch: 'full' }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes),\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CollectedConsentsComponent.html":{"url":"components/CollectedConsentsComponent.html","title":"component - CollectedConsentsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CollectedConsentsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/collected-consents/components/collected-consents/collected-consents.component.ts\n\n\n    \n        Description\n    \n    \n        Root component for showing of consents table\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-collected-consents\n            \n\n            \n                styleUrls\n                ./collected-consents.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./collected-consents.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                consents$\n                            \n                            \n                                displayedColumns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(collectedConsentsService: CollectedConsentsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/collected-consents/components/collected-consents/collected-consents.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        collectedConsentsService\n                                                  \n                                                        \n                                                                        CollectedConsentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/collected-consents.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            consents$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.collectedConsentsService.consents$\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/collected-consents.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['name', 'email', 'consents']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/collected-consents.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { CollectedConsentsService } from '../../services/collected-consents/collected-consents.service';\nimport { MatTableDataSource } from '@angular/material/table';\n\n/**\n * Root component for showing of consents table\n */\n@Component({\n  selector: 'app-collected-consents',\n  templateUrl: './collected-consents.component.html',\n  styleUrls: ['./collected-consents.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CollectedConsentsComponent implements OnInit {\n  consents$ = this.collectedConsentsService.consents$;\n  displayedColumns = ['name', 'email', 'consents'];\n  constructor(\n    private collectedConsentsService: CollectedConsentsService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n       Name \n       {{element.name}} \n    \n\n    \n       Email \n       {{element.email}} \n    \n\n    \n       Consent given for \n       {{element | stringifyConsent}} \n    \n\n    \n    \n  \n  \n\n\n\n    \n\n    \n                \n                    ./collected-consents.component.scss\n                \n                table {\n  width: 100%;\n  margin-bottom: 16px;\n}\n\n:host {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n}\n\n.consents-table-wrapper {\n  min-width: 1000px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Name        {{element.name}}                Email        {{element.email}}                Consent given for        {{element | stringifyConsent}}                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectedConsentsComponent', 'selector': 'app-collected-consents'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'GiveConsentFormComponent', 'selector': 'app-give-consent-form'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainAreaComponent', 'selector': 'app-main-area'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'PaginationControllerComponent', 'selector': 'app-pagination-controller'},{'name': 'PaginationPagesPanelComponent', 'selector': 'app-pagination-pages-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CollectedConsentsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CollectedConsentsModule.html":{"url":"modules/CollectedConsentsModule.html","title":"module - CollectedConsentsModule","body":"\n                   \n\n\n\n\n    Modules\n    CollectedConsentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CollectedConsentsModule\n\n\n\ncluster_CollectedConsentsModule_declarations\n\n\n\ncluster_CollectedConsentsModule_imports\n\n\n\n\nCollectedConsentsComponent\n\nCollectedConsentsComponent\n\n\n\nCollectedConsentsModule\n\nCollectedConsentsModule\n\nCollectedConsentsModule -->\n\nCollectedConsentsComponent->CollectedConsentsModule\n\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\nCollectedConsentsModule -->\n\nPaginationComponent->CollectedConsentsModule\n\n\n\n\n\nPaginationControllerComponent\n\nPaginationControllerComponent\n\nCollectedConsentsModule -->\n\nPaginationControllerComponent->CollectedConsentsModule\n\n\n\n\n\nPaginationPagesPanelComponent\n\nPaginationPagesPanelComponent\n\nCollectedConsentsModule -->\n\nPaginationPagesPanelComponent->CollectedConsentsModule\n\n\n\n\n\nStringifyConsentPipe\n\nStringifyConsentPipe\n\nCollectedConsentsModule -->\n\nStringifyConsentPipe->CollectedConsentsModule\n\n\n\n\n\nCollectedConsentsRoutingModule\n\nCollectedConsentsRoutingModule\n\nCollectedConsentsModule -->\n\nCollectedConsentsRoutingModule->CollectedConsentsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nCollectedConsentsModule -->\n\nSharedModule->CollectedConsentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/collected-consents/collected-consents.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Module for displaying list of created consents\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CollectedConsentsComponent\n                        \n                        \n                            PaginationComponent\n                        \n                        \n                            PaginationControllerComponent\n                        \n                        \n                            PaginationPagesPanelComponent\n                        \n                        \n                            StringifyConsentPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CollectedConsentsRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CollectedConsentsComponent } from './components/collected-consents/collected-consents.component';\nimport { CollectedConsentsRoutingModule } from './routing/collected-consents-routing.module';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromCollectedConsents from './store/reducers';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ConsentsEffects } from './store/consents/consents.effects';\nimport { SharedModule } from '../shared/shared.module';\nimport { MatTableModule } from '@angular/material/table';\nimport { StringifyConsentPipe } from './pipes/stringify-consent/stringify-consent.pipe';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { PaginationControllerComponent } from './components/collected-consents/pagination-controller/pagination-controller.component';\nimport { PaginationComponent } from './components/collected-consents/pagination-controller/pagination/pagination.component';\nimport { FlexModule } from '@angular/flex-layout';\nimport { PaginationPagesPanelComponent } from './components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\n\n/**\n * Module for displaying list of created consents\n */\n@NgModule({\n  declarations: [\n    CollectedConsentsComponent,\n    StringifyConsentPipe,\n    PaginationControllerComponent,\n    PaginationComponent,\n    PaginationPagesPanelComponent\n  ],\n  imports: [\n    CommonModule,\n    CollectedConsentsRoutingModule,\n    StoreModule.forFeature(\n      fromCollectedConsents.collectedConsentsFeatureKey,\n      fromCollectedConsents.reducers,\n      { metaReducers: fromCollectedConsents.metaReducers }\n    ),\n    EffectsModule.forFeature([ConsentsEffects]),\n    SharedModule,\n    MatTableModule,\n    MatPaginatorModule,\n    FlexModule,\n    MatIconModule,\n    MatButtonModule\n  ]\n})\nexport class CollectedConsentsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CollectedConsentsRoutingModule.html":{"url":"modules/CollectedConsentsRoutingModule.html","title":"module - CollectedConsentsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    CollectedConsentsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/collected-consents/routing/collected-consents-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CollectedConsentsComponent } from '../components/collected-consents/collected-consents.component';\nimport { ConsentsResolverService } from './resolvers/consents-resolver/consents-resolver.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: CollectedConsentsComponent,\n    resolve: {\n      consents: ConsentsResolverService\n    }\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class CollectedConsentsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CollectedConsentsService.html":{"url":"injectables/CollectedConsentsService.html","title":"injectable - CollectedConsentsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CollectedConsentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/collected-consents/services/collected-consents/collected-consents.service.ts\n        \n\n            \n                Description\n            \n            \n                Proxy service for working with ConsentsState store\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                consents$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadConsents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/collected-consents/services/collected-consents/collected-consents.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadConsents\n                        \n                        \n                    \n                \n            \n            \n                \nloadConsents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/services/collected-consents/collected-consents.service.ts:22\n                \n            \n\n\n            \n                \n                    Initiate process of loading of consents\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            consents$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.store.select(selectConsents)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/services/collected-consents/collected-consents.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { loadConsents} from '../../store/consents/consents.actions';\nimport { selectConsents} from '../../store/consents/consents.selectors';\n\n/**\n * Proxy service for working with {@link ConsentsState} store\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CollectedConsentsService {\n  readonly consents$ = this.store.select(selectConsents);\n\n  constructor(\n    private store: Store\n  ) { }\n\n  /**\n   * Initiate process of loading of consents\n   */\n  loadConsents() {\n    this.store.dispatch(loadConsents());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CollectedConsentsState.html":{"url":"interfaces/CollectedConsentsState.html","title":"interface - CollectedConsentsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CollectedConsentsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/collected-consents/store/reducers.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        consents\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        consents\n                                    \n                                \n                                \n                                    \n                                        consents:         ConsentsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConsentsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ActionReducerMap,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from 'src/environments/environment';\nimport { consentsReducer, ConsentsState } from './consents/consents.reducer';\n\nexport const collectedConsentsFeatureKey = 'collectedConsents';\n\nexport interface CollectedConsentsState {\n  consents: ConsentsState;\n}\n\nexport const reducers: ActionReducerMap = {\n  consents: consentsReducer\n};\n\n\nexport const metaReducers: MetaReducer[] = !environment.production ? [] : [];\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Consent.html":{"url":"interfaces/Consent.html","title":"interface - Consent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Consent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/shared/models/consent.ts\n        \n\n            \n                Description\n            \n            \n                Consent model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        email\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        receiveNewsletter\n                                \n                                \n                                            Optional\n                                        targetedAds\n                                \n                                \n                                            Optional\n                                        trackVisits\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        receiveNewsletter\n                                    \n                                \n                                \n                                    \n                                        receiveNewsletter:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetedAds\n                                    \n                                \n                                \n                                    \n                                        targetedAds:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trackVisits\n                                    \n                                \n                                \n                                    \n                                        trackVisits:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Consent {\n  id?: number;\n  name?: string;\n  email?: string;\n  receiveNewsletter?: boolean;\n  targetedAds?: boolean;\n  trackVisits?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsentsEffects.html":{"url":"injectables/ConsentsEffects.html","title":"injectable - ConsentsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsentsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/collected-consents/store/consents/consents.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadConsents$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, consentsService: ConsentsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/collected-consents/store/consents/consents.effects.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        consentsService\n                                                  \n                                                        \n                                                                        ConsentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadConsents$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEffect(() => {\n    return this.actions$.pipe(\n      ofType(loadConsents.type),\n      switchMap(() => {\n        return this.consentsService.getConsents().pipe(\n          map(consents => loadConsentsSuccess({ payload: consents })),\n          catchError(error => of(loadConsentsFail({ payload: error.message })))\n        );\n      })\n    );\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/store/consents/consents.effects.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { ConsentsService } from '../../../shared/services/consents/consents.service';\nimport { loadConsents, loadConsentsFail, loadConsentsSuccess } from './consents.actions';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n\n@Injectable()\nexport class ConsentsEffects {\n  constructor(\n    private actions$: Actions,\n    private consentsService: ConsentsService\n  ) {\n  }\n\n  loadConsents$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(loadConsents.type),\n      switchMap(() => {\n        return this.consentsService.getConsents().pipe(\n          map(consents => loadConsentsSuccess({ payload: consents })),\n          catchError(error => of(loadConsentsFail({ payload: error.message })))\n        );\n      })\n    );\n  });\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsentsManagementEffects.html":{"url":"injectables/ConsentsManagementEffects.html","title":"injectable - ConsentsManagementEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsentsManagementEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/give-consent/store/consents-management/consents-management.effects.ts\n        \n\n            \n                Description\n            \n            \n                Effects related to management of consents\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createConsent$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, consentsService: ConsentsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/give-consent/store/consents-management/consents-management.effects.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        consentsService\n                                                  \n                                                        \n                                                                        ConsentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createConsent$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEffect(() => {\n    return this.actions$.pipe(\n      ofType(createConsent.type),\n      switchMap(({ payload }) => {\n        return this.consentsService.createConsent(payload).pipe(\n          mapTo(showSuccessMessage({ payload: 'Consent is created!' })),\n          catchError((e) => of(createConsentFail({ payload: e.message })))\n        );\n      })\n    );\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/give-consent/store/consents-management/consents-management.effects.ts:23\n                            \n                        \n\n                \n                    \n                        Handling of creating consent process\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { createConsent, createConsentFail } from './consents-management.actions';\nimport { catchError, map, mapTo, switchMap } from 'rxjs/operators';\nimport { ConsentsService } from '../../../shared/services/consents/consents.service';\nimport { showSuccessMessage } from '../../../shared/store/ui/ui.actions';\nimport { of } from 'rxjs';\n\n/**\n * Effects related to management of consents\n */\n@Injectable()\nexport class ConsentsManagementEffects {\n  constructor(\n    private actions$: Actions,\n    private consentsService: ConsentsService\n  ) {\n  }\n\n  /**\n   * Handling of creating consent process\n   */\n  createConsent$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(createConsent.type),\n      switchMap(({ payload }) => {\n        return this.consentsService.createConsent(payload).pipe(\n          mapTo(showSuccessMessage({ payload: 'Consent is created!' })),\n          catchError((e) => of(createConsentFail({ payload: e.message })))\n        );\n      })\n    );\n  });\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsentsManagementService.html":{"url":"injectables/ConsentsManagementService.html","title":"injectable - ConsentsManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsentsManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/give-consent/services/consents-management.service.ts\n        \n\n            \n                Description\n            \n            \n                Proxy service for working with ConsentsManagementState store\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                giveConsent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/give-consent/services/consents-management.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            giveConsent\n                        \n                        \n                    \n                \n            \n            \n                \ngiveConsent(consent: Consent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/give-consent/services/consents-management.service.ts:23\n                \n            \n\n\n            \n                \n                    Initiate process of creating a new consent\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    consent\n                                    \n                                                Consent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nNew consent\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Consent } from '../../shared/models/consent';\nimport { Store } from '@ngrx/store';\nimport { createConsent } from '../store/consents-management/consents-management.actions';\n\n/**\n * Proxy service for working with {@link ConsentsManagementState} store\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsentsManagementService {\n\n  constructor(\n    private store: Store\n  ) {\n  }\n\n  /**\n   * Initiate process of creating a new consent\n   * @param consent - New consent\n   */\n  giveConsent(consent: Consent) {\n    this.store.dispatch(createConsent({ payload: consent }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConsentsManagementState.html":{"url":"interfaces/ConsentsManagementState.html","title":"interface - ConsentsManagementState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConsentsManagementState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/give-consent/store/consents-management/consents-management.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Action, createReducer, on } from '@ngrx/store';\nimport { createConsentFail } from './consents-management.actions';\n\n\nexport const createConsentFeatureKey = 'consentsManagement';\n\nexport interface ConsentsManagementState {\n  error: string;\n}\n\nexport const initialState: ConsentsManagementState = {\n  error: null\n};\n\n\nexport const consentsManagementReducer = createReducer(\n  initialState,\n  on(createConsentFail, (state, { payload }) => ({ ...state, error: payload }))\n);\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ConsentsResolverService.html":{"url":"guards/ConsentsResolverService.html","title":"guard - ConsentsResolverService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    ConsentsResolverService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/collected-consents/routing/resolvers/consents-resolver/consents-resolver.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(collectedConsentsService: CollectedConsentsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/collected-consents/routing/resolvers/consents-resolver/consents-resolver.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        collectedConsentsService\n                                                  \n                                                        \n                                                                        CollectedConsentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/routing/resolvers/consents-resolver/consents-resolver.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable | Promise | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Consent } from '../../../../shared/models/consent';\nimport { Observable, of } from 'rxjs';\nimport { CollectedConsentsService } from '../../../services/collected-consents/collected-consents.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsentsResolverService implements Resolve{\n\n  constructor(\n    private collectedConsentsService: CollectedConsentsService\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable | Promise | void {\n    this.collectedConsentsService.loadConsents();\n    return of(undefined);\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsentsService.html":{"url":"injectables/ConsentsService.html","title":"injectable - ConsentsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/shared/services/consents/consents.service.ts\n        \n\n            \n                Description\n            \n            \n                Consents gateway\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                CONSENTS_URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createConsent\n                            \n                            \n                                getConsents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/shared/services/consents/consents.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createConsent\n                        \n                        \n                    \n                \n            \n            \n                \ncreateConsent(consent: Consent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/services/consents/consents.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consent\n                                    \n                                                Consent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConsents\n                        \n                        \n                    \n                \n            \n            \n                \ngetConsents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/services/consents/consents.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            CONSENTS_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/consents'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/shared/services/consents/consents.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Consent } from '../../models/consent';\nimport { Observable } from 'rxjs';\n\n/**\n * Consents gateway\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsentsService {\n  static readonly CONSENTS_URL = '/consents';\n  constructor(\n    private httpClient: HttpClient\n  ) { }\n\n  createConsent(consent: Consent): Observable {\n    return this.httpClient.post(ConsentsService.CONSENTS_URL, consent);\n  }\n\n  getConsents(): Observable {\n    return this.httpClient.get(ConsentsService.CONSENTS_URL);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConsentsState.html":{"url":"interfaces/ConsentsState.html","title":"interface - ConsentsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConsentsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/collected-consents/store/consents/consents.reducer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currentPage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentPage\n                                    \n                                \n                                \n                                    \n                                        currentPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { Consent } from '../../../shared/models/consent';\nimport { loadConsentsSuccess, nextPage, previousPage, setPage } from './consents.actions';\n\n\nexport const consentsFeatureKey = 'consents';\nexport const PAGE_SIZE = 2;\n\nexport interface ConsentsState extends EntityState {\n  currentPage: number;\n}\n\nexport const consentsAdapter = createEntityAdapter({\n  selectId: consent => consent.id\n});\n\nexport const initialState: ConsentsState = consentsAdapter.getInitialState({\n  currentPage: 0\n});\n\nexport const calculateTotalPagesCount = (state: ConsentsState): number => {\n  const numberOfEntities = Object.values(state.entities).length;\n  return Math.floor(numberOfEntities / PAGE_SIZE) + (numberOfEntities % PAGE_SIZE === 0 ? 0 : 1);\n};\n\nexport const consentsReducer = createReducer(\n  initialState,\n  on(loadConsentsSuccess, (state, { payload }) => {\n    return { ...consentsAdapter.setAll(payload, state), currentPage: 0 };\n  }),\n  on(nextPage, state => {\n    const totalPagesCount = calculateTotalPagesCount(state);\n    const { currentPage } = state;\n    return (currentPage + 1) >= totalPagesCount ? state : { ...state, currentPage: currentPage + 1 };\n  }),\n  on(previousPage, state => {\n    return state.currentPage === 0 ? state : { ...state, currentPage: state.currentPage - 1 };\n  }),\n  on(setPage, (state, { payload }) => {\n    const totalPagesCount = calculateTotalPagesCount(state);\n    return (payload >= 0 && payload \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GiveConsentComponent.html":{"url":"components/GiveConsentComponent.html","title":"component - GiveConsentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GiveConsentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/give-consent/components/give-consent/give-consent.component.ts\n\n\n    \n        Description\n    \n    \n        Main form for creating of consent entity\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-give-consent\n            \n\n            \n                styleUrls\n                ./give-consent.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./give-consent.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(giveConsentService: ConsentsManagementService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/give-consent/components/give-consent/give-consent.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        giveConsentService\n                                                  \n                                                        \n                                                                        ConsentsManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit(consent: Consent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/give-consent/components/give-consent/give-consent.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consent\n                                    \n                                                Consent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ConsentsManagementService } from '../../services/consents-management.service';\nimport { Consent } from '../../../shared/models/consent';\n\n/**\n * Main form for creating of consent entity\n */\n@Component({\n  selector: 'app-give-consent',\n  templateUrl: './give-consent.component.html',\n  styleUrls: ['./give-consent.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GiveConsentComponent {\n  constructor(\n    private giveConsentService: ConsentsManagementService\n  ) {\n  }\n\n  submit(consent: Consent) {\n    this.giveConsentService.giveConsent(consent);\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./give-consent.component.scss\n                \n                .form-wrapper {\n  width: 500px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectedConsentsComponent', 'selector': 'app-collected-consents'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'GiveConsentFormComponent', 'selector': 'app-give-consent-form'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainAreaComponent', 'selector': 'app-main-area'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'PaginationControllerComponent', 'selector': 'app-pagination-controller'},{'name': 'PaginationPagesPanelComponent', 'selector': 'app-pagination-pages-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GiveConsentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GiveConsentFormComponent.html":{"url":"components/GiveConsentFormComponent.html","title":"component - GiveConsentFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GiveConsentFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/give-consent/components/give-consent/give-consent-form/give-consent-form.component.ts\n\n\n    \n        Description\n    \n    \n        Dumb component the form of creating of consent entity\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-give-consent-form\n            \n\n            \n                styleUrls\n                ./give-consent-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./give-consent-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                atLeastOnePermissionRequiredValidator\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/give-consent/components/give-consent/give-consent-form/give-consent-form.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        submitted\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/give-consent/components/give-consent/give-consent-form/give-consent-form.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            atLeastOnePermissionRequiredValidator\n                        \n                        \n                    \n                \n            \n            \n                \natLeastOnePermissionRequiredValidator()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/give-consent/components/give-consent/give-consent-form/give-consent-form.component.ts:35\n                \n            \n\n\n            \n                \n                    Check if at least one consent is selected\n\n\n                    \n                        Returns :     (formGroup: any) => { atLeastOnPermissionRequired: boolean; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/give-consent/components/give-consent/give-consent-form/give-consent-form.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/give-consent/components/give-consent/give-consent-form/give-consent-form.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/give-consent/components/give-consent/give-consent-form/give-consent-form.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Consent } from '../../../../shared/models/consent';\n\n/**\n * Dumb component the form of creating of consent entity\n */\n@Component({\n  selector: 'app-give-consent-form',\n  templateUrl: './give-consent-form.component.html',\n  styleUrls: ['./give-consent-form.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GiveConsentFormComponent implements OnInit {\n  @Output() submitted = new EventEmitter();\n\n  form: FormGroup;\n  constructor(\n    private fb: FormBuilder\n  ) {\n    this.form = fb.group({\n      name: null,\n      email: [null, [Validators.email]],\n      receiveNewsletter: null,\n      targetedAds: null,\n      trackVisits: null\n    }, {\n      validators: this.atLeastOnePermissionRequiredValidator()\n    });\n  }\n\n  /**\n   * Check if at least one consent is selected\n   */\n  atLeastOnePermissionRequiredValidator() {\n    return (formGroup: FormGroup) => {\n      const { receiveNewsletter, targetedAds, trackVisits } = formGroup.value;\n      return (receiveNewsletter || targetedAds || trackVisits) ? null : {\n        atLeastOnPermissionRequired: true\n      };\n    };\n  }\n\n  ngOnInit() {\n  }\n\n  submit() {\n    if (!this.form.valid) {\n      return;\n    }\n\n    this.submitted.emit(this.form.value);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        Name\n        \n      \n      \n        Email address\n        \n        Email has incorrect format\n      \n    \n    I agree:\n    \n      Receive newsletter\n      Be shown targeted ads\n      Contribute to anonymous visit statistic\n    \n    \n      Give consent\n    \n  \n\n\n    \n\n    \n                \n                    ./give-consent-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Name                            Email address                Email has incorrect format              I agree:          Receive newsletter      Be shown targeted ads      Contribute to anonymous visit statistic              Give consent      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectedConsentsComponent', 'selector': 'app-collected-consents'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'GiveConsentFormComponent', 'selector': 'app-give-consent-form'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainAreaComponent', 'selector': 'app-main-area'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'PaginationControllerComponent', 'selector': 'app-pagination-controller'},{'name': 'PaginationPagesPanelComponent', 'selector': 'app-pagination-pages-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GiveConsentFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GiveConsentModule.html":{"url":"modules/GiveConsentModule.html","title":"module - GiveConsentModule","body":"\n                   \n\n\n\n\n    Modules\n    GiveConsentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GiveConsentModule\n\n\n\ncluster_GiveConsentModule_declarations\n\n\n\ncluster_GiveConsentModule_imports\n\n\n\n\nGiveConsentComponent\n\nGiveConsentComponent\n\n\n\nGiveConsentModule\n\nGiveConsentModule\n\nGiveConsentModule -->\n\nGiveConsentComponent->GiveConsentModule\n\n\n\n\n\nGiveConsentFormComponent\n\nGiveConsentFormComponent\n\nGiveConsentModule -->\n\nGiveConsentFormComponent->GiveConsentModule\n\n\n\n\n\nGiveConsentRoutingModule\n\nGiveConsentRoutingModule\n\nGiveConsentModule -->\n\nGiveConsentRoutingModule->GiveConsentModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nGiveConsentModule -->\n\nSharedModule->GiveConsentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/give-consent/give-consent.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Module for displaying list of created consents\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GiveConsentComponent\n                        \n                        \n                            GiveConsentFormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GiveConsentRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GiveConsentComponent } from './components/give-consent/give-consent.component';\nimport { GiveConsentRoutingModule } from './routing/give-consent-routing.module';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatCardModule } from '@angular/material/card';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexModule } from '@angular/flex-layout';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { HttpClientModule } from '@angular/common/http';\nimport { GiveConsentFormComponent } from './components/give-consent/give-consent-form/give-consent-form.component';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromGiveConsent from './store/reducers';\nimport { EffectsModule } from '@ngrx/effects';\nimport { SharedModule } from '../shared/shared.module';\nimport { ConsentsManagementEffects } from './store/consents-management/consents-management.effects';\n\n\n/**\n * Module for displaying list of created consents\n */\n@NgModule({\n  declarations: [GiveConsentComponent, GiveConsentFormComponent],\n  imports: [\n    CommonModule,\n    GiveConsentRoutingModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatCardModule,\n    ReactiveFormsModule,\n    FlexModule,\n    MatCheckboxModule,\n    HttpClientModule,\n    StoreModule.forFeature(fromGiveConsent.giveConsentFeatureKey, fromGiveConsent.reducers, { metaReducers: fromGiveConsent.metaReducers }),\n    EffectsModule.forFeature([ConsentsManagementEffects]),\n    SharedModule\n  ]\n})\nexport class GiveConsentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GiveConsentRoutingModule.html":{"url":"modules/GiveConsentRoutingModule.html","title":"module - GiveConsentRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    GiveConsentRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/give-consent/routing/give-consent-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GiveConsentComponent } from '../components/give-consent/give-consent.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: GiveConsentComponent\n  }\n];\n\n/**\n * Routing module for {@link GiveConsentModule}\n */\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class GiveConsentRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GiveConsentState.html":{"url":"interfaces/GiveConsentState.html","title":"interface - GiveConsentState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GiveConsentState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/give-consent/store/reducers.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        consentsManagement\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        consentsManagement\n                                    \n                                \n                                \n                                    \n                                        consentsManagement:         ConsentsManagementState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConsentsManagementState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ActionReducerMap,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from 'src/environments/environment';\nimport { consentsManagementReducer, ConsentsManagementState } from './consents-management/consents-management.reducer';\n\nexport const giveConsentFeatureKey = 'giveConsent';\n\nexport interface GiveConsentState {\n  consentsManagement: ConsentsManagementState;\n}\n\nexport const reducers: ActionReducerMap = {\n  consentsManagement: consentsManagementReducer\n};\n\nexport const metaReducers: MetaReducer[] = !environment.production ? [] : [];\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/loader/loader.component.ts\n\n\n    \n        Description\n    \n    \n        Wrapper for mat-loading-bar for showing at the top of the page\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loader\n            \n\n            \n                styleUrls\n                ./loader.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingService: UiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/loader/loader.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        UiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/loader/loader.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.loadingService.selectLoading$\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { UiService } from '../../modules/shared/services/ui/ui.service';\n\n/**\n * Wrapper for mat-loading-bar for showing at the top of the page\n */\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n  loading$ = this.loadingService.selectLoading$;\n  constructor(\n    private loadingService: UiService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./loader.component.scss\n                \n                mat-progress-bar {\n  position: absolute;\n  z-index: 1000;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectedConsentsComponent', 'selector': 'app-collected-consents'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'GiveConsentFormComponent', 'selector': 'app-give-consent-form'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainAreaComponent', 'selector': 'app-main-area'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'PaginationControllerComponent', 'selector': 'app-pagination-controller'},{'name': 'PaginationPagesPanelComponent', 'selector': 'app-pagination-pages-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainAreaComponent.html":{"url":"components/MainAreaComponent.html","title":"component - MainAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/main-area/main-area.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-area\n            \n\n            \n                styleUrls\n                ./main-area.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-area.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isHandset$\n                            \n                            \n                                links\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/main-area/main-area.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isHandset$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/main-area/main-area.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            links\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { title: 'Give consent', link: '/give-consent' },\n    { title: 'Collected consents', link: '/consents' },\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/main-area/main-area.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-main-area',\n  templateUrl: './main-area.component.html',\n  styleUrls: ['./main-area.component.scss']\n})\nexport class MainAreaComponent {\n  links = [\n    { title: 'Give consent', link: '/give-consent' },\n    { title: 'Collected consents', link: '/consents' },\n  ];\n  isHandset$: Observable = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      {{ item.title }}\n    \n  \n  \n    \n      \n        menu\n      \n      Didomi test app\n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./main-area.component.scss\n                \n                .sidenav-container {\n  height: 100%;\n}\n\n.sidenav {\n  width: 200px;\n}\n\n.sidenav .mat-toolbar {\n  background: inherit;\n}\n\n.mat-toolbar.mat-primary {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\na.active {\n  background-color: rgba(0,0,0,.08);\n}\n\n.content {\n  padding-top: 16px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ item.title }}                          menu            Didomi test app                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectedConsentsComponent', 'selector': 'app-collected-consents'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'GiveConsentFormComponent', 'selector': 'app-give-consent-form'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainAreaComponent', 'selector': 'app-main-area'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'PaginationControllerComponent', 'selector': 'app-pagination-controller'},{'name': 'PaginationPagesPanelComponent', 'selector': 'app-pagination-pages-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NumberPageItem.html":{"url":"interfaces/NumberPageItem.html","title":"interface - NumberPageItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NumberPageItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n        \n\n            \n                Description\n            \n            \n                Represent a non-selected page number (button with number)\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        number\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        number\n                                    \n                                \n                                \n                                    \n                                        number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Represent three dots (...) in {@link PaginationPagesPanelComponent}\n */\nexport interface PlaceholderPageItem {\n  type: 'placeholder';\n}\n\n/**\n * Represent a non-selected page number (button with {@link number})\n */\nexport interface NumberPageItem {\n  type: 'pageNumber';\n  number: number;\n}\n\n/**\n * Represent a selected page number (primary button with {@link number})\n */\nexport interface ActivePageNumberItem {\n  type: 'activePageNumber';\n  number: number;\n}\n\nexport type PageItem = PlaceholderPageItem | NumberPageItem | ActivePageNumberItem;\n\nconst PANEL_LENGTH = 5;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PagesPanelGeneratorService {\n  constructor() {\n  }\n\n  /**\n   * Calculate the start page number of subrange of the pages range so\n   * currentPage will be preferably at the center of this subrange or at least inside of the subrange\n   * @param totalPages - total count of pages\n   * @param currentPage - current page\n   * @return start index (start page) of subrange\n   */\n  // put currentPage in the center of the panel or at least inside of one\n  private calculateStartIndex(totalPages: number, currentPage: number): number {\n    const panelLength = PANEL_LENGTH;\n    const half = Math.floor(panelLength / 2);\n    if (currentPage + half  {\n        const pageNumber = index + 1;\n        if (pageNumber === currentPage + 1) {\n          return { type: 'activePageNumber', number: pageNumber } as ActivePageNumberItem;\n        } else {\n          return { type: 'pageNumber', number: pageNumber } as NumberPageItem;\n        }\n      })\n      .slice(startIndex, startIndex + PANEL_LENGTH)\n    ;\n\n    // If there are pages before startIndex we add ... before \"the body\"\n    if (startIndex !== 0) {\n      result = [{ type: 'placeholder' }, ...result];\n    }\n\n    // If there are pages after startIndex we add ... after \"the body\"\n    if ((startIndex + PANEL_LENGTH + 1) \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesPanelGeneratorService.html":{"url":"injectables/PagesPanelGeneratorService.html","title":"injectable - PagesPanelGeneratorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesPanelGeneratorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateStartIndex\n                            \n                            \n                                generate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts:33\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            calculateStartIndex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateStartIndex(totalPages: number, currentPage: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts:45\n                \n            \n\n\n            \n                \n                    Calculate the start page number of subrange of the pages range so\ncurrentPage will be preferably at the center of this subrange or at least inside of the subrange\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    totalPages\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntotal count of pages\n\n\n                                    \n                                \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ncurrent page\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        start index (start page) of subrange\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generate\n                        \n                        \n                    \n                \n            \n            \n                \ngenerate(totalPages: number, currentPage: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts:60\n                \n            \n\n\n            \n                \n                    Generate intermediate representation for PaginationPagesPanelComponent\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    totalPages\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntotal count of pages\n\n\n                                    \n                                \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ncurrent page\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PageItem[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Represent three dots (...) in {@link PaginationPagesPanelComponent}\n */\nexport interface PlaceholderPageItem {\n  type: 'placeholder';\n}\n\n/**\n * Represent a non-selected page number (button with {@link number})\n */\nexport interface NumberPageItem {\n  type: 'pageNumber';\n  number: number;\n}\n\n/**\n * Represent a selected page number (primary button with {@link number})\n */\nexport interface ActivePageNumberItem {\n  type: 'activePageNumber';\n  number: number;\n}\n\nexport type PageItem = PlaceholderPageItem | NumberPageItem | ActivePageNumberItem;\n\nconst PANEL_LENGTH = 5;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PagesPanelGeneratorService {\n  constructor() {\n  }\n\n  /**\n   * Calculate the start page number of subrange of the pages range so\n   * currentPage will be preferably at the center of this subrange or at least inside of the subrange\n   * @param totalPages - total count of pages\n   * @param currentPage - current page\n   * @return start index (start page) of subrange\n   */\n  // put currentPage in the center of the panel or at least inside of one\n  private calculateStartIndex(totalPages: number, currentPage: number): number {\n    const panelLength = PANEL_LENGTH;\n    const half = Math.floor(panelLength / 2);\n    if (currentPage + half  {\n        const pageNumber = index + 1;\n        if (pageNumber === currentPage + 1) {\n          return { type: 'activePageNumber', number: pageNumber } as ActivePageNumberItem;\n        } else {\n          return { type: 'pageNumber', number: pageNumber } as NumberPageItem;\n        }\n      })\n      .slice(startIndex, startIndex + PANEL_LENGTH)\n    ;\n\n    // If there are pages before startIndex we add ... before \"the body\"\n    if (startIndex !== 0) {\n      result = [{ type: 'placeholder' }, ...result];\n    }\n\n    // If there are pages after startIndex we add ... after \"the body\"\n    if ((startIndex + PANEL_LENGTH + 1) \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaginationComponent.html":{"url":"components/PaginationComponent.html","title":"component - PaginationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PaginationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts\n\n\n    \n        Description\n    \n    \n        Dumb component for displaying of paginator\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pagination\n            \n\n            \n                styleUrls\n                ./pagination.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pagination.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePageNumber\n                            \n                            \n                                nextPage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                prevPage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canNext\n                            \n                            \n                                canPrev\n                            \n                            \n                                currentPage\n                            \n                            \n                                totalPages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                nextClicked\n                            \n                            \n                                pageChanged\n                            \n                            \n                                prevClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:30\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canNext\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        canPrev\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        currentPage\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        totalPages\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        nextClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pageChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        prevClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:29\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changePageNumber\n                        \n                        \n                    \n                \n            \n            \n                \nchangePageNumber(pageNumber: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            nextPage\n                        \n                        \n                    \n                \n            \n            \n                \nnextPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            prevPage\n                        \n                        \n                    \n                \n            \n            \n                \nprevPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { PageItem, PagesPanelGeneratorService } from './pagination-pages-panel/pages-panel-generator/pages-panel-generator.service';\n\n/**\n * Dumb component for displaying of paginator\n */\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PaginationComponent implements OnInit {\n  @Input() currentPage: number;\n  @Input() totalPages: number;\n  @Input() canNext: boolean;\n  @Input() canPrev: boolean;\n\n  @Output() nextClicked = new EventEmitter();\n  @Output() prevClicked = new EventEmitter();\n  @Output() pageChanged = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  changePageNumber(pageNumber: number) {\n    this.pageChanged.emit(pageNumber);\n  }\n\n  nextPage() {\n    this.nextClicked.emit();\n  }\n\n  prevPage() {\n    this.prevClicked.emit();\n  }\n\n}\n\n    \n\n    \n        \n  \n    chevron_left Previous page\n  \n  \n  \n    Next page chevron_right\n  \n\n\n    \n\n    \n                \n                    ./pagination.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      chevron_left Previous page          Next page chevron_right  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectedConsentsComponent', 'selector': 'app-collected-consents'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'GiveConsentFormComponent', 'selector': 'app-give-consent-form'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainAreaComponent', 'selector': 'app-main-area'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'PaginationControllerComponent', 'selector': 'app-pagination-controller'},{'name': 'PaginationPagesPanelComponent', 'selector': 'app-pagination-pages-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaginationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaginationControllerComponent.html":{"url":"components/PaginationControllerComponent.html","title":"component - PaginationControllerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PaginationControllerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts\n\n\n    \n        Description\n    \n    \n        Pagination controller as a replacement of standard mat-paginator.\nStandard mat-paginator is not suitable here, because it doesn't show pages numbers\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pagination-controller\n            \n\n            \n                styleUrls\n                ./pagination-controller.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pagination-controller.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage$\n                            \n                            \n                                hasNextPage$\n                            \n                            \n                                hasPrevPage$\n                            \n                            \n                                totalPages$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                nextPage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                prevPage\n                            \n                            \n                                setPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tableHandlerService: TableHandlerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tableHandlerService\n                                                  \n                                                        \n                                                                        TableHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            nextPage\n                        \n                        \n                    \n                \n            \n            \n                \nnextPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            prevPage\n                        \n                        \n                    \n                \n            \n            \n                \nprevPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPage\n                        \n                        \n                    \n                \n            \n            \n                \nsetPage(pageNumber: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPage$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.tableHandlerService.currentPage$\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasNextPage$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.tableHandlerService.hasNextPage$\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasPrevPage$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.tableHandlerService.hasPrevPage\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalPages$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.tableHandlerService.totalPages$\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { TableHandlerService } from '../../../services/table-handler/table-handler.service';\n\n/**\n * Pagination controller as a replacement of standard mat-paginator.\n * Standard mat-paginator is not suitable here, because it doesn't show pages numbers\n */\n@Component({\n  selector: 'app-pagination-controller',\n  templateUrl: './pagination-controller.component.html',\n  styleUrls: ['./pagination-controller.component.scss']\n})\nexport class PaginationControllerComponent implements OnInit {\n  totalPages$ = this.tableHandlerService.totalPages$;\n  currentPage$ = this.tableHandlerService.currentPage$;\n  hasNextPage$ = this.tableHandlerService.hasNextPage$;\n  hasPrevPage$ = this.tableHandlerService.hasPrevPage;\n\n  constructor(\n    private tableHandlerService: TableHandlerService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  nextPage() {\n    this.tableHandlerService.nextPage();\n  }\n\n  prevPage() {\n    this.tableHandlerService.prevPage();\n  }\n\n  setPage(pageNumber: number) {\n    this.tableHandlerService.setPage(pageNumber);\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./pagination-controller.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectedConsentsComponent', 'selector': 'app-collected-consents'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'GiveConsentFormComponent', 'selector': 'app-give-consent-form'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainAreaComponent', 'selector': 'app-main-area'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'PaginationControllerComponent', 'selector': 'app-pagination-controller'},{'name': 'PaginationPagesPanelComponent', 'selector': 'app-pagination-pages-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaginationControllerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaginationPagesPanelComponent.html":{"url":"components/PaginationPagesPanelComponent.html","title":"component - PaginationPagesPanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PaginationPagesPanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts\n\n\n    \n        Description\n    \n    \n        Component of pages numbers. It's the central part of PaginationComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pagination-pages-panel\n            \n\n            \n                styleUrls\n                ./pagination-pages-panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pagination-pages-panel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePageNumber\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                totalPages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pagesPanelGeneratorService: PagesPanelGeneratorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pagesPanelGeneratorService\n                                                  \n                                                        \n                                                                        PagesPanelGeneratorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentPage\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        totalPages\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        pageChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changePageNumber\n                        \n                        \n                    \n                \n            \n            \n                \nchangePageNumber(pageNumber: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PageItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { PageItem, PagesPanelGeneratorService } from './pages-panel-generator/pages-panel-generator.service';\n\n/**\n * Component of pages numbers. It's the central part of {@link PaginationComponent}\n */\n@Component({\n  selector: 'app-pagination-pages-panel',\n  templateUrl: './pagination-pages-panel.component.html',\n  styleUrls: ['./pagination-pages-panel.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PaginationPagesPanelComponent implements OnInit, OnChanges {\n  @Input() totalPages: number;\n  @Input() currentPage: number;\n\n  @Output() pageChanged = new EventEmitter();\n\n  pageItems: PageItem[] = [];\n  constructor(\n    private pagesPanelGeneratorService: PagesPanelGeneratorService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.pageItems = this.pagesPanelGeneratorService.generate(this.totalPages, this.currentPage);\n  }\n\n  changePageNumber(pageNumber: number) {\n    return this.pageChanged.emit(pageNumber - 1);\n  }\n\n\n\n}\n\n    \n\n    \n        \n  \n    \n      ...\n      {{item.number}}\n      {{item.number}}\n    \n  \n\n\n    \n\n    \n                \n                    ./pagination-pages-panel.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            ...      {{item.number}}      {{item.number}}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectedConsentsComponent', 'selector': 'app-collected-consents'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'GiveConsentFormComponent', 'selector': 'app-give-consent-form'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainAreaComponent', 'selector': 'app-main-area'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'PaginationControllerComponent', 'selector': 'app-pagination-controller'},{'name': 'PaginationPagesPanelComponent', 'selector': 'app-pagination-pages-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaginationPagesPanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlaceholderPageItem.html":{"url":"interfaces/PlaceholderPageItem.html","title":"interface - PlaceholderPageItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlaceholderPageItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n        \n\n            \n                Description\n            \n            \n                Represent three dots (...) in PaginationPagesPanelComponent\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Represent three dots (...) in {@link PaginationPagesPanelComponent}\n */\nexport interface PlaceholderPageItem {\n  type: 'placeholder';\n}\n\n/**\n * Represent a non-selected page number (button with {@link number})\n */\nexport interface NumberPageItem {\n  type: 'pageNumber';\n  number: number;\n}\n\n/**\n * Represent a selected page number (primary button with {@link number})\n */\nexport interface ActivePageNumberItem {\n  type: 'activePageNumber';\n  number: number;\n}\n\nexport type PageItem = PlaceholderPageItem | NumberPageItem | ActivePageNumberItem;\n\nconst PANEL_LENGTH = 5;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PagesPanelGeneratorService {\n  constructor() {\n  }\n\n  /**\n   * Calculate the start page number of subrange of the pages range so\n   * currentPage will be preferably at the center of this subrange or at least inside of the subrange\n   * @param totalPages - total count of pages\n   * @param currentPage - current page\n   * @return start index (start page) of subrange\n   */\n  // put currentPage in the center of the panel or at least inside of one\n  private calculateStartIndex(totalPages: number, currentPage: number): number {\n    const panelLength = PANEL_LENGTH;\n    const half = Math.floor(panelLength / 2);\n    if (currentPage + half  {\n        const pageNumber = index + 1;\n        if (pageNumber === currentPage + 1) {\n          return { type: 'activePageNumber', number: pageNumber } as ActivePageNumberItem;\n        } else {\n          return { type: 'pageNumber', number: pageNumber } as NumberPageItem;\n        }\n      })\n      .slice(startIndex, startIndex + PANEL_LENGTH)\n    ;\n\n    // If there are pages before startIndex we add ... before \"the body\"\n    if (startIndex !== 0) {\n      result = [{ type: 'placeholder' }, ...result];\n    }\n\n    // If there are pages after startIndex we add ... after \"the body\"\n    if ((startIndex + PANEL_LENGTH + 1) \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/shared/shared.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Module for sharing code between modules\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromShared from './store/reducers';\nimport { EffectsModule } from '@ngrx/effects';\nimport { UiEffects } from './store/ui/ui.effects';\nimport { MAT_SNACK_BAR_DEFAULT_OPTIONS, MatSnackBarModule } from '@angular/material/snack-bar';\n\n/**\n * Module for sharing code between modules\n */\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(fromShared.sharedFeatureKey, fromShared.reducers, { metaReducers: fromShared.metaReducers }),\n    EffectsModule.forFeature([UiEffects]),\n    MatSnackBarModule\n  ],\n  providers: [\n    { provide: MAT_SNACK_BAR_DEFAULT_OPTIONS, useValue: { duration: 2500 } }\n  ]\n})\nexport class SharedModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SharedState.html":{"url":"interfaces/SharedState.html","title":"interface - SharedState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SharedState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/shared/store/reducers.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ui\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ui\n                                    \n                                \n                                \n                                    \n                                        ui:         UiState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UiState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ActionReducerMap,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from 'src/environments/environment';\nimport { uiReducer, UiState } from './ui/ui.reducer';\n\nexport const sharedFeatureKey = 'shared';\n\nexport interface SharedState {\n  ui: UiState;\n}\n\nexport const reducers: ActionReducerMap = {\n  ui: uiReducer\n};\n\n\nexport const metaReducers: MetaReducer[] = !environment.production ? [] : [];\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ShowLoaderInterceptor.html":{"url":"interceptors/ShowLoaderInterceptor.html","title":"interceptor - ShowLoaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ShowLoaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/show-loader/show-loader.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uiService: UiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/show-loader/show-loader.interceptor.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/show-loader/show-loader.interceptor.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { UiService } from '../../modules/shared/services/ui/ui.service';\nimport { finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class ShowLoaderInterceptor implements HttpInterceptor {\n\n  constructor(\n    private uiService: UiService\n  ) {}\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    this.uiService.setLoading(true);\n    return next.handle(request).pipe(finalize(() => this.uiService.setLoading(false)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/StringifyConsentPipe.html":{"url":"pipes/StringifyConsentPipe.html","title":"pipe - StringifyConsentPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  StringifyConsentPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/collected-consents/pipes/stringify-consent/stringify-consent.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Show text representation of selected consents\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        stringifyConsent\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: Consent, ...args: unknown[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/pipes/stringify-consent/stringify-consent.pipe.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Consent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            unknown[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Consent } from '../../../shared/models/consent';\n\n/**\n * Show text representation of selected consents\n */\n@Pipe({\n  name: 'stringifyConsent'\n})\nexport class StringifyConsentPipe implements PipeTransform {\n\n  transform(value: Consent, ...args: unknown[]): unknown {\n    const consents: string[] = [];\n    if (value.receiveNewsletter) {\n      consents.push('Receive newsletter');\n    }\n\n    if (value.targetedAds) {\n      consents.push('Be shown targeted ads');\n    }\n\n    if (value.trackVisits) {\n      consents.push('Contribute to anonymous visit statistic');\n    }\n\n    return consents.join(', ');\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TableHandlerService.html":{"url":"injectables/TableHandlerService.html","title":"injectable - TableHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TableHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/collected-consents/services/table-handler/table-handler.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for working with the consents table state.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentPage$\n                            \n                            \n                                    Readonly\n                                hasNextPage$\n                            \n                            \n                                    Readonly\n                                hasPrevPage\n                            \n                            \n                                    Readonly\n                                totalPages$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                nextPage\n                            \n                            \n                                prevPage\n                            \n                            \n                                setPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/collected-consents/services/table-handler/table-handler.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            nextPage\n                        \n                        \n                    \n                \n            \n            \n                \nnextPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/services/table-handler/table-handler.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            prevPage\n                        \n                        \n                    \n                \n            \n            \n                \nprevPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/services/table-handler/table-handler.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPage\n                        \n                        \n                    \n                \n            \n            \n                \nsetPage(pageNumber: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/services/table-handler/table-handler.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            currentPage$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.store.select(selectCurrentPage)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/services/table-handler/table-handler.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            hasNextPage$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.store.select(hasNextPage)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/services/table-handler/table-handler.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            hasPrevPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.store.select(hasPrevPage)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/services/table-handler/table-handler.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            totalPages$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.store.select(selectTotalPages)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/services/table-handler/table-handler.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { hasNextPage, selectTotalPages, hasPrevPage, selectCurrentPage } from '../../store/consents/consents.selectors';\nimport { Store } from '@ngrx/store';\nimport { previousPage, nextPage, setPage } from '../../store/consents/consents.actions';\n\n/**\n * Service for working with the consents table state.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TableHandlerService {\n  readonly totalPages$ = this.store.select(selectTotalPages);\n  readonly currentPage$ = this.store.select(selectCurrentPage);\n  readonly hasNextPage$ = this.store.select(hasNextPage);\n  readonly hasPrevPage = this.store.select(hasPrevPage);\n\n  constructor(\n    private store: Store\n  ) { }\n\n  nextPage() {\n    this.store.dispatch(nextPage());\n  }\n\n  prevPage() {\n    this.store.dispatch(previousPage());\n  }\n\n  setPage(pageNumber: number) {\n    this.store.dispatch(setPage({ payload: pageNumber }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UiEffects.html":{"url":"injectables/UiEffects.html","title":"injectable - UiEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UiEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/shared/store/ui/ui.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showSuccessMessage$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/shared/store/ui/ui.effects.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSuccessMessage$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEffect(() => this.actions$.pipe(\n    ofType(showSuccessMessage.type),\n    tap(({ payload }) => this.snackBar.open(payload))\n  ), { dispatch: false })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/shared/store/ui/ui.effects.ts:19\n                            \n                        \n\n                \n                    \n                        Show message in snack bar\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { showSuccessMessage } from './ui.actions';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { tap } from 'rxjs/operators';\n\n\n\n@Injectable()\nexport class UiEffects {\n  constructor(\n    private actions$: Actions,\n    private snackBar: MatSnackBar\n  ) {}\n\n  /**\n   * Show message in snack bar\n   */\n  showSuccessMessage$ = createEffect(() => this.actions$.pipe(\n    ofType(showSuccessMessage.type),\n    tap(({ payload }) => this.snackBar.open(payload))\n  ), { dispatch: false });\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UiService.html":{"url":"injectables/UiService.html","title":"injectable - UiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/shared/services/ui/ui.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for ui state management\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                selectLoading$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setLoading\n                            \n                            \n                                showSuccessMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/shared/services/ui/ui.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLoading\n                        \n                        \n                    \n                \n            \n            \n                \nsetLoading(value: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/services/ui/ui.service.ts:24\n                \n            \n\n\n            \n                \n                    Show or hide the loading bar at the top of the page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nvisibility of loading bar\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showSuccessMessage\n                        \n                        \n                    \n                \n            \n            \n                \nshowSuccessMessage(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/services/ui/ui.service.ts:32\n                \n            \n\n\n            \n                \n                    Show message in snack bar\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmessage which'll be shown in snack bar\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            selectLoading$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.store.select(selectLoading)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/shared/services/ui/ui.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { selectLoading } from '../../store/ui/ui.selectors';\nimport { setLoading, showSuccessMessage } from '../../store/ui/ui.actions';\n\n/**\n * Service for ui state management\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UiService {\n  readonly selectLoading$ = this.store.select(selectLoading);\n\n  constructor(\n    private store: Store\n  ) {\n  }\n\n  /**\n   * Show or hide the loading bar at the top of the page\n   * @param value - visibility of loading bar\n   */\n  setLoading(value: boolean) {\n    this.store.dispatch(setLoading({ payload: value }));\n  }\n\n  /**\n   * Show message in snack bar\n   * @param message - message which'll be shown in snack bar\n   */\n  showSuccessMessage(message: string) {\n    this.store.dispatch(showSuccessMessage({ payload: message }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UiState.html":{"url":"interfaces/UiState.html","title":"interface - UiState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UiState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/shared/store/ui/ui.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        loading\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field represents the state of loading bar at the top of the page (show or hide)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { setLoading } from './ui.actions';\n\nexport interface UiState {\n  /**\n   * Field represents the state of loading bar at the top of the page (show or hide)\n   */\n  loading: boolean;\n}\n\nexport const initialState: UiState = {\n  loading: false\n};\n\n\nexport const uiReducer = createReducer(\n  initialState,\n  on(setLoading, (state, { payload }) => ({...state, loading: payload}))\n);\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/components/main-area/main-area.component.ts\n            \n            component\n            MainAreaComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/mock/app-mock.module.ts\n            \n            function\n            createConsent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock/app-mock.module.ts\n            \n            function\n            getConsents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock/app-mock.module.ts\n            \n            variable\n            appMockRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock/app-mock.module.ts\n            \n            variable\n            consents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock/app-mock.module.ts\n            \n            variable\n            id\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/components/collected-consents/collected-consents.component.ts\n            \n            component\n            CollectedConsentsComponent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts\n            \n            component\n            PaginationControllerComponent\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n            \n            injectable\n            PagesPanelGeneratorService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n            \n            interface\n            ActivePageNumberItem\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n            \n            interface\n            NumberPageItem\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n            \n            interface\n            PlaceholderPageItem\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n            \n            variable\n            PANEL_LENGTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts\n            \n            component\n            PaginationPagesPanelComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts\n            \n            component\n            PaginationComponent\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/pipes/stringify-consent/stringify-consent.pipe.ts\n            \n            pipe\n            StringifyConsentPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/routing/resolvers/consents-resolver/consents-resolver.service.ts\n            \n            guard\n            ConsentsResolverService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/services/collected-consents/collected-consents.service.ts\n            \n            injectable\n            CollectedConsentsService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/services/table-handler/table-handler.service.ts\n            \n            injectable\n            TableHandlerService\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.actions.ts\n            \n            variable\n            loadConsents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.actions.ts\n            \n            variable\n            loadConsentsFail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.actions.ts\n            \n            variable\n            loadConsentsSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.actions.ts\n            \n            variable\n            nextPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.actions.ts\n            \n            variable\n            previousPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.actions.ts\n            \n            variable\n            setPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.effects.ts\n            \n            injectable\n            ConsentsEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.reducer.ts\n            \n            interface\n            ConsentsState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.reducer.ts\n            \n            variable\n            calculateTotalPagesCount\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.reducer.ts\n            \n            variable\n            consentsAdapter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.reducer.ts\n            \n            variable\n            consentsFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.reducer.ts\n            \n            variable\n            consentsReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.reducer.ts\n            \n            variable\n            PAGE_SIZE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.selectors.ts\n            \n            variable\n            hasNextPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.selectors.ts\n            \n            variable\n            hasPrevPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.selectors.ts\n            \n            variable\n            selectConsents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.selectors.ts\n            \n            variable\n            selectConsentsStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.selectors.ts\n            \n            variable\n            selectCurrentPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.selectors.ts\n            \n            variable\n            selectTotalPages\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.selectors.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/reducers.ts\n            \n            interface\n            CollectedConsentsState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/reducers.ts\n            \n            variable\n            collectedConsentsFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/reducers.ts\n            \n            variable\n            metaReducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/reducers.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/selector.ts\n            \n            variable\n            selectCollectedConsents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/components/give-consent/give-consent-form/give-consent-form.component.ts\n            \n            component\n            GiveConsentFormComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/components/give-consent/give-consent.component.ts\n            \n            component\n            GiveConsentComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/services/consents-management.service.ts\n            \n            injectable\n            ConsentsManagementService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/consents-management/consents-management.actions.ts\n            \n            variable\n            createConsent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/consents-management/consents-management.actions.ts\n            \n            variable\n            createConsentFail\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/consents-management/consents-management.effects.ts\n            \n            injectable\n            ConsentsManagementEffects\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/consents-management/consents-management.reducer.ts\n            \n            interface\n            ConsentsManagementState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/consents-management/consents-management.reducer.ts\n            \n            variable\n            consentsManagementReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/consents-management/consents-management.reducer.ts\n            \n            variable\n            createConsentFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/consents-management/consents-management.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/reducers.ts\n            \n            interface\n            GiveConsentState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/reducers.ts\n            \n            variable\n            giveConsentFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/reducers.ts\n            \n            variable\n            metaReducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/reducers.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/models/consent.ts\n            \n            interface\n            Consent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/modules/shared/services/consents/consents.service.ts\n            \n            injectable\n            ConsentsService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/modules/shared/services/ui/ui.service.ts\n            \n            injectable\n            UiService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/reducers.ts\n            \n            interface\n            SharedState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/reducers.ts\n            \n            variable\n            metaReducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/reducers.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/reducers.ts\n            \n            variable\n            sharedFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/selector.ts\n            \n            variable\n            selectShared\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/ui/ui.actions.ts\n            \n            variable\n            setLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/ui/ui.actions.ts\n            \n            variable\n            showSuccessMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/ui/ui.effects.ts\n            \n            injectable\n            UiEffects\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/ui/ui.reducer.ts\n            \n            interface\n            UiState\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/ui/ui.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/ui/ui.reducer.ts\n            \n            variable\n            uiReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/ui/ui.selectors.ts\n            \n            variable\n            selectLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/ui/ui.selectors.ts\n            \n            variable\n            selectUiState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/routing/app-routing.module.ts\n            \n            variable\n            defaultRoute\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/show-loader/show-loader.interceptor.ts\n            \n            interceptor\n            ShowLoaderInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.1.4\n        \n            @angular/cdk : ^9.2.2\n        \n            @angular/common : ~9.1.4\n        \n            @angular/compiler : ~9.1.4\n        \n            @angular/core : ~9.1.4\n        \n            @angular/flex-layout : ^9.0.0-beta.29\n        \n            @angular/forms : ~9.1.4\n        \n            @angular/material : ^9.2.2\n        \n            @angular/platform-browser : ~9.1.4\n        \n            @angular/platform-browser-dynamic : ~9.1.4\n        \n            @angular/router : ~9.1.4\n        \n            @ngrx/effects : ^9.1.0\n        \n            @ngrx/entity : ^9.1.0\n        \n            @ngrx/schematics : ^9.1.0\n        \n            @ngrx/store : ^9.1.0\n        \n            @ngrx/store-devtools : ^9.1.0\n        \n            faker : ^4.1.0\n        \n            jasmine-marbles : ^0.6.0\n        \n            ngx-mock-server : ^2.0.0\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createConsent   (src/.../app-mock.module.ts)\n                        \n                        \n                            getConsents   (src/.../app-mock.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/mock/app-mock.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createConsent\n                        \n                        \n                    \n                \n            \n            \n                \ncreateConsent(req?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConsents\n                        \n                        \n                    \n                \n            \n            \n                \ngetConsents()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDidomiTestApp\n\nThis project was generated with Angular CLI version 9.1.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppMockModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CollectedConsentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CollectedConsentsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GiveConsentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GiveConsentRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CollectedConsentsModule\n\n\n\ncluster_CollectedConsentsModule_declarations\n\n\n\ncluster_CollectedConsentsModule_imports\n\n\n\ncluster_GiveConsentModule\n\n\n\ncluster_GiveConsentModule_declarations\n\n\n\ncluster_GiveConsentModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nAppModule -->\n\nLoaderComponent->AppModule\n\n\n\n\n\nMainAreaComponent\n\nMainAreaComponent\n\nAppModule -->\n\nMainAreaComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppMockModule\n\nAppMockModule\n\nAppModule -->\n\nAppMockModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nCollectedConsentsModule\n\nCollectedConsentsModule\n\nCollectedConsentsModule -->\n\nSharedModule->CollectedConsentsModule\n\n\n\n\n\nGiveConsentModule\n\nGiveConsentModule\n\nGiveConsentModule -->\n\nSharedModule->GiveConsentModule\n\n\n\n\n\nShowLoaderInterceptor\n\nShowLoaderInterceptor\n\nAppModule -->\n\nShowLoaderInterceptor->AppModule\n\n\n\n\n\nCollectedConsentsComponent\n\nCollectedConsentsComponent\n\nCollectedConsentsModule -->\n\nCollectedConsentsComponent->CollectedConsentsModule\n\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\nCollectedConsentsModule -->\n\nPaginationComponent->CollectedConsentsModule\n\n\n\n\n\nPaginationControllerComponent\n\nPaginationControllerComponent\n\nCollectedConsentsModule -->\n\nPaginationControllerComponent->CollectedConsentsModule\n\n\n\n\n\nPaginationPagesPanelComponent\n\nPaginationPagesPanelComponent\n\nCollectedConsentsModule -->\n\nPaginationPagesPanelComponent->CollectedConsentsModule\n\n\n\n\n\nStringifyConsentPipe\n\nStringifyConsentPipe\n\nCollectedConsentsModule -->\n\nStringifyConsentPipe->CollectedConsentsModule\n\n\n\n\n\nCollectedConsentsRoutingModule\n\nCollectedConsentsRoutingModule\n\nCollectedConsentsModule -->\n\nCollectedConsentsRoutingModule->CollectedConsentsModule\n\n\n\n\n\nGiveConsentComponent\n\nGiveConsentComponent\n\nGiveConsentModule -->\n\nGiveConsentComponent->GiveConsentModule\n\n\n\n\n\nGiveConsentFormComponent\n\nGiveConsentFormComponent\n\nGiveConsentModule -->\n\nGiveConsentFormComponent->GiveConsentModule\n\n\n\n\n\nGiveConsentRoutingModule\n\nGiveConsentRoutingModule\n\nGiveConsentModule -->\n\nGiveConsentRoutingModule->GiveConsentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        8 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PageItem   (src/.../pages-panel-generator.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n    \n    \n        \n            \n                \n                    \n                    PageItem\n                \n            \n            \n                \n                            PlaceholderPageItem | NumberPageItem | ActivePageNumberItem\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appMockRoutes   (src/.../app-mock.module.ts)\n                        \n                        \n                            calculateTotalPagesCount   (src/.../consents.reducer.ts)\n                        \n                        \n                            collectedConsentsFeatureKey   (src/.../reducers.ts)\n                        \n                        \n                            consents   (src/.../app-mock.module.ts)\n                        \n                        \n                            consentsAdapter   (src/.../consents.reducer.ts)\n                        \n                        \n                            consentsFeatureKey   (src/.../consents.reducer.ts)\n                        \n                        \n                            consentsManagementReducer   (src/.../consents-management.reducer.ts)\n                        \n                        \n                            consentsReducer   (src/.../consents.reducer.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            createConsent   (src/.../consents-management.actions.ts)\n                        \n                        \n                            createConsentFail   (src/.../consents-management.actions.ts)\n                        \n                        \n                            createConsentFeatureKey   (src/.../consents-management.reducer.ts)\n                        \n                        \n                            defaultRoute   (src/.../app-routing.module.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            giveConsentFeatureKey   (src/.../reducers.ts)\n                        \n                        \n                            hasNextPage   (src/.../consents.selectors.ts)\n                        \n                        \n                            hasPrevPage   (src/.../consents.selectors.ts)\n                        \n                        \n                            id   (src/.../app-mock.module.ts)\n                        \n                        \n                            initialState   (src/.../consents.reducer.ts)\n                        \n                        \n                            initialState   (src/.../consents-management.reducer.ts)\n                        \n                        \n                            initialState   (src/.../ui.reducer.ts)\n                        \n                        \n                            loadConsents   (src/.../consents.actions.ts)\n                        \n                        \n                            loadConsentsFail   (src/.../consents.actions.ts)\n                        \n                        \n                            loadConsentsSuccess   (src/.../consents.actions.ts)\n                        \n                        \n                            metaReducers   (src/.../reducers.ts)\n                        \n                        \n                            metaReducers   (src/.../reducers.ts)\n                        \n                        \n                            metaReducers   (src/.../reducers.ts)\n                        \n                        \n                            nextPage   (src/.../consents.actions.ts)\n                        \n                        \n                            PAGE_SIZE   (src/.../consents.reducer.ts)\n                        \n                        \n                            PANEL_LENGTH   (src/.../pages-panel-generator.service.ts)\n                        \n                        \n                            previousPage   (src/.../consents.actions.ts)\n                        \n                        \n                            reducers   (src/.../reducers.ts)\n                        \n                        \n                            reducers   (src/.../reducers.ts)\n                        \n                        \n                            reducers   (src/.../reducers.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            selectCollectedConsents   (src/.../selector.ts)\n                        \n                        \n                            selectConsents   (src/.../consents.selectors.ts)\n                        \n                        \n                            selectConsentsStore   (src/.../consents.selectors.ts)\n                        \n                        \n                            selectCurrentPage   (src/.../consents.selectors.ts)\n                        \n                        \n                            selectLoading   (src/.../ui.selectors.ts)\n                        \n                        \n                            selectShared   (src/.../selector.ts)\n                        \n                        \n                            selectTotalPages   (src/.../consents.selectors.ts)\n                        \n                        \n                            selectUiState   (src/.../ui.selectors.ts)\n                        \n                        \n                            setLoading   (src/.../ui.actions.ts)\n                        \n                        \n                            setPage   (src/.../consents.actions.ts)\n                        \n                        \n                            sharedFeatureKey   (src/.../reducers.ts)\n                        \n                        \n                            showSuccessMessage   (src/.../ui.actions.ts)\n                        \n                        \n                            uiReducer   (src/.../ui.reducer.ts)\n                        \n                        \n                               (src/.../consents.selectors.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/mock/app-mock.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appMockRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RouteDeclaration[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: '/consents',\n    method: 'POST',\n    callback: createConsent\n  },\n  {\n    path: '/consents',\n    method: 'GET',\n    callback: getConsents\n  }\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            consents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Consent[]\n\n                        \n                    \n                    \n                        \n                            Default value : [...Array(4)].map((_, index) => ({\n  id: index,\n  name: faker.name.findName(),\n  email: faker.internet.email(),\n  receiveNewsletter: faker.random.boolean(),\n  trackVisits: faker.random.boolean(),\n  targetedAds: faker.random.boolean()\n}))\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : consents.length\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/collected-consents/store/consents/consents.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            calculateTotalPagesCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: ConsentsState): number => {\n  const numberOfEntities = Object.values(state.entities).length;\n  return Math.floor(numberOfEntities / PAGE_SIZE) + (numberOfEntities % PAGE_SIZE === 0 ? 0 : 1);\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            consentsAdapter\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEntityAdapter({\n  selectId: consent => consent.id\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            consentsFeatureKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'consents'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            consentsReducer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createReducer(\n  initialState,\n  on(loadConsentsSuccess, (state, { payload }) => {\n    return { ...consentsAdapter.setAll(payload, state), currentPage: 0 };\n  }),\n  on(nextPage, state => {\n    const totalPagesCount = calculateTotalPagesCount(state);\n    const { currentPage } = state;\n    return (currentPage + 1) >= totalPagesCount ? state : { ...state, currentPage: currentPage + 1 };\n  }),\n  on(previousPage, state => {\n    return state.currentPage === 0 ? state : { ...state, currentPage: state.currentPage - 1 };\n  }),\n  on(setPage, (state, { payload }) => {\n    const totalPagesCount = calculateTotalPagesCount(state);\n    return (payload >= 0 && payload \n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConsentsState\n\n                        \n                    \n                    \n                        \n                            Default value : consentsAdapter.getInitialState({\n  currentPage: 0\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PAGE_SIZE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/collected-consents/store/reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            collectedConsentsFeatureKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'collectedConsents'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            metaReducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MetaReducer[]\n\n                        \n                    \n                    \n                        \n                            Default value : !environment.production ? [] : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  consents: consentsReducer\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/give-consent/store/consents-management/consents-management.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            consentsManagementReducer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createReducer(\n  initialState,\n  on(createConsentFail, (state, { payload }) => ({ ...state, error: payload }))\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createConsentFeatureKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'consentsManagement'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConsentsManagementState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  error: null\n}\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/give-consent/store/consents-management/consents-management.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createConsent\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[CreateConsent] create consent',\n  props()\n)\n                        \n                    \n\n                \n                    \n                        Action for initiate process of creating a consent entity\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createConsentFail\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[CreateConsent] create consent fail',\n  props()\n)\n                        \n                    \n\n                \n                    \n                        Action of consent creating process failure\n\n                    \n                \n\n            \n        \n\n    src/app/routing/app-routing.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultRoute\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/give-consent'\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/give-consent/store/reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            giveConsentFeatureKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'giveConsent'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            metaReducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MetaReducer[]\n\n                        \n                    \n                    \n                        \n                            Default value : !environment.production ? [] : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  consentsManagement: consentsManagementReducer\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/collected-consents/store/consents/consents.selectors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            hasNextPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n  selectConsentsStore,\n  (consentsState) => {\n    const totalPagesCount = calculateTotalPagesCount(consentsState);\n    return (consentsState.currentPage + 1) \n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasPrevPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n  selectConsentsStore,\n  (consentsState) => consentsState.currentPage > 0\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectConsents\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n  selectConsentsStore,\n  (consentsState) => {\n    const currentIndex = consentsState.currentPage * PAGE_SIZE;\n    return selectAll(consentsState).slice(currentIndex, currentIndex + PAGE_SIZE);\n  }\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectConsentsStore\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n  selectCollectedConsents,\n  store => store.consents\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectCurrentPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n  selectConsentsStore,\n  state => state.currentPage\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectTotalPages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n  selectConsentsStore,\n  calculateTotalPagesCount\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : consentsAdapter.getSelectors()\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/shared/store/ui/ui.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UiState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  loading: false\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uiReducer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createReducer(\n  initialState,\n  on(setLoading, (state, { payload }) => ({...state, loading: payload}))\n)\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/collected-consents/store/consents/consents.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            loadConsents\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[Consents] load consents'\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadConsentsFail\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[Consents] load consents fail',\n  props()\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadConsentsSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[Consents] load consents success',\n  props()\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nextPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[Consents] next page'\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            previousPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[Consents] previous page'\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[Consents] set page',\n  props()\n)\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/shared/store/reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            metaReducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MetaReducer[]\n\n                        \n                    \n                    \n                        \n                            Default value : !environment.production ? [] : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  ui: uiReducer\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sharedFeatureKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'shared'\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PANEL_LENGTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/collected-consents/store/selector.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectCollectedConsents\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createFeatureSelector(collectedConsentsFeatureKey)\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/shared/store/ui/ui.selectors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectUiState, state => state.loading)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectUiState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectShared, state => state.ui)\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/shared/store/selector.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectShared\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createFeatureSelector(sharedFeatureKey)\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/shared/store/ui/ui.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            setLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[Ui] set loading',\n  props()\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSuccessMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[Ui] show success message',\n  props()\n)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
