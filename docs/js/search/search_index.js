var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/ActivePageNumberItem.html",[0,0.815,1,1.936]],["body/interfaces/ActivePageNumberItem.html",[0,1.162,1,3.015,2,1.274,3,0.183,4,0.162,5,0.162,6,0.773,7,1.274,8,1.274,9,1.44,10,1.673,11,1.537,12,1.613,13,1.44,14,1.645,15,0.655,16,3.827,17,2.968,18,2.909,19,3.013,20,2.746,21,3.503,22,0.498,23,0.939,24,0.773,25,0.022,26,0.204,27,0.887,28,0.347,29,2.088,30,2.088,31,2.416,32,0.91,33,0.355,34,2.36,35,2.995,36,2.088,37,2.76,38,3.103,39,2.995,40,1.645,41,1.668,42,3.243,43,1.914,44,1.353,45,1.073,46,0.273,47,1.537,48,0.692,49,2.088,50,3.211,51,3.827,52,2.088,53,2.733,54,2.088,55,2.746,56,2.995,57,2.538,58,1.537,59,2.088,60,2.088,61,1.914,62,1.613,63,2.088,64,1.914,65,0.773,66,2.088,67,2.088,68,2.995,69,2.088,70,1.769,71,2.416,72,2.088,73,4.052,74,2.995,75,2.995,76,2.995,77,1.537,78,0.015,79,0.013,80,0.009]],["title/components/AppComponent.html",[81,0.861,82,1.336]],["body/components/AppComponent.html",[3,0.238,4,0.211,5,0.211,10,1.123,12,1.253,25,0.021,26,0.266,28,0.452,32,1.186,33,0.238,45,1.848,46,0.356,78,0.011,79,0.015,80,0.011,81,1.411,82,2.329,83,2.33,84,1.876,85,1.876,86,1.876,87,1.876,88,3.385,89,1.763,90,3.364,91,3.161,92,2.479,93,5.863,94,2.479,95,5.235,96,2.479,97,3.385,98,5.329,99,2.494,100,6.237,101,2.72,102,3.962,103,3.004,104,3.962,105,3.962,106,3.385,107,2.72,108,3.962,109,1.479,110,2.479,111,2.33,112,1.876,113,2.954,114,1.876,115,1.005,116,1.876,117,1.399,118,1.876,119,1.876,120,1.399,121,2.194,122,1.876,123,1.479,124,0.853,125,1.876,126,1.479,127,1.876,128,1.479,129,1.876,130,1.479,131,1.876,132,1.479,133,2.479,134,1.876,135,1.876,136,1.876]],["title/modules/AppMockModule.html",[137,1.195,138,2.252]],["body/modules/AppMockModule.html",[3,0.229,4,0.202,5,0.202,15,0.819,22,0.498,25,0.022,26,0.443,28,0.434,33,0.345,41,1.525,46,0.341,62,1.611,78,0.011,79,0.015,80,0.011,115,0.73,124,1.097,137,1.701,138,3.207,139,1.594,140,2.611,141,2.611,142,4.352,143,4.352,144,4.352,145,3.945,146,2.574,147,2.756,148,1.922,149,3.803,150,3.249,151,4.352,152,2.611,153,2.611,154,3.803,155,4.352,156,2.394,157,4.352,158,1.768,159,3.249,160,4.214,161,3.249,162,2.394,163,3.249,164,2.611,165,4.908,166,2.611,167,2.611,168,3.249,169,4.352,170,3.249,171,5.745,172,3.803,173,5.094,174,3.207,175,3.863,176,3.207,177,4.352,178,3.249,179,4.352,180,2.057,181,1.801,182,1.922,183,3.803,184,3.803,185,2.611,186,2.057]],["title/modules/AppModule.html",[137,1.195,187,2.457]],["body/modules/AppModule.html",[3,0.177,4,0.157,5,0.157,25,0.022,26,0.486,28,0.337,33,0.177,46,0.265,78,0.008,79,0.012,80,0.008,82,2.539,109,1.102,126,2.27,128,2.27,137,0.986,138,3.827,139,1.237,145,2.027,146,2.158,150,2.522,152,2.027,153,2.027,156,1.858,181,2.376,182,2.158,185,2.027,187,4.883,188,1.717,189,3.445,190,3.158,191,1.597,192,2.522,193,2.522,194,2.522,195,2.522,196,2.522,197,3.827,198,3.289,199,3.827,200,2.932,201,2.027,202,1.858,203,2.952,204,4.27,205,3.648,206,1.858,207,2.952,208,4.27,209,2.952,210,2.027,211,1.426,212,2.952,213,2.522,214,1.717,215,2.952,216,2.027,217,1.491,218,4.27,219,2.952,220,4.27,221,2.027,222,2.027,223,2.952,224,2.238,225,2.952,226,4.27,227,2.522,228,4.27,229,2.952,230,3.238,231,2.238,232,4.27,233,2.952,234,3.648,235,2.522,236,2.952,237,2.952,238,4.27,239,2.952,240,1.717,241,2.952,242,2.238,243,4.27,244,2.952,245,2.238,246,2.952,247,2.952,248,2.952,249,2.952,250,2.952,251,2.952,252,2.522,253,2.952,254,1.858,255,2.952,256,2.522,257,2.952,258,2.952]],["title/classes/AppPage.html",[46,0.321,259,2.713]],["body/classes/AppPage.html",[3,0.293,4,0.259,5,0.259,22,0.476,25,0.021,26,0.328,33,0.293,45,1.72,46,0.437,62,1.889,78,0.014,79,0.017,80,0.014,111,2.169,206,3.068,259,4.53,260,4.874,261,4.164,262,1.788,263,6.733,264,6.733,265,1.438,266,4.874,267,1.788,268,6.007,269,4.874,270,4.874,271,4.874,272,4.874,273,3.696,274,4.874]],["title/modules/AppRoutingModule.html",[137,1.195,197,2.252]],["body/modules/AppRoutingModule.html",[3,0.261,4,0.231,5,0.231,25,0.022,26,0.412,28,0.496,33,0.261,41,1.665,46,0.39,78,0.012,79,0.016,80,0.012,121,2.331,124,1.197,139,1.822,146,2.81,147,3.008,148,2.197,158,1.167,176,4.068,181,2.059,182,2.197,186,3.317,191,2.352,197,3.5,275,3.297,276,2.736,277,4.217,278,2.736,279,4.65,280,5.561,281,4.347,282,2.529,283,4.347,284,4.347,285,4.347,286,2.352,287,4.347,288,4.347,289,5.561,290,4.217,291,4.217,292,4.347]],["title/components/CollectedConsentsComponent.html",[81,0.861,117,1.263]],["body/components/CollectedConsentsComponent.html",[3,0.174,4,0.154,5,0.154,6,1.471,7,2.425,10,0.82,12,0.915,15,0.623,22,0.283,23,0.906,24,0.481,25,0.021,26,0.333,28,0.33,32,0.866,33,0.174,45,1.486,46,0.26,48,0.958,55,1.821,65,0.736,78,0.008,79,0.012,80,0.008,81,1.393,82,1.08,83,1.873,84,1.37,85,1.37,86,1.37,87,1.37,89,1.288,90,3.173,91,2.982,92,1.993,94,1.993,96,1.37,98,2.472,106,2.472,107,3.406,109,1.08,110,1.993,111,2.424,112,1.37,113,2.579,114,1.37,115,1.197,116,1.37,117,1.922,118,3.024,119,1.37,120,1.021,121,1.764,122,1.37,123,1.08,124,1.068,125,1.37,126,1.08,127,1.37,128,1.08,129,1.37,130,1.08,131,1.37,132,1.08,133,1.993,134,1.37,135,1.37,136,1.37,158,1.776,162,3.428,262,1.26,265,1.311,267,0.866,273,2.194,286,3.266,293,2.472,294,3.595,295,4.13,296,1.993,297,2.683,298,2.649,299,2.649,300,4.96,301,4.208,302,4.96,303,3.168,304,2.472,305,3.8,306,4.208,307,0.696,308,0.659,309,2.893,310,1.664,311,1.571,312,1.486,313,4.208,314,2.893,315,1.683,316,2.472,317,2.472,318,2.893,319,2.472,320,4.208,321,4.208,322,4.208,323,3.595,324,3.761,325,2.472,326,2.893,327,2.472,328,2.893,329,4.208,330,2.893,331,2.893,332,2.893,333,2.194,334,2.893,335,2.893]],["title/modules/CollectedConsentsModule.html",[137,1.195,336,2.457]],["body/modules/CollectedConsentsModule.html",[3,0.19,4,0.168,5,0.168,6,0.805,8,2.186,9,1.5,10,1.273,15,0.682,25,0.022,26,0.48,28,0.362,32,1.864,33,0.19,46,0.284,78,0.009,79,0.013,80,0.009,103,3.405,109,1.182,117,2.197,130,2.324,132,2.324,137,1.742,139,1.327,146,2.269,147,2.429,148,1.6,158,1.401,181,2.471,182,2.269,188,1.842,189,2.174,190,1.993,191,1.713,198,3.368,200,3.083,201,2.174,202,1.993,210,2.174,211,1.058,216,2.174,217,1.6,221,2.174,222,2.174,230,3.405,231,2.401,234,3.836,235,2.705,242,2.401,286,2.429,319,2.705,336,4.906,337,2.705,338,2.705,339,2.705,340,3.918,341,3.918,342,3.166,343,3.405,344,3.405,345,4.849,346,2.705,347,3.166,348,3.166,349,2.401,350,2.174,351,3.166,352,2.705,353,4.49,354,3.166,355,2.401,356,3.166,357,4.49,358,3.166,359,2.401,360,3.166,361,3.166,362,3.836,363,2.401,364,3.166,365,3.166,366,3.166,367,3.166,368,1.6,369,3.166,370,3.166]],["title/modules/CollectedConsentsRoutingModule.html",[137,1.195,341,2.252]],["body/modules/CollectedConsentsRoutingModule.html",[3,0.274,4,0.242,5,0.242,6,1.159,25,0.022,26,0.455,28,0.52,33,0.274,41,1.364,46,0.409,78,0.013,79,0.016,80,0.013,81,1.097,117,2.022,139,1.91,146,2.895,147,3.099,148,2.302,158,1.538,176,2.868,181,2.158,182,2.302,186,3.39,191,2.465,276,2.868,277,4.345,278,2.868,286,2.465,290,3.455,291,3.455,341,3.606,345,3.893,346,3.893,371,4.556,372,3.934,373,4.556,374,3.455,375,4.556,376,3.893,377,3.893]],["title/injectables/CollectedConsentsService.html",[27,0.728,305,2.252]],["body/injectables/CollectedConsentsService.html",[3,0.243,4,0.215,5,0.215,6,1.598,15,0.87,22,0.395,23,1.142,24,0.462,25,0.021,26,0.423,27,1.079,28,0.462,31,1.914,33,0.243,44,1.799,45,1.427,46,0.363,48,1.208,65,1.028,78,0.012,79,0.015,80,0.012,115,0.776,158,1.753,211,1.35,262,1.588,265,1.425,267,1.21,286,3.401,305,3.339,307,0.973,308,0.92,310,1.598,311,1.509,312,1.427,378,1.799,379,5.37,380,3.453,381,4.531,382,3.642,383,4.022,384,3.086,385,4.361,386,4.066,387,4.483,388,2.775,389,5.304,390,4.041,391,4.022,392,3.642,393,3.339,394,5.304,395,3.453,396,3.065,397,3.453,398,4.041]],["title/interfaces/CollectedConsentsState.html",[0,0.815,399,2.713]],["body/interfaces/CollectedConsentsState.html",[0,1.071,2,1.971,3,0.283,4,0.25,5,0.25,6,1.196,22,0.459,23,1.258,24,0.537,25,0.021,26,0.427,33,0.4,41,1.903,78,0.013,79,0.017,80,0.013,158,1.836,211,1.571,214,2.736,254,2.96,368,2.376,384,3.869,399,4.431,400,3.566,401,4.013,402,4.013,403,3.566,404,4.013,405,4.703,406,3.566,407,4.018,408,2.96]],["title/interfaces/Consent.html",[0,0.815,124,0.77]],["body/interfaces/Consent.html",[0,1.017,2,1.873,3,0.268,4,0.237,5,0.237,15,0.962,19,2.603,22,0.436,23,1.218,24,0.786,25,0.021,33,0.268,78,0.013,79,0.016,80,0.013,115,1.254,124,1.337,160,4.483,162,4.109,164,4.483,166,4.483,167,4.483,308,1.656,409,3.817,410,4.468,411,4.004,412,4.493]],["title/injectables/ConsentsEffects.html",[27,0.728,350,2.457]],["body/injectables/ConsentsEffects.html",[3,0.231,4,0.204,5,0.204,6,1.468,22,0.375,23,1.104,24,0.438,25,0.022,26,0.444,27,1.043,28,0.438,33,0.231,46,0.345,48,1.167,62,1.948,65,1.304,78,0.011,79,0.015,80,0.011,115,0.737,158,1.377,217,1.94,265,1.234,307,0.924,308,0.874,311,1.433,312,1.355,350,3.52,378,1.709,387,4.23,413,3.28,414,2.911,415,4.534,416,4.244,417,3.839,418,4.377,419,3.888,420,5.127,421,4.931,422,5.127,423,5.127,424,3.964,425,2.741,426,5.127,427,5.127,428,5.127,429,3.839,430,2.911,431,3.28,432,2.911,433,3.28,434,3.28,435,2.911,436,2.416,437,2.077]],["title/injectables/ConsentsManagementEffects.html",[27,0.728,438,2.457]],["body/injectables/ConsentsManagementEffects.html",[3,0.212,4,0.187,5,0.187,15,0.76,22,0.345,23,1.042,24,0.403,25,0.022,26,0.443,27,0.985,28,0.403,33,0.212,46,0.317,48,1.102,62,1.881,65,1.231,78,0.01,79,0.014,80,0.01,115,0.677,124,1.281,158,1.484,180,3.219,217,1.783,265,1.165,307,0.849,308,0.803,311,1.317,312,1.245,344,3.671,378,1.57,392,3.324,414,2.675,415,4.423,416,4.152,418,4.192,419,3.671,421,4.722,425,2.866,430,2.675,431,3.014,434,3.014,435,2.675,436,2.22,437,1.908,438,3.324,439,2.46,440,3.796,441,2.99,442,3.014,443,4.841,444,4.841,445,4.136,446,3.527,447,4.841,448,4.841,449,4.841,450,4.841,451,4.841,452,4.841,453,3.527,454,4.841,455,3.047,456,2.422,457,2.675,458,3.527,459,2.22,460,3.527]],["title/injectables/ConsentsManagementService.html",[27,0.728,461,2.457]],["body/injectables/ConsentsManagementService.html",[3,0.24,4,0.213,5,0.213,15,1.135,22,0.391,24,0.602,25,0.021,26,0.421,27,1.072,28,0.457,31,1.895,33,0.24,44,1.781,45,1.412,46,0.359,48,1.2,57,2.328,65,1.017,78,0.011,79,0.015,80,0.011,115,1.012,124,1.532,180,2.165,211,1.336,262,1.578,265,1.268,267,1.198,307,1.268,308,1.2,310,1.582,378,1.781,381,4.502,382,3.618,383,3.996,385,4.351,388,2.748,391,3.996,392,3.618,425,1.781,439,2.622,441,2.165,455,3.317,457,3.034,461,3.618,462,5.033,463,3.418,464,3.066,465,3.996,466,4.001,467,5.269,468,4.001,469,3.643,470,2.328,471,3.418,472,4.001]],["title/interfaces/ConsentsManagementState.html",[0,0.815,464,2.082]],["body/interfaces/ConsentsManagementState.html",[0,1.055,2,1.943,3,0.279,4,0.246,5,0.246,22,0.453,23,1.247,24,0.529,25,0.021,26,0.389,33,0.398,41,1.891,78,0.013,79,0.017,80,0.013,158,1.245,211,1.548,411,3.675,425,2.577,439,2.063,440,3.183,441,2.508,456,3.183,457,3.515,464,3.675,473,3.515,474,5.934,475,3.96,476,3.977,477,3.515,478,3.515,479,3.645,480,3.515,481,3.183,482,3.96,483,3.133]],["title/guards/ConsentsResolverService.html",[372,2.457,484,2.713]],["body/guards/ConsentsResolverService.html",[3,0.247,4,0.219,5,0.219,6,1.518,22,0.402,24,0.613,25,0.021,26,0.441,27,1.092,28,0.47,33,0.247,44,1.831,45,1.452,46,0.369,48,1.222,62,1.301,65,1.046,78,0.012,79,0.015,80,0.012,115,1.03,124,0.886,262,1.606,265,1.291,267,1.232,268,4.584,278,2.589,286,2.226,296,1.948,304,3.514,305,4.238,307,1.291,308,1.222,310,2.121,316,3.514,317,3.514,372,3.685,374,4.529,376,5.407,437,2.226,470,2.393,483,3.231,485,4.114,486,5.102,487,3.514,488,4.114,489,5.366,490,6.329,491,6.329,492,4.114,493,4.114,494,4.101,495,4.114,496,4.114]],["title/injectables/ConsentsService.html",[27,0.728,416,2.252]],["body/injectables/ConsentsService.html",[3,0.24,4,0.213,5,0.213,15,0.862,22,0.391,23,1.135,24,0.673,25,0.021,26,0.421,27,1.072,28,0.457,33,0.24,44,1.781,45,1.412,46,0.359,48,1.2,62,1.666,65,1.017,78,0.011,79,0.015,80,0.011,115,1.012,124,1.439,156,2.519,158,1.681,174,3.941,180,2.851,262,1.578,265,1.507,267,1.578,307,1.268,308,1.2,311,1.494,312,1.412,378,1.781,386,4.046,411,2.328,416,3.317,437,2.165,494,4.468,497,3.418,498,5.269,499,5.033,500,5.892,501,4.001,502,6.681,503,5.269,504,5.269,505,4.001,506,4.001,507,4.001,508,4.001,509,4.001]],["title/interfaces/ConsentsState.html",[0,0.815,384,2.082]],["body/interfaces/ConsentsState.html",[0,0.773,2,1.422,3,0.204,4,0.18,5,0.18,6,0.863,19,2.453,22,0.331,23,1.015,24,0.388,25,0.022,26,0.393,33,0.392,41,2.049,53,3.077,62,1.944,70,1.974,71,2.771,77,3.216,78,0.01,79,0.014,80,0.01,124,1.015,158,0.911,211,1.133,384,3.405,404,2.33,424,2.33,425,2.604,433,2.899,470,1.974,476,3.237,479,2.967,483,3.741,510,2.574,511,4.714,512,5.416,513,4.027,514,3.394,515,2.899,516,1.974,517,2.33,518,2.136,519,2.574,520,4.107,521,2.574,522,2.899,523,2.899,524,2.899,525,2.574,526,4.027,527,2.899,528,2.899,529,2.899,530,2.899,531,2.899,532,4.627,533,4.027,534,2.899,535,4.027,536,2.899]],["title/components/GiveConsentComponent.html",[81,0.861,120,1.263]],["body/components/GiveConsentComponent.html",[3,0.202,4,0.178,5,0.178,10,0.952,12,1.062,15,0.723,22,0.328,24,0.534,25,0.021,26,0.362,28,0.384,32,1.005,33,0.202,46,0.301,48,1.066,65,0.854,78,0.01,79,0.013,80,0.01,81,1.296,82,1.254,83,2.083,84,1.59,85,1.59,86,1.59,87,1.59,89,1.495,90,3.268,91,3.071,92,2.216,94,2.216,96,2.551,107,2.306,109,1.254,110,2.216,111,2.083,112,1.59,113,2.759,114,1.59,115,1.119,116,1.59,117,1.185,118,1.59,119,1.59,120,2.056,121,2.826,122,1.59,123,1.254,124,1.47,125,1.59,126,1.254,127,1.59,128,1.254,129,1.59,130,1.254,131,1.59,132,1.254,133,2.216,134,1.59,135,1.59,136,1.59,262,1.401,265,1.126,267,1.005,282,3.133,297,1.817,298,2.945,299,2.945,307,1.126,308,1.066,310,1.328,315,1.954,333,2.547,439,2.397,455,2.945,461,4,470,1.954,537,4.084,538,2.869,539,4.601,540,3.549,541,5.386,542,4.679,543,3.998,544,3.358,545,3.358,546,4.679,547,4.679,548,3.358,549,3.358,550,3.358,551,3.358,552,3.358]],["title/components/GiveConsentFormComponent.html",[81,0.861,123,1.336]],["body/components/GiveConsentFormComponent.html",[3,0.146,4,0.129,5,0.129,10,0.688,12,0.767,15,0.522,17,2.148,22,0.237,23,0.795,24,0.51,25,0.021,26,0.3,28,0.277,32,0.726,33,0.146,41,0.726,46,0.218,48,0.841,62,1.413,64,2.324,65,0.617,78,0.007,79,0.011,80,0.007,81,1.293,82,0.906,83,1.643,84,1.149,85,1.149,86,1.149,87,1.149,89,1.08,90,3.049,91,2.866,92,1.748,94,1.748,96,1.149,109,0.906,110,1.748,111,1.643,112,1.149,113,2.365,114,1.149,115,1.087,116,1.149,117,0.857,118,1.149,119,1.149,120,0.857,121,2.699,122,1.149,123,1.865,124,1.545,125,1.149,126,0.906,127,1.149,128,0.906,129,1.149,130,0.906,131,1.149,132,0.906,133,1.748,134,1.149,135,1.149,136,1.149,162,3.382,164,3.068,166,3.068,167,3.068,185,1.666,262,1.105,265,1.362,267,1.338,282,3.423,296,1.748,297,2.417,298,2.324,299,2.324,303,2.905,307,0.584,308,0.553,310,1.459,315,1.412,412,1.527,439,2.618,455,2.324,469,1.412,470,1.412,480,4.292,537,4.461,539,5.026,540,2.8,543,4.266,553,4.461,554,2.073,555,3.154,556,4.468,557,3.692,558,4.994,559,2.8,560,4.468,561,2.426,562,4.994,563,3.692,564,3.692,565,3.389,566,2.426,567,2.426,568,3.154,569,5.659,570,3.692,571,2.426,572,2.426,573,2.8,574,3.692,575,1.84,576,2.426,577,2.426,578,2.426,579,2.426,580,2.426,581,2.426,582,2.426,583,3.692,584,3.692,585,3.692,586,3.692,587,3.692,588,3.154,589,2.8,590,3.154,591,3.154,592,3.692,593,3.154,594,3.154,595,3.154]],["title/modules/GiveConsentModule.html",[137,1.195,596,2.252]],["body/modules/GiveConsentModule.html",[3,0.2,4,0.177,5,0.177,15,0.717,25,0.022,26,0.485,28,0.38,33,0.2,46,0.299,78,0.01,79,0.013,80,0.01,103,3.528,109,1.244,120,2.233,123,2.362,124,1.154,137,1.791,139,1.396,146,2.351,147,2.517,148,1.683,156,2.096,158,1.249,181,2.539,182,2.351,188,1.938,189,2.287,190,2.096,191,1.802,198,3.423,200,3.195,201,2.287,202,2.096,210,2.287,211,1.112,216,2.287,217,1.683,221,2.287,222,2.287,230,3.528,231,2.526,242,2.526,282,3.12,343,3.528,344,3.528,349,2.526,352,2.845,362,3.975,368,1.683,438,2.287,439,1.482,441,1.802,471,2.845,553,2.526,575,2.526,596,4.376,597,2.845,598,2.845,599,2.845,600,3.982,601,3.33,602,3.975,603,2.845,604,3.33,605,4.652,606,3.33,607,4.652,608,3.33,609,4.652,610,3.33,611,4.652,612,3.33,613,4.652,614,4.652,615,3.33,616,4.652,617,3.33,618,3.33,619,3.33,620,3.33,621,3.33,622,3.33,623,3.33]],["title/modules/GiveConsentRoutingModule.html",[137,1.195,600,2.252]],["body/modules/GiveConsentRoutingModule.html",[3,0.278,4,0.246,5,0.246,25,0.022,26,0.444,28,0.528,31,2.189,33,0.278,41,1.384,46,0.415,78,0.013,79,0.017,80,0.013,81,1.112,120,2.041,124,0.995,137,1.544,139,1.937,146,2.921,147,3.127,148,2.335,176,2.909,181,2.189,182,2.335,186,3.412,191,2.5,276,2.909,277,4.384,278,2.909,282,2.689,290,3.505,291,3.505,377,3.948,439,2.057,596,2.909,600,3.639,602,3.948,603,3.948,624,4.622,625,4.622]],["title/interfaces/GiveConsentState.html",[0,0.815,626,2.713]],["body/interfaces/GiveConsentState.html",[0,1.065,2,1.96,3,0.281,4,0.248,5,0.248,22,0.457,23,1.254,24,0.534,25,0.021,26,0.426,33,0.399,41,1.898,78,0.013,79,0.017,80,0.013,158,1.255,211,1.562,214,2.72,254,2.943,368,2.363,401,3.998,402,3.998,403,3.546,408,2.943,439,2.081,441,2.529,464,3.861,465,3.546,478,5.177,481,3.998,626,4.415,627,3.546,628,4.675,629,3.546]],["title/components/LoaderComponent.html",[81,0.861,126,1.336]],["body/components/LoaderComponent.html",[3,0.206,4,0.182,5,0.182,10,0.97,12,1.082,15,0.737,18,2.246,22,0.463,23,1.021,24,0.391,25,0.021,26,0.319,28,0.391,32,1.025,33,0.206,46,0.307,48,1.08,65,0.87,78,0.01,79,0.014,80,0.01,81,1.309,82,1.278,83,2.11,84,1.621,85,1.621,86,1.621,87,1.621,89,1.523,90,3.28,91,3.082,92,2.246,94,2.246,96,1.621,99,2.985,101,3.736,109,1.278,110,2.246,111,2.11,112,1.621,113,2.782,114,1.621,115,1.045,116,1.621,117,1.208,118,1.621,119,1.621,120,1.208,121,1.987,122,1.621,123,1.278,124,0.737,125,1.621,126,2.193,127,1.621,128,1.278,129,1.621,130,1.278,131,1.621,132,1.278,133,2.246,134,1.621,135,1.621,136,1.621,240,3.165,262,1.42,265,1.309,267,1.025,294,4.051,296,2.246,297,2.943,303,3.417,307,0.824,308,0.779,310,1.874,311,1.278,312,1.208,315,1.991,333,3.596,393,3.882,630,2.924,631,4.741,632,5.44,633,4.741,634,3.422,635,3.697,636,4.741,637,4.741,638,3.422,639,4.741,640,2.35,641,2.924,642,3.422,643,2.924,644,3.422,645,2.924,646,3.422]],["title/components/MainAreaComponent.html",[81,0.861,128,1.336]],["body/components/MainAreaComponent.html",[3,0.171,4,0.152,5,0.152,10,0.809,12,0.902,20,1.795,22,0.407,23,0.897,24,0.562,25,0.022,26,0.364,28,0.326,31,2.562,32,0.854,33,0.171,46,0.256,48,0.649,71,1.351,77,1.441,78,0.008,79,0.012,80,0.008,81,1.184,82,1.065,83,1.854,84,1.351,85,1.351,86,1.351,87,1.351,89,1.269,90,3.163,91,3.035,92,1.972,94,1.972,96,3.012,97,3.558,99,2.621,101,2.86,107,1.959,109,1.065,110,1.972,111,1.854,112,1.351,113,2.562,114,1.351,115,0.945,116,1.351,117,1.007,118,2.33,119,1.351,120,1.007,121,2.518,122,1.351,123,1.065,124,1.239,125,1.351,126,1.065,127,1.351,128,2.02,129,1.351,130,1.065,131,1.351,132,1.065,133,1.972,134,1.351,135,1.351,136,1.351,158,1.452,224,4.102,227,2.437,265,1.184,273,2.163,307,0.686,308,0.649,311,1.555,312,1.47,324,2.163,325,2.437,327,2.437,435,2.163,436,1.795,437,1.543,494,3.378,643,2.437,645,2.437,647,4.621,648,2.437,649,4.919,650,4.165,651,4.919,652,4.919,653,2.852,654,6.008,655,2.852,656,4.165,657,2.621,658,4.165,659,4.165,660,4.919,661,2.852,662,5.409,663,2.852,664,2.852,665,2.852,666,4.165,667,4.165,668,3.558,669,3.558,670,4.919,671,2.852,672,2.852,673,2.852,674,4.165,675,2.852,676,2.852,677,2.852,678,2.852,679,2.852,680,2.852,681,2.852]],["title/interfaces/NumberPageItem.html",[0,0.815,37,1.936]],["body/interfaces/NumberPageItem.html",[0,1.162,1,2.76,2,1.274,3,0.183,4,0.162,5,0.162,6,0.773,7,1.274,8,1.274,9,1.44,10,1.673,11,1.537,12,1.613,13,1.44,14,1.645,15,0.655,16,3.827,17,2.968,18,2.909,19,3.013,20,1.914,21,3.503,22,0.498,23,0.939,24,0.773,25,0.022,26,0.204,27,0.887,28,0.347,29,2.088,30,2.088,31,2.416,32,0.91,33,0.355,34,2.36,35,2.995,36,2.995,37,3.015,38,3.103,39,2.995,40,1.645,41,1.668,42,3.243,43,1.914,44,1.353,45,1.073,46,0.273,47,1.537,48,0.692,49,2.088,50,3.211,51,3.827,52,2.088,53,2.733,54,2.088,55,2.746,56,2.995,57,2.538,58,1.537,59,2.088,60,2.088,61,1.914,62,1.613,63,2.088,64,1.914,65,0.773,66,2.088,67,2.088,68,2.995,69,2.088,70,1.769,71,2.416,72,2.088,73,4.052,74,2.995,75,2.995,76,2.995,77,1.537,78,0.015,79,0.013,80,0.009]],["title/injectables/PagesPanelGeneratorService.html",[27,0.728,47,1.808]],["body/injectables/PagesPanelGeneratorService.html",[0,1.062,1,2.523,3,0.156,4,0.138,5,0.138,6,1.316,7,2.169,8,2.169,9,2.451,10,1.856,11,2.615,12,2.002,13,2.451,14,1.408,15,0.838,16,3.202,17,2.265,18,2.999,19,2.989,20,1.638,21,2.673,22,0.505,24,0.723,25,0.022,26,0.175,27,0.792,28,0.297,29,1.787,30,1.787,31,2.208,32,1.165,33,0.333,34,2.106,35,2.673,36,1.787,37,2.523,38,2.937,39,2.673,40,2.106,41,1.549,42,3.011,43,1.638,44,1.158,45,0.919,46,0.234,47,1.967,48,1.062,49,2.673,50,3.659,51,4.253,52,2.673,53,2.913,54,2.673,55,2.935,56,3.202,57,2.265,58,2.356,59,3.202,60,3.202,61,2.935,62,1.474,63,1.787,64,1.638,65,1.186,66,2.673,67,1.787,68,2.673,69,1.787,70,1.514,71,2.208,72,1.787,73,3.804,74,2.673,75,2.673,76,2.673,77,1.315,78,0.013,79,0.011,80,0.007,115,0.747,262,1.165,265,1.122,267,1.165,307,0.937,308,0.886,378,1.158,682,3.893,683,3.983,684,2.603,685,2.603,686,2.603,687,2.603,688,2.603,689,2.224]],["title/components/PaginationComponent.html",[81,0.861,130,1.336]],["body/components/PaginationComponent.html",[3,0.156,4,0.138,5,0.138,6,1.702,7,2.806,8,2.806,10,1.1,11,1.309,12,1.47,13,1.227,15,0.558,18,2.445,19,2.521,22,0.253,24,0.706,25,0.021,26,0.261,28,0.296,32,0.776,33,0.156,38,1.309,40,1.401,46,0.232,47,1.309,48,1.059,53,2.069,58,2.349,78,0.007,79,0.011,80,0.007,81,1.33,82,0.967,83,1.726,84,1.227,85,1.227,86,1.227,87,1.227,89,1.153,90,3.097,91,2.91,92,1.837,94,1.837,96,1.227,109,0.967,110,1.837,111,1.726,112,1.227,113,2.445,114,1.227,115,0.893,116,1.227,117,0.914,118,1.227,119,1.227,120,0.914,121,1.626,122,1.227,123,0.967,124,0.558,125,1.227,126,0.967,127,1.227,128,0.967,129,1.227,130,1.927,131,1.227,132,0.967,133,2.618,134,1.227,135,1.227,136,1.227,262,1.161,265,1.594,267,1.545,296,1.837,297,2.515,298,2.441,299,2.441,303,3.003,307,0.623,308,0.59,310,2.185,315,1.507,343,2.941,412,3.249,469,2.705,516,3.003,555,3.313,559,2.941,565,4.561,573,3.915,640,3.796,690,2.213,691,3.313,692,4.649,693,3.878,694,3.313,695,3.915,696,3.313,697,4.649,698,4.649,699,4.649,700,3.972,701,4.649,702,3.878,703,2.59,704,2.59,705,2.59,706,2.59,707,2.59,708,2.59,709,3.313,710,2.59,711,2.59,712,2.59,713,2.59,714,2.213,715,2.213,716,2.213,717,2.213,718,2.59,719,2.59,720,3.878,721,3.313,722,2.941,723,3.878]],["title/components/PaginationControllerComponent.html",[81,0.861,132,1.336]],["body/components/PaginationControllerComponent.html",[3,0.16,4,0.142,5,0.142,6,1.649,7,2.719,8,2.719,10,1.341,12,0.843,15,0.574,19,1.983,22,0.261,23,0.854,24,0.453,25,0.021,26,0.267,28,0.305,32,0.799,33,0.16,38,1.348,46,0.239,48,0.903,53,2.106,58,2.391,65,0.678,78,0.008,79,0.011,80,0.008,81,1.139,82,0.996,83,1.764,84,1.263,85,1.263,86,1.263,87,1.263,89,1.187,90,3.117,91,2.93,92,1.878,94,1.878,96,1.263,101,3.597,109,0.996,110,1.878,111,1.764,112,1.263,113,2.48,114,1.263,115,1.006,116,1.263,117,0.942,118,1.263,119,1.263,120,0.942,121,1.662,122,1.263,123,0.996,124,0.574,125,1.263,126,0.996,127,1.263,128,0.996,129,1.263,130,0.996,131,1.263,132,1.956,133,3.117,134,1.263,135,1.263,136,1.263,262,1.187,265,1.534,267,1.568,296,1.878,297,2.56,303,3.047,307,0.954,308,0.903,310,2.213,311,1.956,312,1.849,359,4.92,516,3.047,518,2.496,640,1.832,691,4.474,695,3.972,724,2.279,725,5.237,726,3.964,727,5.237,728,3.964,729,3.964,730,3.964,731,2.307,732,3.387,733,4.731,734,3.964,735,3.249,736,3.249,737,2.668,738,4.028,739,3.964,740,2.668,741,2.668,742,2.668,743,3.387,744,2.668,745,3.964,746,2.668,747,3.964,748,2.668,749,3.964,750,3.964,751,2.668,752,2.668,753,2.023,754,2.668,755,2.668,756,2.668,757,2.668]],["title/components/PaginationPagesPanelComponent.html",[32,1.071,81,0.861]],["body/components/PaginationPagesPanelComponent.html",[3,0.149,4,0.132,5,0.132,6,1.59,7,2.621,8,2.621,9,2.962,10,2.039,12,1.717,13,1.178,15,0.535,19,2.486,22,0.243,23,0.81,24,0.678,25,0.021,26,0.253,28,0.284,31,1.178,32,1.514,33,0.149,38,1.256,40,2.454,46,0.223,47,2.887,48,0.856,53,2.019,58,2.292,62,0.786,65,0.632,71,1.178,78,0.007,79,0.011,80,0.007,81,1.307,82,0.928,83,1.674,84,1.178,85,1.178,86,1.178,87,1.178,89,1.107,90,3.067,91,2.882,92,1.781,94,1.781,96,1.178,109,0.928,110,1.781,111,1.674,112,1.178,113,2.395,114,1.178,115,1.043,116,1.178,117,0.878,118,1.178,119,1.178,120,0.878,121,1.576,122,1.178,123,0.928,124,0.535,125,1.178,126,0.928,127,1.178,128,0.928,129,1.178,130,1.694,131,1.178,132,0.928,133,2.962,134,1.178,135,1.178,136,1.178,262,1.126,265,1.47,267,1.358,296,1.781,297,2.454,298,2.367,299,2.367,303,2.942,307,1.092,308,1.033,310,1.999,311,0.928,312,0.878,315,1.447,363,4.742,469,1.447,559,2.852,565,3.44,573,2.852,640,3.114,694,3.213,696,3.213,700,3.875,709,3.213,714,3.875,715,4.32,716,2.124,717,2.124,732,3.213,758,2.124,759,3.213,760,3.761,761,3.761,762,4.535,763,3.761,764,4.535,765,3.761,766,2.486,767,3.761,768,2.486,769,2.486,770,2.486,771,2.486,772,3.761,773,2.486,774,2.486,775,2.486,776,2.486,777,2.486,778,2.486,779,5.056]],["title/interfaces/PlaceholderPageItem.html",[0,0.815,34,1.936]],["body/interfaces/PlaceholderPageItem.html",[0,1.173,1,2.786,2,1.297,3,0.186,4,0.164,5,0.164,6,0.787,7,1.297,8,1.297,9,1.465,10,1.684,11,1.563,12,1.628,13,1.465,14,1.674,15,0.666,16,3.857,17,2.569,18,2.813,19,2.922,20,1.947,21,3.032,22,0.503,23,0.951,24,0.767,25,0.022,26,0.208,27,0.898,28,0.353,29,3.032,30,3.032,31,2.439,32,1.322,33,0.357,34,2.786,35,3.032,36,2.124,37,2.786,38,3.121,39,3.032,40,1.674,41,1.682,42,3.268,43,1.947,44,1.377,45,1.092,46,0.278,47,1.563,48,0.704,49,2.124,50,3.242,51,3.857,52,2.124,53,2.749,54,2.124,55,2.78,56,3.032,57,2.569,58,1.563,59,2.124,60,2.124,61,1.947,62,1.628,63,2.124,64,1.947,65,0.787,66,2.124,67,2.124,68,3.032,69,2.124,70,1.8,71,2.439,72,2.124,73,4.079,74,3.032,75,3.032,76,3.032,77,1.563,78,0.015,79,0.013,80,0.009]],["title/modules/SharedModule.html",[137,1.195,198,1.936]],["body/modules/SharedModule.html",[3,0.264,4,0.234,5,0.234,15,0.946,25,0.022,26,0.468,28,0.502,33,0.264,46,0.394,78,0.013,79,0.016,80,0.013,137,1.87,139,2.583,146,2.829,147,3.029,148,2.221,181,2.081,182,2.221,190,2.766,198,3.029,210,3.018,211,1.468,216,3.018,217,2.221,240,2.557,256,3.754,349,3.333,368,2.221,780,4.394,781,5.599,782,4.784,783,5.599,784,4.394,785,3.018,786,4.394,787,5.599,788,5.599,789,3.754,790,4.394,791,4.394,792,4.394,793,4.394,794,4.394,795,4.394,796,4.394]],["title/interfaces/SharedState.html",[0,0.815,797,2.713]],["body/interfaces/SharedState.html",[0,1.074,2,1.977,3,0.283,4,0.251,5,0.251,22,0.461,23,1.26,24,0.539,25,0.021,26,0.428,33,0.4,41,1.906,78,0.014,79,0.017,80,0.014,211,1.575,214,2.744,254,2.969,368,2.383,401,4.02,402,4.02,403,3.577,408,2.969,797,4.439,798,3.577,799,5.191,800,4.19,801,4.02,802,4.717,803,3.577,804,4.029]],["title/interceptors/ShowLoaderInterceptor.html",[199,2.252,805,3.056]],["body/interceptors/ShowLoaderInterceptor.html",[3,0.256,4,0.226,5,0.226,22,0.416,24,0.626,25,0.021,26,0.446,27,1.116,28,0.486,33,0.256,46,0.382,48,1.249,62,1.345,65,1.082,78,0.012,79,0.016,80,0.012,115,1.053,155,5.477,156,2.678,199,3.453,245,4.603,262,1.642,265,1.32,267,1.274,296,2.015,307,1.32,308,1.249,436,2.678,437,2.302,494,4.168,635,4.277,641,3.635,722,4.603,806,4.255,807,5.185,808,3.635,809,5.485,810,4.255,811,4.255,812,5.485,813,6.411,814,4.255,815,3.635,816,4.255,817,5.485,818,4.255,819,4.255,820,4.255,821,4.255]],["title/pipes/StringifyConsentPipe.html",[340,2.252,657,2.252]],["body/pipes/StringifyConsentPipe.html",[3,0.253,4,0.224,5,0.224,6,1.385,15,0.907,17,3.17,24,0.481,25,0.021,26,0.366,28,0.481,33,0.253,41,1.261,46,0.378,62,1.331,78,0.012,79,0.016,80,0.012,89,1.874,115,1.16,124,1.375,158,1.622,262,1.261,265,1.013,267,1.261,296,1.994,307,1.013,308,0.959,312,1.486,323,4.654,340,3.429,355,4.131,411,2.45,470,2.45,588,3.597,589,3.193,590,3.597,591,3.597,593,3.597,594,3.597,595,3.597,657,3.429,689,4.654,731,3.17,822,4.21,823,4.654,824,3.597,825,5.448,826,4.21,827,5.448,828,6.039,829,6.614,830,4.21,831,5.448,832,4.21,833,4.21,834,4.21,835,4.21,836,4.21,837,4.21,838,4.21]],["title/injectables/TableHandlerService.html",[27,0.728,738,2.457]],["body/injectables/TableHandlerService.html",[3,0.199,4,0.176,5,0.176,6,1.709,15,0.713,19,2.24,22,0.323,23,0.997,24,0.529,25,0.021,26,0.389,27,0.942,28,0.378,33,0.199,38,2.341,44,1.473,45,1.168,46,0.297,48,1.055,53,2.378,58,2.7,65,0.842,78,0.009,79,0.013,80,0.009,115,0.889,158,1.244,211,1.105,262,1.387,265,1.592,267,1.6,295,3.513,307,1.115,308,1.055,310,2.113,311,2.161,312,2.043,378,1.473,382,3.181,383,3.513,385,3.974,386,4.769,388,2.273,395,2.828,397,2.828,425,1.473,483,2.506,516,3.545,517,2.273,518,3.364,695,4.39,735,3.975,736,3.975,738,3.181,743,3.957,753,5.097,839,5.742,840,2.828,841,4.632,842,3.31,843,3.31,844,3.31,845,4.632,846,3.31,847,4.632,848,3.31,849,4.632,850,4.632,851,3.31,852,2.51,853,2.51,854,3.31,855,3.31,856,3.31]],["title/injectables/UiEffects.html",[27,0.728,785,2.457]],["body/injectables/UiEffects.html",[3,0.246,4,0.217,5,0.217,22,0.4,23,1.152,24,0.467,25,0.022,26,0.441,27,1.088,28,0.467,33,0.246,46,0.367,48,1.218,65,1.36,78,0.012,79,0.015,80,0.012,115,0.786,217,2.068,240,3.466,265,1.287,307,0.985,308,0.932,311,1.528,312,1.445,378,1.822,414,3.104,415,4.617,418,4.518,419,4.056,425,2.38,430,3.104,436,2.576,459,3.976,731,3.112,785,3.673,789,3.496,857,3.496,858,5.957,859,6.317,860,4.093,861,5.348,862,5.957,863,5.348,864,5.348,865,4.056,866,4.093,867,4.056,868,4.569,869,3.496]],["title/injectables/UiService.html",[27,0.728,635,2.252]],["body/injectables/UiService.html",[3,0.21,4,0.185,5,0.185,15,1.183,18,2.276,22,0.341,23,1.035,24,0.628,25,0.021,26,0.398,27,0.978,28,0.398,33,0.21,44,1.553,45,1.232,46,0.313,48,1.094,57,2.796,65,0.887,78,0.01,79,0.014,80,0.01,99,3.025,115,1.055,211,1.165,240,3.898,262,1.439,265,1.425,267,1.439,307,1.323,308,1.252,310,1.9,311,1.303,312,2.09,378,1.553,382,3.3,385,4.041,386,3.774,388,2.396,393,3.728,411,3.198,412,3.46,425,2.139,445,4.105,459,3.46,483,2.6,589,3.644,635,3.025,731,3.445,799,3.644,867,4.988,868,5.059,870,2.981,871,4.491,872,3.774,873,4.805,874,4.805,875,3.489,876,4.105,877,4.805,878,4.805,879,3.489,880,4.805,881,4.805,882,3.489,883,3.489,884,3.489,885,3.489]],["title/interfaces/UiState.html",[0,0.815,800,2.252]],["body/interfaces/UiState.html",[0,1.029,2,1.894,3,0.271,4,0.24,5,0.24,18,2.699,22,0.441,23,1.227,24,0.516,25,0.021,26,0.383,33,0.375,41,1.706,78,0.013,79,0.016,80,0.013,99,3.587,211,1.509,240,3.316,393,4.461,412,3.929,425,2.536,476,3.913,479,3.587,483,3.546,731,3.316,800,3.929,801,3.102,865,3.426,869,3.86,872,3.102,876,4.868,886,3.426,887,5.698,888,5.698,889,3.86]],["title/coverage.html",[890,3.707]],["body/coverage.html",[0,1.303,1,0.931,5,0.091,6,1.801,7,2.331,8,2.252,9,2.312,10,1.461,11,2.298,12,1.809,13,2.153,14,2.46,24,0.197,25,0.021,27,1.131,32,0.515,34,0.931,37,0.931,42,1.001,46,0.154,47,0.869,77,3.688,78,0.005,79,0.008,80,0.005,81,1.339,82,0.642,88,1.47,117,0.607,120,0.607,123,0.642,124,0.769,126,0.642,128,0.642,130,0.642,132,0.642,140,3.122,141,3.122,158,0.462,160,1.182,169,2.404,174,1.083,175,1.305,180,1.522,199,1.083,214,1.637,224,1.305,245,1.305,252,1.47,259,1.305,261,1.47,275,1.305,276,1.083,279,1.305,282,1.637,286,1.522,293,1.47,295,1.305,305,1.083,324,2.707,340,1.083,350,1.182,355,1.305,359,1.305,363,1.305,368,1.804,372,1.182,374,1.305,379,1.47,380,1.47,384,1.001,387,1.182,396,1.305,399,1.305,400,3.127,404,1.182,406,1.305,408,2.247,409,1.47,413,1.47,416,1.083,424,1.182,432,1.305,438,1.182,439,2.749,440,3.537,441,2.787,442,1.47,456,1.182,459,1.083,461,1.182,462,1.47,463,1.47,464,1.001,469,1.001,473,3.127,477,1.305,479,2.247,481,1.182,484,1.305,486,1.47,487,1.47,497,1.47,510,3.906,516,1.001,517,1.182,518,1.083,519,1.305,520,1.305,521,1.305,525,1.305,537,2.134,538,1.47,553,1.305,554,1.47,626,1.305,627,3.127,629,1.305,630,1.47,635,1.083,647,1.47,648,1.47,657,1.083,690,1.47,724,1.47,735,1.182,736,1.182,738,1.182,753,1.305,758,1.47,785,1.182,797,1.305,798,3.127,800,1.083,801,1.182,803,1.305,805,1.47,807,1.47,808,1.47,823,1.47,824,1.47,839,1.47,840,1.47,852,1.305,853,1.305,857,1.47,870,1.47,871,1.305,872,1.182,886,2.707,890,1.305,891,1.47,892,1.721,893,1.721,894,4.123,895,7.221,896,1.721,897,1.721,898,7.212,899,2.814,900,2.814,901,1.47,902,1.721,903,4.123,904,2.814,905,4.123,906,4.123,907,2.814,908,2.814,909,2.814,910,1.721,911,1.721,912,3.57,913,4.17,914,4.547,915,4.401,916,1.47,917,1.47,918,1.47,919,1.721,920,1.721,921,2.814,922,2.814,923,2.404,924,1.721,925,1.721,926,1.721,927,1.721,928,1.47,929,1.47,930,2.404,931,2.404,932,1.47,933,1.47,934,1.47,935,2.404,936,1.47,937,1.47,938,1.721]],["title/dependencies.html",[188,2.504,939,2.55]],["body/dependencies.html",[25,0.021,28,0.52,78,0.013,79,0.016,80,0.013,145,3.129,148,2.302,152,3.129,153,3.129,157,3.893,188,2.651,205,4.894,206,3.606,211,1.913,213,3.893,217,2.302,221,3.129,222,3.129,278,2.868,437,2.465,515,3.893,575,3.455,940,4.556,941,6.065,942,4.556,943,5.729,944,4.556,945,4.556,946,4.556,947,4.556,948,4.556,949,6.775,950,4.556,951,4.556,952,4.556,953,4.556,954,4.556,955,4.556,956,4.556,957,4.556,958,4.556,959,4.556,960,4.556]],["title/miscellaneous/functions.html",[961,1.737,962,3.677]],["body/miscellaneous/functions.html",[22,0.527,25,0.019,78,0.015,79,0.018,80,0.015,115,1.036,140,3.706,141,4.634,170,4.611,174,4.248,180,3.436,307,1.299,308,1.229,961,3.14,962,4.611,963,5.426,964,5.397,965,4.611]],["title/index.html",[22,0.292,966,2.985,967,2.985]],["body/index.html",[4,0.195,10,1.411,25,0.017,45,1.757,50,2.312,61,2.312,78,0.011,79,0.014,80,0.011,91,2.693,142,4.251,143,3.137,144,3.137,145,2.522,152,2.522,153,3.876,202,2.312,206,2.312,415,2.522,469,2.137,499,3.137,568,3.137,668,4.251,669,4.251,683,4.822,759,3.137,782,4.251,815,3.137,890,2.785,891,5.402,939,3.137,941,3.137,965,3.137,968,3.672,969,3.672,970,3.137,971,5.644,972,4.976,973,3.672,974,3.672,975,3.672,976,3.672,977,6.05,978,3.672,979,3.672,980,3.672,981,3.672,982,3.672,983,3.672,984,3.672,985,3.672,986,3.672,987,3.672,988,3.672,989,5.644,990,3.672,991,4.976,992,5.644,993,3.672,994,3.672,995,3.672,996,4.976,997,3.672,998,3.672,999,5.644,1000,3.672,1001,6.05,1002,3.672,1003,3.672,1004,3.672,1005,3.672,1006,3.672,1007,3.672,1008,3.672,1009,3.672,1010,4.976,1011,4.976,1012,3.672,1013,3.672,1014,4.976,1015,3.672,1016,6.666,1017,5.644,1018,3.672,1019,4.976,1020,3.672,1021,3.672,1022,5.644,1023,3.672,1024,3.672,1025,3.672,1026,3.672,1027,3.672,1028,3.672,1029,3.672,1030,6.323,1031,3.672,1032,4.976,1033,3.672,1034,4.976,1035,3.672,1036,3.672,1037,3.672,1038,3.137,1039,4.976,1040,3.672,1041,3.672,1042,3.672]],["title/modules.html",[139,2.049]],["body/modules.html",[25,0.018,78,0.015,79,0.018,80,0.015,138,3.234,139,2.154,187,3.528,197,3.234,198,2.78,206,4.161,336,3.528,341,3.234,596,3.234,600,3.234,970,5.99,1043,7.011,1044,7.259,1045,6.61,1046,6.61]],["title/overview.html",[1047,4.176]],["body/overview.html",[2,1.561,25,0.021,32,1.702,46,0.334,71,2.692,78,0.011,79,0.014,80,0.011,82,2.498,83,1.657,109,1.39,117,2.006,120,2.006,123,2.122,126,2.122,128,2.122,130,2.122,132,2.122,137,1.244,138,3.578,139,1.561,181,1.763,186,2.014,187,4.983,188,2.166,189,2.557,190,2.344,191,2.014,192,3.181,193,3.181,194,3.181,195,3.181,196,3.181,197,3.578,198,3.437,199,3.578,200,3.449,201,2.557,202,2.344,336,4.965,337,3.181,338,3.181,339,3.181,340,3.578,341,3.578,378,1.657,484,2.824,596,4.386,597,3.181,598,3.181,599,3.181,600,3.578,657,2.344,901,3.181,1047,3.181,1048,5.023,1049,5.023]],["title/routes.html",[186,2.645]],["body/routes.html",[25,0.019,78,0.017,79,0.019,80,0.017,186,3.13]],["title/miscellaneous/typealiases.html",[961,1.737,1050,4.304]],["body/miscellaneous/typealiases.html",[1,2.891,6,1.359,7,2.239,8,2.239,9,2.53,10,1.515,11,2.7,12,2.125,13,2.53,14,3.416,22,0.522,24,0.61,25,0.02,34,2.891,37,2.891,40,3.416,78,0.015,79,0.018,80,0.015,961,3.109,1051,5.343,1052,4.565]],["title/miscellaneous/variables.html",[961,1.737,1053,3.677]],["body/miscellaneous/variables.html",[6,1.164,7,0.633,8,0.633,9,0.715,10,0.428,11,0.763,12,1.029,13,0.715,14,1.366,18,1.541,19,1.364,22,0.318,24,0.747,25,0.022,41,1.37,42,1.469,43,0.95,53,2.163,62,1.537,70,0.878,71,2.005,77,2.456,78,0.004,79,0.007,80,0.004,115,0.29,121,0.633,124,1.046,140,1.036,141,2.612,151,1.289,158,1.626,159,1.289,160,2.235,161,1.289,162,0.95,163,1.289,164,1.036,165,2.78,166,1.036,167,1.036,168,1.289,174,0.95,175,1.915,176,1.589,177,2.157,178,1.289,179,2.157,180,2.29,185,1.734,214,2.213,254,2.048,275,1.145,276,1.589,279,1.915,311,2.658,312,2.512,368,2.313,384,2.463,385,0.95,387,1.734,391,1.145,392,1.734,393,2.048,396,1.915,400,1.145,401,2.235,402,2.235,404,2.235,406,1.915,407,1.289,408,2.881,411,2.663,424,1.734,425,2.268,432,1.915,439,1.448,440,1.734,441,1.366,455,1.589,456,1.734,459,1.589,464,0.878,465,1.145,473,2.885,474,2.157,475,2.157,476,2.235,477,1.915,478,1.915,479,3.333,480,1.145,481,2.235,482,1.289,483,3.398,510,1.145,513,1.289,516,1.469,517,1.734,518,1.589,519,1.915,520,3.471,521,1.915,522,1.289,523,1.289,524,1.289,525,2.468,526,2.157,527,1.289,528,1.289,529,1.289,530,1.289,531,1.289,532,3.25,533,2.157,534,1.289,535,2.78,536,1.289,540,1.145,627,1.145,629,1.915,721,1.289,722,1.145,731,0.878,735,1.734,736,1.734,798,1.145,799,2.468,800,0.95,801,2.235,803,1.915,804,1.289,852,1.915,853,1.915,865,1.915,867,1.145,871,1.915,872,1.734,886,1.145,889,1.289,913,1.289,915,1.289,916,4.152,917,1.289,918,2.78,923,2.78,928,1.289,929,2.157,930,1.289,931,1.289,932,2.157,933,1.289,934,1.289,935,1.289,936,2.157,937,2.157,961,0.878,963,3.25,1038,2.157,1052,1.289,1053,1.289,1054,4.578,1055,5.295,1056,4.233,1057,2.525,1058,1.509,1059,1.509,1060,4.86,1061,2.525,1062,4.578,1063,2.525,1064,2.525,1065,2.525,1066,1.509,1067,1.509,1068,1.509,1069,5.467,1070,2.525,1071,4.86,1072,2.525,1073,1.509,1074,2.525,1075,4.578,1076,1.509,1077,3.254,1078,2.525,1079,1.509,1080,1.509,1081,1.509,1082,3.254,1083,2.525,1084,2.525,1085,1.509,1086,1.509,1087,1.509,1088,1.509,1089,1.509,1090,1.509]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":77,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/ConsentsState.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.10.2",{"_index":960,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":954,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":895,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":914,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":894,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":897,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":71,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/ConsentsState.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.10.0",{"_index":958,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":912,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":902,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":911,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":907,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":906,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":896,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":900,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":925,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":909,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":901,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["100",{"_index":324,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/MainAreaComponent.html":{},"coverage.html":{}}}],["1000",{"_index":646,"title":{},"body":{"components/LoaderComponent.html":{}}}],["1000px",{"_index":335,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["11",{"_index":908,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":924,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":325,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/MainAreaComponent.html":{}}}],["2",{"_index":70,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/ConsentsState.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":955,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":922,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":904,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":920,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":899,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":672,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["240px",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["25",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["2500",{"_index":796,"title":{},"body":{"modules/SharedModule.html":{}}}],["25px",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["28",{"_index":919,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":927,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":905,"title":{},"body":{"coverage.html":{}}}],["4.1.0",{"_index":951,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":43,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"miscellaneous/variables.html":{}}}],["50",{"_index":903,"title":{},"body":{"coverage.html":{}}}],["500px",{"_index":552,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["6.5.4",{"_index":956,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":926,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":921,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":910,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1048,"title":{},"body":{"overview.html":{}}}],["80",{"_index":976,"title":{},"body":{"index.html":{}}}],["9",{"_index":1049,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":945,"title":{},"body":{"dependencies.html":{}}}],["9.1.0",{"_index":949,"title":{},"body":{"dependencies.html":{}}}],["9.1.4",{"_index":941,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["9.2.2",{"_index":943,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":978,"title":{},"body":{"index.html":{}}}],["a.active",{"_index":678,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["absolute",{"_index":644,"title":{},"body":{"components/LoaderComponent.html":{}}}],["action",{"_index":475,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"miscellaneous/variables.html":{}}}],["actionreducermap",{"_index":401,"title":{},"body":{"interfaces/CollectedConsentsState.html":{},"interfaces/GiveConsentState.html":{},"interfaces/SharedState.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":415,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/UiEffects.html":{},"index.html":{}}}],["activatedroutesnapshot",{"_index":490,"title":{},"body":{"guards/ConsentsResolverService.html":{}}}],["active",{"_index":1013,"title":{},"body":{"index.html":{}}}],["activepagenumber",{"_index":39,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["activepagenumberitem",{"_index":1,"title":{"interfaces/ActivePageNumberItem.html":{}},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["actual_component",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["add",{"_index":75,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["address",{"_index":583,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["ads",{"_index":591,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"pipes/StringifyConsentPipe.html":{}}}],["agree",{"_index":586,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["aliases",{"_index":1051,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular",{"_index":142,"title":{},"body":{"modules/AppMockModule.html":{},"index.html":{}}}],["angular/animations",{"_index":940,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":942,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"components/MainAreaComponent.html":{}}}],["angular/common",{"_index":148,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":156,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"injectables/ConsentsService.html":{},"modules/GiveConsentModule.html":{},"interceptors/ShowLoaderInterceptor.html":{}}}],["angular/compiler",{"_index":944,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":28,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":575,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":947,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{}}}],["angular/material/card",{"_index":612,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["angular/material/checkbox",{"_index":615,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["angular/material/icon",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{}}}],["angular/material/input",{"_index":606,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["angular/material/list",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/paginator",{"_index":358,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["angular/material/progress",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/radio",{"_index":610,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["angular/material/select",{"_index":608,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["angular/material/sidenav",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":789,"title":{},"body":{"modules/SharedModule.html":{},"injectables/UiEffects.html":{}}}],["angular/material/table",{"_index":319,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{}}}],["angular/material/toolbar",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"guards/ConsentsResolverService.html":{},"modules/GiveConsentRoutingModule.html":{},"dependencies.html":{}}}],["anonymous",{"_index":593,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"pipes/StringifyConsentPipe.html":{}}}],["ant",{"_index":1000,"title":{},"body":{"index.html":{}}}],["app",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"index.html":{}}}],["app.component",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":82,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmockmodule",{"_index":138,"title":{"modules/AppMockModule.html":{}},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appmockroutes",{"_index":175,"title":{},"body":{"modules/AppMockModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":187,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":259,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":197,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/MainAreaComponent.html":{}}}],["area'},{'name",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["area.component",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["area.component.html",{"_index":650,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["area.component.scss",{"_index":649,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["area.component.ts",{"_index":648,"title":{},"body":{"components/MainAreaComponent.html":{},"coverage.html":{}}}],["area.component.ts:12",{"_index":663,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["area.component.ts:16",{"_index":661,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["area.component.ts:20",{"_index":655,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["area/main",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"components/MainAreaComponent.html":{},"coverage.html":{}}}],["args",{"_index":828,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["array(4)].map((_",{"_index":159,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/variables.html":{}}}],["artifacts",{"_index":1031,"title":{},"body":{"index.html":{}}}],["atleastonepermissionrequiredvalidator",{"_index":558,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["atleastonpermissionrequired",{"_index":570,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["automatically",{"_index":1026,"title":{},"body":{"index.html":{}}}],["available",{"_index":970,"title":{},"body":{"index.html":{},"modules.html":{}}}],["background",{"_index":674,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["bar",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"components/LoaderComponent.html":{},"modules/SharedModule.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{}}}],["before",{"_index":74,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["beta.29",{"_index":946,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":783,"title":{},"body":{"modules/SharedModule.html":{}}}],["body",{"_index":76,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["boolean",{"_index":412,"title":{},"body":{"interfaces/Consent.html":{},"components/GiveConsentFormComponent.html":{},"components/PaginationComponent.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{}}}],["bootstrap",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"overview.html":{}}}],["bottom",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{}}}],["breakpointobserver",{"_index":654,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["breakpoints",{"_index":664,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["browse",{"_index":1044,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":271,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1030,"title":{},"body":{"index.html":{}}}],["button",{"_index":21,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["calculate",{"_index":49,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["calculatestartindex",{"_index":682,"title":{},"body":{"injectables/PagesPanelGeneratorService.html":{}}}],["calculatestartindex(totalpages",{"_index":66,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["calculatetotalpagescount",{"_index":525,"title":{},"body":{"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calculatetotalpagescount(consentsstate",{"_index":1076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calculatetotalpagescount(state",{"_index":533,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["callback",{"_index":179,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/variables.html":{}}}],["cannext",{"_index":697,"title":{},"body":{"components/PaginationComponent.html":{}}}],["canprev",{"_index":698,"title":{},"body":{"components/PaginationComponent.html":{}}}],["catcherror",{"_index":434,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{}}}],["catcherror((e",{"_index":450,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["catcherror(error",{"_index":426,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["center",{"_index":55,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/CollectedConsentsComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["central",{"_index":760,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["challenge",{"_index":969,"title":{},"body":{"index.html":{}}}],["change",{"_index":1028,"title":{},"body":{"index.html":{}}}],["changedetection",{"_index":298,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["changedetectionstrategy",{"_index":315,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":299,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["changepagenumber",{"_index":694,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["changepagenumber(pagenumber",{"_index":709,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["changes",{"_index":774,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["check",{"_index":568,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"index.html":{}}}],["chevron_left",{"_index":720,"title":{},"body":{"components/PaginationComponent.html":{}}}],["chevron_right",{"_index":723,"title":{},"body":{"components/PaginationComponent.html":{}}}],["class",{"_index":46,"title":{"classes/AppPage.html":{}},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":260,"title":{},"body":{"classes/AppPage.html":{}}}],["closed",{"_index":1008,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_collectedconsentsmodule",{"_index":337,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"overview.html":{}}}],["cluster_collectedconsentsmodule_declarations",{"_index":338,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"overview.html":{}}}],["cluster_collectedconsentsmodule_imports",{"_index":339,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"overview.html":{}}}],["cluster_giveconsentmodule",{"_index":597,"title":{},"body":{"modules/GiveConsentModule.html":{},"overview.html":{}}}],["cluster_giveconsentmodule_declarations",{"_index":598,"title":{},"body":{"modules/GiveConsentModule.html":{},"overview.html":{}}}],["cluster_giveconsentmodule_imports",{"_index":599,"title":{},"body":{"modules/GiveConsentModule.html":{},"overview.html":{}}}],["code",{"_index":782,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["collected",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["collectedconsents",{"_index":407,"title":{},"body":{"interfaces/CollectedConsentsState.html":{},"miscellaneous/variables.html":{}}}],["collectedconsentscomponent",{"_index":117,"title":{"components/CollectedConsentsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["collectedconsentsfeaturekey",{"_index":406,"title":{},"body":{"interfaces/CollectedConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["collectedconsentsmodule",{"_index":336,"title":{"modules/CollectedConsentsModule.html":{}},"body":{"modules/CollectedConsentsModule.html":{},"modules.html":{},"overview.html":{}}}],["collectedconsentsroutingmodule",{"_index":341,"title":{"modules/CollectedConsentsRoutingModule.html":{}},"body":{"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["collectedconsentsservice",{"_index":305,"title":{"injectables/CollectedConsentsService.html":{}},"body":{"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"guards/ConsentsResolverService.html":{},"coverage.html":{}}}],["collectedconsentsstate",{"_index":399,"title":{"interfaces/CollectedConsentsState.html":{}},"body":{"interfaces/CollectedConsentsState.html":{},"coverage.html":{}}}],["color",{"_index":679,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["commonmodule",{"_index":147,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules/SharedModule.html":{}}}],["compodoc",{"_index":989,"title":{},"body":{"index.html":{}}}],["component",{"_index":81,"title":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsRoutingModule.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentRoutingModule.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["components",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"overview.html":{}}}],["components/collected",{"_index":345,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{}}}],["components/give",{"_index":602,"title":{},"body":{"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{}}}],["components/loader/loader.component",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["components/main",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["consent",{"_index":124,"title":{"interfaces/Consent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"interfaces/Consent.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"pipes/StringifyConsentPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consent'},{'name",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["consent.component",{"_index":603,"title":{},"body":{"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{}}}],["consent.component.html",{"_index":542,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["consent.component.scss",{"_index":541,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["consent.component.ts",{"_index":538,"title":{},"body":{"components/GiveConsentComponent.html":{},"coverage.html":{}}}],["consent.component.ts:14",{"_index":545,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["consent.component.ts:20",{"_index":548,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["consent.id",{"_index":523,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["consent.module').then(m",{"_index":283,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["consent.module.ts",{"_index":601,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["consent.pipe",{"_index":356,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["consent.pipe.ts",{"_index":824,"title":{},"body":{"pipes/StringifyConsentPipe.html":{},"coverage.html":{}}}],["consent.pipe.ts:12",{"_index":830,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["consent/components/give",{"_index":537,"title":{},"body":{"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"coverage.html":{}}}],["consent/give",{"_index":282,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"coverage.html":{}}}],["consent/routing/give",{"_index":624,"title":{},"body":{"modules/GiveConsentRoutingModule.html":{}}}],["consent/services/consents",{"_index":462,"title":{},"body":{"injectables/ConsentsManagementService.html":{},"coverage.html":{}}}],["consent/store/consents",{"_index":440,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{},"interfaces/ConsentsManagementState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consent/store/reducers.ts",{"_index":627,"title":{},"body":{"interfaces/GiveConsentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consent/stringify",{"_index":355,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"pipes/StringifyConsentPipe.html":{},"coverage.html":{}}}],["consents",{"_index":158,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"interfaces/ConsentsManagementState.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"modules/GiveConsentModule.html":{},"interfaces/GiveConsentState.html":{},"components/MainAreaComponent.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consents'},{'name",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["consents.actions",{"_index":433,"title":{},"body":{"injectables/ConsentsEffects.html":{},"interfaces/ConsentsState.html":{}}}],["consents.component",{"_index":346,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{}}}],["consents.component.html",{"_index":301,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["consents.component.scss",{"_index":300,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["consents.component.ts",{"_index":293,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"coverage.html":{}}}],["consents.component.ts:15",{"_index":314,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["consents.component.ts:16",{"_index":306,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["consents.component.ts:21",{"_index":309,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["consents.join",{"_index":838,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["consents.length",{"_index":168,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/variables.html":{}}}],["consents.module').then(m",{"_index":287,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["consents.module.ts",{"_index":342,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["consents.push('be",{"_index":835,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["consents.push('contribute",{"_index":837,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["consents.push('receive",{"_index":833,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["consents.service",{"_index":317,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"guards/ConsentsResolverService.html":{}}}],["consents.service.ts",{"_index":380,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"coverage.html":{}}}],["consents.service.ts:13",{"_index":389,"title":{},"body":{"injectables/CollectedConsentsService.html":{}}}],["consents.service.ts:22",{"_index":390,"title":{},"body":{"injectables/CollectedConsentsService.html":{}}}],["consents/collected",{"_index":286,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"guards/ConsentsResolverService.html":{},"coverage.html":{}}}],["consents/components/collected",{"_index":7,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/CollectedConsentsComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["consents/consents.reducer",{"_index":405,"title":{},"body":{"interfaces/CollectedConsentsState.html":{}}}],["consents/pagination",{"_index":8,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"modules/CollectedConsentsModule.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["consents/pipes/stringify",{"_index":823,"title":{},"body":{"pipes/StringifyConsentPipe.html":{},"coverage.html":{}}}],["consents/routing/collected",{"_index":371,"title":{},"body":{"modules/CollectedConsentsRoutingModule.html":{}}}],["consents/routing/resolvers/consents",{"_index":486,"title":{},"body":{"guards/ConsentsResolverService.html":{},"coverage.html":{}}}],["consents/services/collected",{"_index":379,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"coverage.html":{}}}],["consents/services/table",{"_index":839,"title":{},"body":{"injectables/TableHandlerService.html":{},"coverage.html":{}}}],["consents/store/consents/consents.actions.ts",{"_index":913,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["consents/store/consents/consents.effects.ts",{"_index":413,"title":{},"body":{"injectables/ConsentsEffects.html":{},"coverage.html":{}}}],["consents/store/consents/consents.effects.ts:10",{"_index":417,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["consents/store/consents/consents.effects.ts:17",{"_index":429,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["consents/store/consents/consents.reducer.ts",{"_index":510,"title":{},"body":{"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consents/store/consents/consents.selectors.ts",{"_index":915,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["consents/store/reducers.ts",{"_index":400,"title":{},"body":{"interfaces/CollectedConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consents/store/selector.ts",{"_index":917,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["consents_url",{"_index":500,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["consentsadapter",{"_index":521,"title":{},"body":{"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consentsadapter.getinitialstate",{"_index":524,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["consentsadapter.getselectors",{"_index":1081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consentsadapter.setall(payload",{"_index":530,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["consentseffects",{"_index":350,"title":{"injectables/ConsentsEffects.html":{}},"body":{"modules/CollectedConsentsModule.html":{},"injectables/ConsentsEffects.html":{},"coverage.html":{}}}],["consentsfeaturekey",{"_index":519,"title":{},"body":{"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consentsmanagement",{"_index":478,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"interfaces/GiveConsentState.html":{},"miscellaneous/variables.html":{}}}],["consentsmanagementeffects",{"_index":438,"title":{"injectables/ConsentsManagementEffects.html":{}},"body":{"injectables/ConsentsManagementEffects.html":{},"modules/GiveConsentModule.html":{},"coverage.html":{}}}],["consentsmanagementreducer",{"_index":481,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"interfaces/GiveConsentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consentsmanagementservice",{"_index":461,"title":{"injectables/ConsentsManagementService.html":{}},"body":{"injectables/ConsentsManagementService.html":{},"components/GiveConsentComponent.html":{},"coverage.html":{}}}],["consentsmanagementstate",{"_index":464,"title":{"interfaces/ConsentsManagementState.html":{}},"body":{"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"interfaces/GiveConsentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consentsreducer",{"_index":404,"title":{},"body":{"interfaces/CollectedConsentsState.html":{},"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consentsresolverservice",{"_index":372,"title":{"guards/ConsentsResolverService.html":{}},"body":{"modules/CollectedConsentsRoutingModule.html":{},"guards/ConsentsResolverService.html":{},"coverage.html":{}}}],["consentsservice",{"_index":416,"title":{"injectables/ConsentsService.html":{}},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsService.html":{},"coverage.html":{}}}],["consentsstate",{"_index":384,"title":{"interfaces/ConsentsState.html":{}},"body":{"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consentsstate.currentpage",{"_index":1077,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":41,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"modules/AppMockModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/ConsentsManagementState.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"interfaces/SharedState.html":{},"pipes/StringifyConsentPipe.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":48,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"interceptors/ShowLoaderInterceptor.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{}}}],["constructor(actions",{"_index":414,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/UiEffects.html":{}}}],["constructor(breakpointobserver",{"_index":653,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["constructor(collectedconsentsservice",{"_index":304,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"guards/ConsentsResolverService.html":{}}}],["constructor(fb",{"_index":561,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["constructor(giveconsentservice",{"_index":544,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["constructor(httpclient",{"_index":501,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["constructor(loadingservice",{"_index":634,"title":{},"body":{"components/LoaderComponent.html":{}}}],["constructor(pagespanelgeneratorservice",{"_index":766,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["constructor(private",{"_index":665,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["constructor(store",{"_index":388,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{}}}],["constructor(tablehandlerservice",{"_index":737,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["constructor(uiservice",{"_index":810,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["container",{"_index":671,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["content",{"_index":273,"title":{},"body":{"classes/AppPage.html":{},"components/CollectedConsentsComponent.html":{},"components/MainAreaComponent.html":{}}}],["context",{"_index":936,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contribute",{"_index":592,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["controller",{"_index":725,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller'},{'name",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["controller.component",{"_index":360,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["controller.component.html",{"_index":734,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller.component.scss",{"_index":733,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller.component.ts",{"_index":724,"title":{},"body":{"components/PaginationControllerComponent.html":{},"coverage.html":{}}}],["controller.component.ts:14",{"_index":751,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller.component.ts:15",{"_index":746,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller.component.ts:16",{"_index":748,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller.component.ts:17",{"_index":739,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller.component.ts:23",{"_index":741,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller.component.ts:26",{"_index":740,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller.component.ts:30",{"_index":742,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller.component.ts:34",{"_index":744,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller/pagination",{"_index":359,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"components/PaginationControllerComponent.html":{},"coverage.html":{}}}],["controller/pagination/pagination",{"_index":9,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"modules/CollectedConsentsModule.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["controller/pagination/pagination.component",{"_index":361,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["controller/pagination/pagination.component.ts",{"_index":690,"title":{},"body":{"components/PaginationComponent.html":{},"coverage.html":{}}}],["controller/pagination/pagination.component.ts:23",{"_index":705,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:24",{"_index":706,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:25",{"_index":703,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:26",{"_index":704,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:28",{"_index":707,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:29",{"_index":708,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:30",{"_index":702,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:34",{"_index":712,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:37",{"_index":710,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:41",{"_index":711,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:45",{"_index":713,"title":{},"body":{"components/PaginationComponent.html":{}}}],["count",{"_index":60,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["coverage",{"_index":890,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":1070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction",{"_index":1069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createconsent",{"_index":180,"title":{},"body":{"modules/AppMockModule.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"injectables/ConsentsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createconsent(consent",{"_index":504,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["createconsent(req",{"_index":170,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/functions.html":{}}}],["createconsentfail",{"_index":456,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{},"interfaces/ConsentsManagementState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createconsentfeaturekey",{"_index":477,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["created",{"_index":344,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"injectables/ConsentsManagementEffects.html":{},"modules/GiveConsentModule.html":{}}}],["createeffect",{"_index":418,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/UiEffects.html":{}}}],["createentityadapter",{"_index":513,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["createfeatureselector(collectedconsentsfeaturekey",{"_index":1085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createfeatureselector(sharedfeaturekey",{"_index":1090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createreducer",{"_index":476,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"interfaces/ConsentsState.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["createselector",{"_index":1075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectshared",{"_index":1088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectuistate",{"_index":1086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creating",{"_index":455,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"miscellaneous/variables.html":{}}}],["current",{"_index":61,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"index.html":{}}}],["currentindex",{"_index":1078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentpage",{"_index":53,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/ConsentsState.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"injectables/TableHandlerService.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":171,"title":{},"body":{"modules/AppMockModule.html":{}}}],["declarations",{"_index":181,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["default",{"_index":311,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsService.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"miscellaneous/variables.html":{}}}],["defaultroute",{"_index":279,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":265,"title":{},"body":{"classes/AppPage.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{}}}],["dependencies",{"_index":188,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deployed",{"_index":985,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":997,"title":{},"body":{"index.html":{}}}],["description",{"_index":15,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"modules/AppMockModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/Consent.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"components/LoaderComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{}}}],["dev",{"_index":1024,"title":{},"body":{"index.html":{}}}],["development",{"_index":1021,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["didomi",{"_index":668,"title":{},"body":{"components/MainAreaComponent.html":{},"index.html":{}}}],["direction",{"_index":330,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["directive",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["directives",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["directory",{"_index":1034,"title":{},"body":{"index.html":{}}}],["dispatch",{"_index":864,"title":{},"body":{"injectables/UiEffects.html":{}}}],["display",{"_index":328,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["displayedcolumns",{"_index":302,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["displaying",{"_index":343,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"components/PaginationComponent.html":{}}}],["dist",{"_index":1033,"title":{},"body":{"index.html":{}}}],["dist/docs",{"_index":1042,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":891,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doesn't",{"_index":730,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["dom",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["dots",{"_index":30,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["dumb",{"_index":555,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"components/PaginationComponent.html":{}}}],["duration",{"_index":795,"title":{},"body":{"modules/SharedModule.html":{}}}],["dynamic",{"_index":948,"title":{},"body":{"dependencies.html":{}}}],["e.message",{"_index":452,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["e2e/src/app.po.ts",{"_index":261,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":269,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":266,"title":{},"body":{"classes/AppPage.html":{}}}],["effects",{"_index":443,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["effectsmodule",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"modules/SharedModule.html":{}}}],["effectsmodule.forfeature([consentseffects",{"_index":370,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["effectsmodule.forfeature([consentsmanagementeffects",{"_index":623,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["effectsmodule.forfeature([uieffects",{"_index":793,"title":{},"body":{"modules/SharedModule.html":{}}}],["effectsmodule.forroot",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["effortlessly",{"_index":984,"title":{},"body":{"index.html":{}}}],["element",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["element(by.css('app",{"_index":272,"title":{},"body":{"classes/AppPage.html":{}}}],["element.email",{"_index":321,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["element.name",{"_index":320,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["email",{"_index":162,"title":{},"body":{"modules/AppMockModule.html":{},"components/CollectedConsentsComponent.html":{},"interfaces/Consent.html":{},"components/GiveConsentFormComponent.html":{},"miscellaneous/variables.html":{}}}],["enabled",{"_index":184,"title":{},"body":{"modules/AppMockModule.html":{}}}],["end",{"_index":981,"title":{},"body":{"index.html":{}}}],["enjoi",{"_index":1020,"title":{},"body":{"index.html":{}}}],["entity",{"_index":540,"title":{},"body":{"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"miscellaneous/variables.html":{}}}],["entityadapter",{"_index":514,"title":{},"body":{"interfaces/ConsentsState.html":{}}}],["entitystate",{"_index":512,"title":{},"body":{"interfaces/ConsentsState.html":{}}}],["environment",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/GiveConsentState.html":{},"interfaces/SharedState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/GiveConsentState.html":{},"interfaces/SharedState.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":474,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"miscellaneous/variables.html":{}}}],["error.message",{"_index":428,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["eventemitter",{"_index":565,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["execute",{"_index":1040,"title":{},"body":{"index.html":{}}}],["export",{"_index":33,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{}}}],["exports",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":511,"title":{},"body":{"interfaces/ConsentsState.html":{}}}],["eyes",{"_index":1007,"title":{},"body":{"index.html":{}}}],["fail",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["failure",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["faker",{"_index":157,"title":{},"body":{"modules/AppMockModule.html":{},"dependencies.html":{}}}],["faker.internet.email",{"_index":163,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/variables.html":{}}}],["faker.name.findname",{"_index":161,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/variables.html":{}}}],["faker.random.boolean",{"_index":165,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":865,"title":{},"body":{"injectables/UiEffects.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":564,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["fb.group",{"_index":577,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["features",{"_index":973,"title":{},"body":{"index.html":{}}}],["field",{"_index":887,"title":{},"body":{"interfaces/UiState.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"coverage.html":{}}}],["files",{"_index":1029,"title":{},"body":{"index.html":{}}}],["finalize",{"_index":818,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["flag",{"_index":1037,"title":{},"body":{"index.html":{}}}],["flex",{"_index":329,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["flexlayoutmodule",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["flexmodule",{"_index":362,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{}}}],["form",{"_index":539,"title":{},"body":{"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{}}}],["form'},{'name",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["form.component",{"_index":617,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["form.component.html",{"_index":557,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["form.component.scss",{"_index":556,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["form.component.ts",{"_index":554,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:15",{"_index":566,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["form.component.ts:17",{"_index":563,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["form.component.ts:35",{"_index":567,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["form.component.ts:44",{"_index":571,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["form.component.ts:47",{"_index":572,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["form/give",{"_index":553,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"coverage.html":{}}}],["format",{"_index":585,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["formbuilder",{"_index":562,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["formgroup",{"_index":569,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["formgroup.value",{"_index":580,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["fromcollectedconsents",{"_index":348,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["fromcollectedconsents.collectedconsentsfeaturekey",{"_index":366,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["fromcollectedconsents.metareducers",{"_index":369,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["fromcollectedconsents.reducers",{"_index":367,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["fromgiveconsent",{"_index":618,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["fromgiveconsent.metareducers",{"_index":622,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["fromgiveconsent.reducers",{"_index":621,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["fromshared",{"_index":784,"title":{},"body":{"modules/SharedModule.html":{}}}],["fromshared.metareducers",{"_index":792,"title":{},"body":{"modules/SharedModule.html":{}}}],["fromshared.reducers",{"_index":791,"title":{},"body":{"modules/SharedModule.html":{}}}],["front",{"_index":980,"title":{},"body":{"index.html":{}}}],["full",{"_index":291,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentRoutingModule.html":{}}}],["function",{"_index":169,"title":{},"body":{"modules/AppMockModule.html":{},"coverage.html":{}}}],["functions",{"_index":962,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway",{"_index":498,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["generate",{"_index":683,"title":{},"body":{"injectables/PagesPanelGeneratorService.html":{},"index.html":{}}}],["generate(totalpages",{"_index":686,"title":{},"body":{"injectables/PagesPanelGeneratorService.html":{}}}],["generator.service",{"_index":716,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["generator.service.ts",{"_index":14,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["generator.service.ts:33",{"_index":684,"title":{},"body":{"injectables/PagesPanelGeneratorService.html":{}}}],["generator.service.ts:45",{"_index":685,"title":{},"body":{"injectables/PagesPanelGeneratorService.html":{}}}],["generator.service.ts:60",{"_index":687,"title":{},"body":{"injectables/PagesPanelGeneratorService.html":{}}}],["generator/pages",{"_index":13,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["getconsents",{"_index":174,"title":{},"body":{"modules/AppMockModule.html":{},"injectables/ConsentsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":966,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":263,"title":{},"body":{"classes/AppPage.html":{}}}],["github",{"_index":971,"title":{},"body":{"index.html":{}}}],["give",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["giveconsent",{"_index":465,"title":{},"body":{"injectables/ConsentsManagementService.html":{},"interfaces/GiveConsentState.html":{},"miscellaneous/variables.html":{}}}],["giveconsent(consent",{"_index":467,"title":{},"body":{"injectables/ConsentsManagementService.html":{}}}],["giveconsentcomponent",{"_index":120,"title":{"components/GiveConsentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["giveconsentfeaturekey",{"_index":629,"title":{},"body":{"interfaces/GiveConsentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["giveconsentformcomponent",{"_index":123,"title":{"components/GiveConsentFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["giveconsentmodule",{"_index":596,"title":{"modules/GiveConsentModule.html":{}},"body":{"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["giveconsentroutingmodule",{"_index":600,"title":{"modules/GiveConsentRoutingModule.html":{}},"body":{"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["giveconsentservice",{"_index":546,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["giveconsentstate",{"_index":626,"title":{"interfaces/GiveConsentState.html":{}},"body":{"interfaces/GiveConsentState.html":{},"coverage.html":{}}}],["given",{"_index":322,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["graph",{"_index":1043,"title":{},"body":{"modules.html":{}}}],["green_book",{"_index":995,"title":{},"body":{"index.html":{}}}],["guard",{"_index":484,"title":{"guards/ConsentsResolverService.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":485,"title":{},"body":{"guards/ConsentsResolverService.html":{}}}],["half",{"_index":68,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["handler.service",{"_index":754,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["handler.service.ts",{"_index":840,"title":{},"body":{"injectables/TableHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:13",{"_index":851,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["handler.service.ts:14",{"_index":846,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["handler.service.ts:15",{"_index":848,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["handler.service.ts:16",{"_index":841,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["handler.service.ts:22",{"_index":842,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["handler.service.ts:26",{"_index":843,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["handler.service.ts:30",{"_index":844,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["handler/table",{"_index":753,"title":{},"body":{"components/PaginationControllerComponent.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{}}}],["handling",{"_index":454,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["handy",{"_index":988,"title":{},"body":{"index.html":{}}}],["hasnextpage",{"_index":735,"title":{},"body":{"components/PaginationControllerComponent.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hasprevpage",{"_index":736,"title":{},"body":{"components/PaginationControllerComponent.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":327,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/MainAreaComponent.html":{}}}],["here",{"_index":729,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["hide",{"_index":876,"title":{},"body":{"injectables/UiService.html":{},"interfaces/UiState.html":{}}}],["host",{"_index":326,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["html",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["http",{"_index":144,"title":{},"body":{"modules/AppMockModule.html":{},"index.html":{}}}],["http://localhost:4200",{"_index":1019,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":502,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["httpclientmodule",{"_index":616,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["httpevent",{"_index":816,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["httphandler",{"_index":813,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["httpinterceptor",{"_index":817,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["httprequest",{"_index":155,"title":{},"body":{"modules/AppMockModule.html":{},"interceptors/ShowLoaderInterceptor.html":{}}}],["id",{"_index":160,"title":{},"body":{"modules/AppMockModule.html":{},"interfaces/Consent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":892,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":296,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"guards/ConsentsResolverService.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{}}}],["import",{"_index":26,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{}}}],["import('../modules/collected",{"_index":285,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('../modules/give",{"_index":281,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":182,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules/SharedModule.html":{}}}],["incorrect",{"_index":584,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"interfaces/ActivePageNumberItem.html":{},"modules/AppMockModule.html":{},"classes/AppPage.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{}}}],["inherit",{"_index":675,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["initialstate",{"_index":479,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"interfaces/ConsentsState.html":{},"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initiate",{"_index":391,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":27,"title":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"injectables/ConsentsService.html":{},"injectables/PagesPanelGeneratorService.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{}},"body":{"interfaces/ActivePageNumberItem.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"interceptors/ShowLoaderInterceptor.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"coverage.html":{}}}],["injectables",{"_index":378,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"injectables/ConsentsService.html":{},"injectables/PagesPanelGeneratorService.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"overview.html":{}}}],["input",{"_index":640,"title":{},"body":{"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["inputs",{"_index":696,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["inside",{"_index":56,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["install",{"_index":1010,"title":{},"body":{"index.html":{}}}],["intercept",{"_index":809,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["intercept(request",{"_index":812,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["interceptor",{"_index":805,"title":{"interceptors/ShowLoaderInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":806,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActivePageNumberItem.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"interfaces/ConsentsManagementState.html":{},"interfaces/ConsentsState.html":{},"interfaces/GiveConsentState.html":{},"interfaces/NumberPageItem.html":{},"interfaces/PlaceholderPageItem.html":{},"interfaces/SharedState.html":{},"interfaces/UiState.html":{}},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"interfaces/ConsentsManagementState.html":{},"interfaces/ConsentsState.html":{},"interfaces/GiveConsentState.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"interfaces/SharedState.html":{},"interfaces/UiState.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"interfaces/ConsentsManagementState.html":{},"interfaces/ConsentsState.html":{},"interfaces/GiveConsentState.html":{},"interfaces/NumberPageItem.html":{},"interfaces/PlaceholderPageItem.html":{},"interfaces/SharedState.html":{},"interfaces/UiState.html":{},"overview.html":{}}}],["intermediate",{"_index":688,"title":{},"body":{"injectables/PagesPanelGeneratorService.html":{}}}],["ishandset",{"_index":651,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["it's",{"_index":759,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{},"index.html":{}}}],["item.number",{"_index":779,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["item.title",{"_index":666,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["jasmine",{"_index":952,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":149,"title":{},"body":{"modules/AppMockModule.html":{}}}],["json(200",{"_index":173,"title":{},"body":{"modules/AppMockModule.html":{}}}],["justify",{"_index":332,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["karma",{"_index":1041,"title":{},"body":{"index.html":{}}}],["key",{"_index":972,"title":{},"body":{"index.html":{}}}],["latest",{"_index":991,"title":{},"body":{"index.html":{}}}],["layout",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"dependencies.html":{}}}],["layoutmodule",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["left",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"overview.html":{}}}],["level",{"_index":143,"title":{},"body":{"modules/AppMockModule.html":{},"index.html":{}}}],["link",{"_index":31,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"modules/GiveConsentRoutingModule.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["links",{"_index":652,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["list",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{}}}],["literal",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["load",{"_index":1082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":280,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadconsents",{"_index":387,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadconsentsfail",{"_index":432,"title":{},"body":{"injectables/ConsentsEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadconsentssuccess",{"_index":424,"title":{},"body":{"injectables/ConsentsEffects.html":{},"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loader",{"_index":631,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader'},{'name",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["loader.component.html",{"_index":633,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":632,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.interceptor",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["loader.interceptor.ts",{"_index":808,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{},"coverage.html":{}}}],["loader.interceptor.ts:13",{"_index":811,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["loader.interceptor.ts:19",{"_index":814,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["loader/show",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"interceptors/ShowLoaderInterceptor.html":{},"coverage.html":{}}}],["loadercomponent",{"_index":126,"title":{"components/LoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loading",{"_index":393,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"components/LoaderComponent.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["loadingservice",{"_index":637,"title":{},"body":{"components/LoaderComponent.html":{}}}],["lock",{"_index":979,"title":{},"body":{"index.html":{}}}],["logonly",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["lts",{"_index":1014,"title":{},"body":{"index.html":{}}}],["m.collectedconsentsmodule",{"_index":288,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.giveconsentmodule",{"_index":284,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["mainareacomponent",{"_index":128,"title":{"components/MainAreaComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["maintenance",{"_index":1015,"title":{},"body":{"index.html":{}}}],["management",{"_index":445,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{},"injectables/UiService.html":{}}}],["management.actions",{"_index":457,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{}}}],["management.actions.ts",{"_index":923,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["management.effects",{"_index":619,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["management.effects.ts",{"_index":442,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{},"coverage.html":{}}}],["management.effects.ts:13",{"_index":446,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["management.effects.ts:23",{"_index":453,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["management.reducer",{"_index":628,"title":{},"body":{"interfaces/GiveConsentState.html":{}}}],["management.reducer.ts",{"_index":473,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["management.service",{"_index":550,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["management.service.ts",{"_index":463,"title":{},"body":{"injectables/ConsentsManagementService.html":{},"coverage.html":{}}}],["management.service.ts:12",{"_index":466,"title":{},"body":{"injectables/ConsentsManagementService.html":{}}}],["management.service.ts:23",{"_index":468,"title":{},"body":{"injectables/ConsentsManagementService.html":{}}}],["management/consents",{"_index":441,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"modules/GiveConsentModule.html":{},"interfaces/GiveConsentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["manually",{"_index":993,"title":{},"body":{"index.html":{}}}],["map",{"_index":435,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"components/MainAreaComponent.html":{}}}],["map(consents",{"_index":423,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["map(result",{"_index":658,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["mapto",{"_index":458,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["mapto(showsuccessmessage",{"_index":449,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["marbles",{"_index":953,"title":{},"body":{"dependencies.html":{}}}],["margin",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{}}}],["mat",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationControllerComponent.html":{}}}],["mat_snack_bar_default_options",{"_index":787,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbuttonmodule",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{}}}],["matcardmodule",{"_index":611,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["matcheckboxmodule",{"_index":614,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["matching",{"_index":79,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor(numberofentities",{"_index":528,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["math.floor(panellength",{"_index":69,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["maticonmodule",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{}}}],["matinputmodule",{"_index":605,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["matlistmodule",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["matpaginatormodule",{"_index":357,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["matprogressbarmodule",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["matradiomodule",{"_index":609,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["matselectmodule",{"_index":607,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["matsidenavmodule",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":859,"title":{},"body":{"injectables/UiEffects.html":{}}}],["matsnackbarmodule",{"_index":788,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattabledatasource",{"_index":318,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["mattablemodule",{"_index":353,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["mattoolbarmodule",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["maxage",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["menu",{"_index":667,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["message",{"_index":867,"title":{},"body":{"injectables/UiEffects.html":{},"injectables/UiService.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"pipes/StringifyConsentPipe.html":{}}}],["metareducer",{"_index":402,"title":{},"body":{"interfaces/CollectedConsentsState.html":{},"interfaces/GiveConsentState.html":{},"interfaces/SharedState.html":{},"miscellaneous/variables.html":{}}}],["metareducers",{"_index":368,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"interfaces/CollectedConsentsState.html":{},"modules/GiveConsentModule.html":{},"interfaces/GiveConsentState.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["method",{"_index":177,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":262,"title":{},"body":{"classes/AppPage.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{}}}],["min",{"_index":334,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["miscellaneous",{"_index":961,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":145,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["mock.module",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["mock.module.ts",{"_index":141,"title":{},"body":{"modules/AppMockModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mock/app",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["mocks",{"_index":982,"title":{},"body":{"index.html":{}}}],["model",{"_index":410,"title":{},"body":{"interfaces/Consent.html":{}}}],["models/consent",{"_index":507,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["module",{"_index":137,"title":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":139,"title":{"modules.html":{}},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/shared/models/consent",{"_index":154,"title":{},"body":{"modules/AppMockModule.html":{}}}],["modules/shared/services/ui/ui.service",{"_index":641,"title":{},"body":{"components/LoaderComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{}}}],["modules/shared/shared.module",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["multi",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"modules/AppMockModule.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nav",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["navigate",{"_index":1025,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":264,"title":{},"body":{"classes/AppPage.html":{}}}],["new",{"_index":469,"title":{},"body":{"injectables/ConsentsManagementService.html":{},"components/GiveConsentFormComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{},"index.html":{}}}],["newsletter",{"_index":588,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"pipes/StringifyConsentPipe.html":{}}}],["next",{"_index":722,"title":{},"body":{"components/PaginationComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"miscellaneous/variables.html":{}}}],["next.handle(request).pipe(finalize",{"_index":820,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["nextclicked",{"_index":699,"title":{},"body":{"components/PaginationComponent.html":{}}}],["nextpage",{"_index":516,"title":{},"body":{"interfaces/ConsentsState.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":1022,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":146,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules/SharedModule.html":{}}}],["ngonchanges",{"_index":765,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["ngonchanges(changes",{"_index":772,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["ngoninit",{"_index":303,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["ngrx",{"_index":1003,"title":{},"body":{"index.html":{}}}],["ngrx/effects",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"modules/GiveConsentModule.html":{},"modules/SharedModule.html":{},"injectables/UiEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":515,"title":{},"body":{"interfaces/ConsentsState.html":{},"dependencies.html":{}}}],["ngrx/schematics",{"_index":950,"title":{},"body":{"dependencies.html":{}}}],["ngrx/store",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"interfaces/ConsentsState.html":{},"modules/GiveConsentModule.html":{},"interfaces/GiveConsentState.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"dependencies.html":{}}}],["ngx",{"_index":152,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngxmockservermodule",{"_index":150,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{}}}],["ngxmockservermodule.forroot",{"_index":183,"title":{},"body":{"modules/AppMockModule.html":{}}}],["node.js",{"_index":1011,"title":{},"body":{"index.html":{}}}],["non",{"_index":36,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["npm",{"_index":1017,"title":{},"body":{"index.html":{}}}],["null",{"_index":480,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"components/GiveConsentFormComponent.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":19,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/Consent.html":{},"interfaces/ConsentsState.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"injectables/TableHandlerService.html":{},"miscellaneous/variables.html":{}}}],["numberofentities",{"_index":526,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["numberpageitem",{"_index":37,"title":{"interfaces/NumberPageItem.html":{}},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["numbers",{"_index":732,"title":{},"body":{"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["object",{"_index":1074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(state.entities).length",{"_index":527,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":494,"title":{},"body":{"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/MainAreaComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{}}}],["of(createconsentfail",{"_index":451,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["of(loadconsentsfail",{"_index":427,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["of(undefined",{"_index":496,"title":{},"body":{"guards/ConsentsResolverService.html":{}}}],["oftype",{"_index":430,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/UiEffects.html":{}}}],["oftype(createconsent.type",{"_index":447,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["oftype(loadconsents.type",{"_index":420,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["oftype(showsuccessmessage.type",{"_index":861,"title":{},"body":{"injectables/UiEffects.html":{}}}],["on(createconsentfail",{"_index":482,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"miscellaneous/variables.html":{}}}],["on(loadconsentssuccess",{"_index":529,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["on(nextpage",{"_index":531,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["on(previouspage",{"_index":534,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["on(setloading",{"_index":889,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["on(setpage",{"_index":536,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["onchanges",{"_index":714,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["one",{"_index":64,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/GiveConsentFormComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["oninit",{"_index":297,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["online",{"_index":994,"title":{},"body":{"index.html":{}}}],["open",{"_index":1018,"title":{},"body":{"index.html":{}}}],["optional",{"_index":308,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":573,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["outputs",{"_index":559,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["overview",{"_index":1047,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":939,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["padding",{"_index":681,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["page",{"_index":18,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/LoaderComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["page_size",{"_index":520,"title":{},"body":{"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagechanged",{"_index":700,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["pageitem",{"_index":40,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"miscellaneous/typealiases.html":{}}}],["pageitems",{"_index":764,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["pagenumber",{"_index":38,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"injectables/TableHandlerService.html":{}}}],["pages",{"_index":10,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["pagespanelgeneratorservice",{"_index":47,"title":{"injectables/PagesPanelGeneratorService.html":{}},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{}}}],["pagination",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["pagination'},{'name",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["pagination.component.html",{"_index":693,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.component.scss",{"_index":692,"title":{},"body":{"components/PaginationComponent.html":{}}}],["paginationcomponent",{"_index":130,"title":{"components/PaginationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["paginationcontrollercomponent",{"_index":132,"title":{"components/PaginationControllerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["paginationpagespanelcomponent",{"_index":32,"title":{"components/PaginationPagesPanelComponent.html":{}},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"overview.html":{}}}],["paginator",{"_index":691,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{}}}],["palm_tree",{"_index":987,"title":{},"body":{"index.html":{}}}],["panel",{"_index":12,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["panel.component",{"_index":364,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["panel.component.html",{"_index":763,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["panel.component.scss",{"_index":762,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["panel.component.ts",{"_index":758,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{},"coverage.html":{}}}],["panel.component.ts:23",{"_index":769,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["panel.component.ts:24",{"_index":768,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["panel.component.ts:26",{"_index":770,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["panel.component.ts:28",{"_index":767,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["panel.component.ts:33",{"_index":775,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["panel.component.ts:36",{"_index":773,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["panel.component.ts:40",{"_index":771,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["panel/pages",{"_index":11,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["panel/pagination",{"_index":363,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{}}}],["panel_length",{"_index":42,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["panellength",{"_index":67,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["param",{"_index":57,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"injectables/UiService.html":{}}}],["parameters",{"_index":307,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":761,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["path",{"_index":176,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":290,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentRoutingModule.html":{}}}],["payload",{"_index":425,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"interfaces/ConsentsState.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":657,"title":{"pipes/StringifyConsentPipe.html":{}},"body":{"components/MainAreaComponent.html":{},"pipes/StringifyConsentPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":822,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["pipes/stringify",{"_index":354,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["pipetransform",{"_index":831,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["placeholder",{"_index":35,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["placeholderpageitem",{"_index":34,"title":{"interfaces/PlaceholderPageItem.html":{}},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["position",{"_index":643,"title":{},"body":{"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{}}}],["post",{"_index":178,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/variables.html":{}}}],["preferably",{"_index":54,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["prevclicked",{"_index":701,"title":{},"body":{"components/PaginationComponent.html":{}}}],["previous",{"_index":721,"title":{},"body":{"components/PaginationComponent.html":{},"miscellaneous/variables.html":{}}}],["previouspage",{"_index":517,"title":{},"body":{"interfaces/ConsentsState.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prevpage",{"_index":695,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"injectables/TableHandlerService.html":{}}}],["primary",{"_index":20,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["private",{"_index":65,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"interceptors/ShowLoaderInterceptor.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{}}}],["process",{"_index":392,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"miscellaneous/variables.html":{}}}],["prod",{"_index":1036,"title":{},"body":{"index.html":{}}}],["production",{"_index":1038,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":642,"title":{},"body":{"components/LoaderComponent.html":{}}}],["project",{"_index":1001,"title":{},"body":{"index.html":{}}}],["promise",{"_index":268,"title":{},"body":{"classes/AppPage.html":{},"guards/ConsentsResolverService.html":{}}}],["properties",{"_index":23,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"interfaces/ConsentsManagementState.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentFormComponent.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"interfaces/SharedState.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{}}}],["props",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["protractor",{"_index":270,"title":{},"body":{"classes/AppPage.html":{}}}],["provide",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["providedin",{"_index":44,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{}}}],["providers",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["proxy",{"_index":381,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{}}}],["push",{"_index":998,"title":{},"body":{"index.html":{}}}],["put",{"_index":63,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["range",{"_index":52,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["reactiveformsmodule",{"_index":613,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["readonly",{"_index":386,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsService.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{}}}],["receive",{"_index":587,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["receivenewsletter",{"_index":164,"title":{},"body":{"modules/AppMockModule.html":{},"interfaces/Consent.html":{},"components/GiveConsentFormComponent.html":{},"miscellaneous/variables.html":{}}}],["redirectto",{"_index":289,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reducers",{"_index":408,"title":{},"body":{"interfaces/CollectedConsentsState.html":{},"interfaces/GiveConsentState.html":{},"interfaces/SharedState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["related",{"_index":444,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["reload",{"_index":1027,"title":{},"body":{"index.html":{}}}],["rely",{"_index":1002,"title":{},"body":{"index.html":{}}}],["replacement",{"_index":726,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["represent",{"_index":16,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["representation",{"_index":689,"title":{},"body":{"injectables/PagesPanelGeneratorService.html":{},"pipes/StringifyConsentPipe.html":{}}}],["represents",{"_index":888,"title":{},"body":{"interfaces/UiState.html":{}}}],["req",{"_index":964,"title":{},"body":{"miscellaneous/functions.html":{}}}],["req.body",{"_index":172,"title":{},"body":{"modules/AppMockModule.html":{}}}],["request",{"_index":815,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{},"index.html":{}}}],["require",{"_index":937,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["requires",{"_index":1012,"title":{},"body":{"index.html":{}}}],["reset",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"overview.html":{}}}],["resolve",{"_index":376,"title":{},"body":{"modules/CollectedConsentsRoutingModule.html":{},"guards/ConsentsResolverService.html":{}}}],["resolve(route",{"_index":489,"title":{},"body":{"guards/ConsentsResolverService.html":{}}}],["resolver.service",{"_index":375,"title":{},"body":{"modules/CollectedConsentsRoutingModule.html":{}}}],["resolver.service.ts",{"_index":487,"title":{},"body":{"guards/ConsentsResolverService.html":{},"coverage.html":{}}}],["resolver.service.ts:10",{"_index":488,"title":{},"body":{"guards/ConsentsResolverService.html":{}}}],["resolver.service.ts:16",{"_index":492,"title":{},"body":{"guards/ConsentsResolverService.html":{}}}],["resolver/consents",{"_index":374,"title":{},"body":{"modules/CollectedConsentsRoutingModule.html":{},"guards/ConsentsResolverService.html":{},"coverage.html":{}}}],["resolvers/consents",{"_index":373,"title":{},"body":{"modules/CollectedConsentsRoutingModule.html":{}}}],["result",{"_index":78,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.matches",{"_index":659,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["results",{"_index":80,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":62,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"modules/AppMockModule.html":{},"classes/AppPage.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentFormComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":267,"title":{},"body":{"classes/AppPage.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{}}}],["rgba(0,0,0,.08",{"_index":680,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["right",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":45,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{},"index.html":{}}}],["root'},{'name",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["route",{"_index":493,"title":{},"body":{"guards/ConsentsResolverService.html":{}}}],["routedeclaration",{"_index":151,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/variables.html":{}}}],["routermodule",{"_index":277,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":377,"title":{},"body":{"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":292,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":491,"title":{},"body":{"guards/ConsentsResolverService.html":{}}}],["routes",{"_index":186,"title":{"routes.html":{}},"body":{"modules/AppMockModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":625,"title":{},"body":{"modules/GiveConsentRoutingModule.html":{}}}],["routing.module",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{}}}],["routing.module.ts",{"_index":276,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing/app",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["routing/collected",{"_index":347,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["routing/give",{"_index":604,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["row",{"_index":331,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["run",{"_index":1016,"title":{},"body":{"index.html":{}}}],["running",{"_index":996,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":437,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/MainAreaComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":436,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"components/MainAreaComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"injectables/UiEffects.html":{}}}],["selectall(consentsstate).slice(currentindex",{"_index":1079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["selectcollectedconsents",{"_index":918,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectconsents",{"_index":396,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectconsentsstore",{"_index":916,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcurrentpage",{"_index":853,"title":{},"body":{"injectables/TableHandlerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":17,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/GiveConsentFormComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"pipes/StringifyConsentPipe.html":{}}}],["selectid",{"_index":522,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["selectloading",{"_index":871,"title":{},"body":{"injectables/UiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["selectshared",{"_index":929,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selecttotalpages",{"_index":852,"title":{},"body":{"injectables/TableHandlerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectuistate",{"_index":932,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serve",{"_index":1023,"title":{},"body":{"index.html":{}}}],["server",{"_index":153,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["service",{"_index":382,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{}}}],["services/collected",{"_index":316,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"guards/ConsentsResolverService.html":{}}}],["services/consents",{"_index":549,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["services/show",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["services/table",{"_index":752,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["set",{"_index":1084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setloading",{"_index":872,"title":{},"body":{"injectables/UiService.html":{},"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setloading(value",{"_index":874,"title":{},"body":{"injectables/UiService.html":{}}}],["setpage",{"_index":518,"title":{},"body":{"interfaces/ConsentsState.html":{},"components/PaginationControllerComponent.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setpage(pagenumber",{"_index":743,"title":{},"body":{"components/PaginationControllerComponent.html":{},"injectables/TableHandlerService.html":{}}}],["setup",{"_index":1004,"title":{},"body":{"index.html":{}}}],["shared",{"_index":804,"title":{},"body":{"interfaces/SharedState.html":{},"miscellaneous/variables.html":{}}}],["shared/models/consent",{"_index":470,"title":{},"body":{"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"pipes/StringifyConsentPipe.html":{}}}],["shared/services/consents/consents.service",{"_index":431,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{}}}],["shared/shared.module",{"_index":352,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{}}}],["shared/store/ui/ui.actions",{"_index":460,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["sharedfeaturekey",{"_index":803,"title":{},"body":{"interfaces/SharedState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sharedmodule",{"_index":198,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["sharedstate",{"_index":797,"title":{"interfaces/SharedState.html":{}},"body":{"interfaces/SharedState.html":{},"coverage.html":{}}}],["sharereplay",{"_index":660,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["sharing",{"_index":781,"title":{},"body":{"modules/SharedModule.html":{}}}],["show",{"_index":731,"title":{},"body":{"components/PaginationControllerComponent.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["showing",{"_index":294,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/LoaderComponent.html":{}}}],["showloaderinterceptor",{"_index":199,"title":{"interceptors/ShowLoaderInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ShowLoaderInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["shown",{"_index":589,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/UiService.html":{}}}],["showsuccessmessage",{"_index":459,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["showsuccessmessage(message",{"_index":878,"title":{},"body":{"injectables/UiService.html":{}}}],["sidenav",{"_index":670,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["simplechanges",{"_index":715,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["slice(startindex",{"_index":72,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["snack",{"_index":868,"title":{},"body":{"injectables/UiEffects.html":{},"injectables/UiService.html":{}}}],["snackbar",{"_index":858,"title":{},"body":{"injectables/UiEffects.html":{}}}],["solution",{"_index":968,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"index.html":{}}}],["span')).gettext",{"_index":274,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app",{"_index":963,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../consents",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../consents.actions.ts",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../consents.reducer.ts",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../consents.selectors.ts",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pages",{"_index":1052,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../reducers.ts",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../selector.ts",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ui.actions.ts",{"_index":1065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ui.reducer.ts",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ui.selectors.ts",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/loader/loader.component.ts",{"_index":630,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["src/app/components/loader/loader.component.ts:13",{"_index":636,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:18",{"_index":638,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/main",{"_index":647,"title":{},"body":{"components/MainAreaComponent.html":{},"coverage.html":{}}}],["src/app/mock/app",{"_index":140,"title":{},"body":{"modules/AppMockModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/collected",{"_index":6,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"injectables/ConsentsEffects.html":{},"guards/ConsentsResolverService.html":{},"interfaces/ConsentsState.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/give",{"_index":439,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/shared/models/consent.ts",{"_index":409,"title":{},"body":{"interfaces/Consent.html":{},"coverage.html":{}}}],["src/app/modules/shared/services/consents/consents.service.ts",{"_index":497,"title":{},"body":{"injectables/ConsentsService.html":{},"coverage.html":{}}}],["src/app/modules/shared/services/consents/consents.service.ts:13",{"_index":503,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["src/app/modules/shared/services/consents/consents.service.ts:18",{"_index":505,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["src/app/modules/shared/services/consents/consents.service.ts:22",{"_index":506,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["src/app/modules/shared/services/ui/ui.service.ts",{"_index":870,"title":{},"body":{"injectables/UiService.html":{},"coverage.html":{}}}],["src/app/modules/shared/services/ui/ui.service.ts:13",{"_index":873,"title":{},"body":{"injectables/UiService.html":{}}}],["src/app/modules/shared/services/ui/ui.service.ts:24",{"_index":875,"title":{},"body":{"injectables/UiService.html":{}}}],["src/app/modules/shared/services/ui/ui.service.ts:32",{"_index":879,"title":{},"body":{"injectables/UiService.html":{}}}],["src/app/modules/shared/shared.module.ts",{"_index":780,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/modules/shared/store/reducers.ts",{"_index":798,"title":{},"body":{"interfaces/SharedState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/shared/store/selector.ts",{"_index":928,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/shared/store/ui/ui.actions.ts",{"_index":930,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/shared/store/ui/ui.effects.ts",{"_index":857,"title":{},"body":{"injectables/UiEffects.html":{},"coverage.html":{}}}],["src/app/modules/shared/store/ui/ui.effects.ts:10",{"_index":860,"title":{},"body":{"injectables/UiEffects.html":{}}}],["src/app/modules/shared/store/ui/ui.effects.ts:19",{"_index":866,"title":{},"body":{"injectables/UiEffects.html":{}}}],["src/app/modules/shared/store/ui/ui.reducer.ts",{"_index":886,"title":{},"body":{"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/shared/store/ui/ui.selectors.ts",{"_index":931,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/routing/app",{"_index":275,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/show",{"_index":807,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{},"coverage.html":{}}}],["src/environments/environment",{"_index":403,"title":{},"body":{"interfaces/CollectedConsentsState.html":{},"interfaces/GiveConsentState.html":{},"interfaces/SharedState.html":{}}}],["src/environments/environment.prod.ts",{"_index":933,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":934,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":935,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standard",{"_index":727,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["start",{"_index":50,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"index.html":{}}}],["started",{"_index":967,"title":{"index.html":{}},"body":{}}],["startindex",{"_index":73,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["state",{"_index":483,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"interfaces/ConsentsState.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["state.currentpage",{"_index":535,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["state.loading",{"_index":1087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.ui",{"_index":1089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":893,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":499,"title":{},"body":{"injectables/ConsentsService.html":{},"index.html":{}}}],["statistic",{"_index":595,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"pipes/StringifyConsentPipe.html":{}}}],["sticky",{"_index":677,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["store",{"_index":385,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{},"miscellaneous/variables.html":{}}}],["store.consents",{"_index":1080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store/consents",{"_index":471,"title":{},"body":{"injectables/ConsentsManagementService.html":{},"modules/GiveConsentModule.html":{}}}],["store/consents/consents.actions",{"_index":395,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/TableHandlerService.html":{}}}],["store/consents/consents.effects",{"_index":351,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["store/consents/consents.selectors",{"_index":397,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/TableHandlerService.html":{}}}],["store/reducers",{"_index":349,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"modules/SharedModule.html":{}}}],["store/ui/ui.actions",{"_index":883,"title":{},"body":{"injectables/UiService.html":{}}}],["store/ui/ui.effects",{"_index":786,"title":{},"body":{"modules/SharedModule.html":{}}}],["store/ui/ui.selectors",{"_index":882,"title":{},"body":{"injectables/UiService.html":{}}}],["stored",{"_index":1032,"title":{},"body":{"index.html":{}}}],["storedevtoolsmodule",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"modules/SharedModule.html":{}}}],["storemodule.forfeature",{"_index":365,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["storemodule.forfeature(fromgiveconsent.giveconsentfeaturekey",{"_index":620,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["storemodule.forfeature(fromshared.sharedfeaturekey",{"_index":790,"title":{},"body":{"modules/SharedModule.html":{}}}],["storemodule.forroot",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":411,"title":{},"body":{"interfaces/Consent.html":{},"interfaces/ConsentsManagementState.html":{},"injectables/ConsentsService.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/UiService.html":{},"miscellaneous/variables.html":{}}}],["stringifyconsent",{"_index":323,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"pipes/StringifyConsentPipe.html":{}}}],["stringifyconsentpipe",{"_index":340,"title":{"pipes/StringifyConsentPipe.html":{}},"body":{"modules/CollectedConsentsModule.html":{},"pipes/StringifyConsentPipe.html":{},"coverage.html":{},"overview.html":{}}}],["styles",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["styleurls",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["submit",{"_index":543,"title":{},"body":{"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{}}}],["submit(consent",{"_index":547,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["submitted",{"_index":560,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["subrange",{"_index":51,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["success",{"_index":1083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["suitable",{"_index":728,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["support",{"_index":1045,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1046,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":421,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{}}}],["table",{"_index":295,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{}}}],["tablehandlerservice",{"_index":738,"title":{"injectables/TableHandlerService.html":{}},"body":{"components/PaginationControllerComponent.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":938,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":862,"title":{},"body":{"injectables/UiEffects.html":{}}}],["targeted",{"_index":590,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"pipes/StringifyConsentPipe.html":{}}}],["targetedads",{"_index":167,"title":{},"body":{"modules/AppMockModule.html":{},"interfaces/Consent.html":{},"components/GiveConsentFormComponent.html":{},"miscellaneous/variables.html":{}}}],["template",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["templateurl",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["test",{"_index":669,"title":{},"body":{"components/MainAreaComponent.html":{},"index.html":{}}}],["tested",{"_index":975,"title":{},"body":{"index.html":{}}}],["tests",{"_index":977,"title":{},"body":{"index.html":{}}}],["text",{"_index":825,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["think",{"_index":1005,"title":{},"body":{"index.html":{}}}],["this.actions$.pipe",{"_index":419,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/UiEffects.html":{}}}],["this.atleastonepermissionrequiredvalidator",{"_index":579,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["this.breakpointobserver.observe(breakpoints.handset",{"_index":656,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["this.collectedconsentsservice.consents",{"_index":313,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["this.collectedconsentsservice.loadconsents",{"_index":495,"title":{},"body":{"guards/ConsentsResolverService.html":{}}}],["this.consentsservice.createconsent(payload).pipe",{"_index":448,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["this.consentsservice.getconsents().pipe",{"_index":422,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["this.currentpage",{"_index":778,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["this.form",{"_index":576,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["this.form.valid",{"_index":581,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["this.giveconsentservice.giveconsent(consent",{"_index":551,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["this.httpclient.get(consentsservice.consents_url",{"_index":509,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["this.httpclient.post(consentsservice.consents_url",{"_index":508,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["this.loadingservice.selectloading",{"_index":639,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.nextclicked.emit",{"_index":718,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.pagechanged.emit(pagenumber",{"_index":717,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["this.pageitems",{"_index":776,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["this.pagespanelgeneratorservice.generate(this.totalpages",{"_index":777,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["this.prevclicked.emit",{"_index":719,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.snackbar.open(payload",{"_index":863,"title":{},"body":{"injectables/UiEffects.html":{}}}],["this.store.dispatch(createconsent",{"_index":472,"title":{},"body":{"injectables/ConsentsManagementService.html":{}}}],["this.store.dispatch(loadconsents",{"_index":398,"title":{},"body":{"injectables/CollectedConsentsService.html":{}}}],["this.store.dispatch(nextpage",{"_index":854,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["this.store.dispatch(previouspage",{"_index":855,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["this.store.dispatch(setloading",{"_index":884,"title":{},"body":{"injectables/UiService.html":{}}}],["this.store.dispatch(setpage",{"_index":856,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["this.store.dispatch(showsuccessmessage",{"_index":885,"title":{},"body":{"injectables/UiService.html":{}}}],["this.store.select(hasnextpage",{"_index":847,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["this.store.select(hasprevpage",{"_index":849,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["this.store.select(selectconsents",{"_index":394,"title":{},"body":{"injectables/CollectedConsentsService.html":{}}}],["this.store.select(selectcurrentpage",{"_index":845,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["this.store.select(selectloading",{"_index":881,"title":{},"body":{"injectables/UiService.html":{}}}],["this.store.select(selecttotalpages",{"_index":850,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["this.submitted.emit(this.form.value",{"_index":582,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["this.tablehandlerservice.currentpage",{"_index":745,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["this.tablehandlerservice.hasnextpage",{"_index":747,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["this.tablehandlerservice.hasprevpage",{"_index":749,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["this.tablehandlerservice.nextpage",{"_index":755,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["this.tablehandlerservice.prevpage",{"_index":756,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["this.tablehandlerservice.setpage(pagenumber",{"_index":757,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["this.tablehandlerservice.totalpages",{"_index":750,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["this.uiservice.setloading(false",{"_index":821,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["this.uiservice.setloading(true",{"_index":819,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["thoroughly",{"_index":974,"title":{},"body":{"index.html":{}}}],["three",{"_index":29,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["title",{"_index":662,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["toolbar",{"_index":673,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["toolbar.mat",{"_index":676,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["top",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{}}}],["total",{"_index":59,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["totalpages",{"_index":58,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"injectables/TableHandlerService.html":{}}}],["totalpagescount",{"_index":532,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["trackvisits",{"_index":166,"title":{},"body":{"modules/AppMockModule.html":{},"interfaces/Consent.html":{},"components/GiveConsentFormComponent.html":{},"miscellaneous/variables.html":{}}}],["transform",{"_index":826,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["transform(value",{"_index":827,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["tree",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["true",{"_index":185,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"components/GiveConsentFormComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":957,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":24,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1050,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["ui",{"_index":799,"title":{},"body":{"interfaces/SharedState.html":{},"injectables/UiService.html":{},"miscellaneous/variables.html":{}}}],["ui.actions",{"_index":869,"title":{},"body":{"injectables/UiEffects.html":{},"interfaces/UiState.html":{}}}],["ui/ui.reducer",{"_index":802,"title":{},"body":{"interfaces/SharedState.html":{}}}],["uieffects",{"_index":785,"title":{"injectables/UiEffects.html":{}},"body":{"modules/SharedModule.html":{},"injectables/UiEffects.html":{},"coverage.html":{}}}],["uireducer",{"_index":801,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uiservice",{"_index":635,"title":{"injectables/UiService.html":{}},"body":{"components/LoaderComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"injectables/UiService.html":{},"coverage.html":{}}}],["uistate",{"_index":800,"title":{"interfaces/UiState.html":{}},"body":{"interfaces/SharedState.html":{},"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":1039,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":829,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["use",{"_index":1035,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["usevalue",{"_index":794,"title":{},"body":{"modules/SharedModule.html":{}}}],["using",{"_index":983,"title":{},"body":{"index.html":{}}}],["validators",{"_index":574,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["validators.email",{"_index":578,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["value",{"_index":312,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsService.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"miscellaneous/variables.html":{}}}],["value.receivenewsletter",{"_index":832,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["value.targetedads",{"_index":834,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["value.trackvisits",{"_index":836,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["var",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["variable",{"_index":898,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1053,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":992,"title":{},"body":{"index.html":{}}}],["via",{"_index":999,"title":{},"body":{"index.html":{}}}],["visibility",{"_index":877,"title":{},"body":{"injectables/UiService.html":{}}}],["visit",{"_index":594,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"pipes/StringifyConsentPipe.html":{}}}],["void",{"_index":310,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{}}}],["want",{"_index":990,"title":{},"body":{"index.html":{}}}],["website",{"_index":986,"title":{},"body":{"index.html":{}}}],["which'll",{"_index":880,"title":{},"body":{"injectables/UiService.html":{}}}],["width",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/MainAreaComponent.html":{}}}],["working",{"_index":383,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"injectables/TableHandlerService.html":{}}}],["wrapper",{"_index":333,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/LoaderComponent.html":{}}}],["yes",{"_index":965,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["you'll",{"_index":1006,"title":{},"body":{"index.html":{}}}],["z",{"_index":645,"title":{},"body":{"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{}}}],["zone.js",{"_index":959,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"overview.html":{}}}],["zzz",{"_index":1009,"title":{},"body":{"index.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActivePageNumberItem.html":{"url":"interfaces/ActivePageNumberItem.html","title":"interface - ActivePageNumberItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActivePageNumberItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n        \n\n            \n                Description\n            \n            \n                Represent a selected page number (primary button with number)\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        number\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        number\n                                    \n                                \n                                \n                                    \n                                        number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Represent three dots (...) in {@link PaginationPagesPanelComponent}\n */\nexport interface PlaceholderPageItem {\n  type: 'placeholder';\n}\n\n/**\n * Represent a non-selected page number (button with {@link number})\n */\nexport interface NumberPageItem {\n  type: 'pageNumber';\n  number: number;\n}\n\n/**\n * Represent a selected page number (primary button with {@link number})\n */\nexport interface ActivePageNumberItem {\n  type: 'activePageNumber';\n  number: number;\n}\n\nexport type PageItem = PlaceholderPageItem | NumberPageItem | ActivePageNumberItem;\n\nconst PANEL_LENGTH = 5;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PagesPanelGeneratorService {\n  constructor() {\n  }\n\n  /**\n   * Calculate the start page number of subrange of the pages range so\n   * currentPage will be preferably at the center of this subrange or at least inside of the subrange\n   * @param totalPages - total count of pages\n   * @param currentPage - current page\n   * @return start index (start page) of subrange\n   */\n  // put currentPage in the center of the panel or at least inside of one\n  private calculateStartIndex(totalPages: number, currentPage: number): number {\n    const panelLength = PANEL_LENGTH;\n    const half = Math.floor(panelLength / 2);\n    if (currentPage + half  {\n        const pageNumber = index + 1;\n        if (pageNumber === currentPage + 1) {\n          return { type: 'activePageNumber', number: pageNumber } as ActivePageNumberItem;\n        } else {\n          return { type: 'pageNumber', number: pageNumber } as NumberPageItem;\n        }\n      })\n      .slice(startIndex, startIndex + PANEL_LENGTH)\n    ;\n\n    // If there are pages before startIndex we add ... before \"the body\"\n    if (startIndex !== 0) {\n      result = [{ type: 'placeholder' }, ...result];\n    }\n\n    // If there are pages after startIndex we add ... after \"the body\"\n    if ((startIndex + PANEL_LENGTH + 1) \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .main-area {\n  margin-top: 25px;\n}\n\nmat-nav-list {\n  margin-right: 25px;\n  margin-left: 25px;\n  margin-bottom: 25px;\n  width: 240px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectedConsentsComponent', 'selector': 'app-collected-consents'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'GiveConsentFormComponent', 'selector': 'app-give-consent-form'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainAreaComponent', 'selector': 'app-main-area'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'PaginationControllerComponent', 'selector': 'app-pagination-controller'},{'name': 'PaginationPagesPanelComponent', 'selector': 'app-pagination-pages-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppMockModule.html":{"url":"modules/AppMockModule.html","title":"module - AppMockModule","body":"\n                   \n\n\n\n\n    Modules\n    AppMockModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/mock/app-mock.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Module for angular-level http mock\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { json, NgxMockServerModule, RouteDeclaration } from 'ngx-mock-server';\nimport { Consent } from '../modules/shared/models/consent';\nimport { HttpRequest } from '@angular/common/http';\nimport * as faker from 'faker';\n\nlet consents: Consent[] = [...Array(4)].map((_, index) => ({\n  id: index,\n  name: faker.name.findName(),\n  email: faker.internet.email(),\n  receiveNewsletter: faker.random.boolean(),\n  trackVisits: faker.random.boolean(),\n  targetedAds: faker.random.boolean()\n}));\n\nlet id = consents.length;\n\nexport function createConsent(req?: HttpRequest) {\n  const data = { ...req.body, id: id++ };\n  consents = [...consents, data];\n  return json(200, data);\n}\n\nexport function getConsents() {\n  return json(200, consents);\n}\n\nconst appMockRoutes: RouteDeclaration[] = [\n  {\n    path: '/consents',\n    method: 'POST',\n    callback: createConsent\n  },\n  {\n    path: '/consents',\n    method: 'GET',\n    callback: getConsents\n  }\n];\n\n/**\n * Module for angular-level http mock\n */\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    NgxMockServerModule.forRoot({ enabled: true, routes: appMockRoutes })\n  ]\n})\nexport class AppMockModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nAppModule -->\n\nLoaderComponent->AppModule\n\n\n\n\n\nMainAreaComponent\n\nMainAreaComponent\n\nAppModule -->\n\nMainAreaComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppMockModule\n\nAppMockModule\n\nAppModule -->\n\nAppMockModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nShowLoaderInterceptor\n\nShowLoaderInterceptor\n\nAppModule -->\n\nShowLoaderInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            LoaderComponent\n                        \n                        \n                            MainAreaComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ShowLoaderInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppMockModule\n                        \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { EffectsModule } from '@ngrx/effects';\nimport { MatListModule } from '@angular/material/list';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MainAreaComponent } from './components/main-area/main-area.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { SharedModule } from './modules/shared/shared.module';\nimport { LoaderComponent } from './components/loader/loader.component';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { AppRoutingModule } from './routing/app-routing.module';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ShowLoaderInterceptor } from './services/show-loader/show-loader.interceptor';\nimport { NgxMockServerModule } from 'ngx-mock-server';\nimport { AppMockModule } from './mock/app-mock.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainAreaComponent,\n    LoaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    StoreModule.forRoot({}, {}),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\n    EffectsModule.forRoot([]),\n    MatListModule,\n    FlexLayoutModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatProgressBarModule,\n    SharedModule,\n    AppMockModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ShowLoaderInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/routing/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst defaultRoute = '/give-consent';\n\nconst routes: Routes = [\n  {\n    path: 'give-consent',\n    loadChildren: () => \"import('../modules/give-consent/give-consent.module').then(m => m.GiveConsentModule)\"\n  },\n  {\n    path: 'consents',\n    loadChildren: () => \"import('../modules/collected-consents/collected-consents.module').then(m => m.CollectedConsentsModule)\"\n  },\n  { path: '', redirectTo: defaultRoute, pathMatch: 'full' },\n  { path: '**', redirectTo: defaultRoute, pathMatch: 'full' }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes),\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CollectedConsentsComponent.html":{"url":"components/CollectedConsentsComponent.html","title":"component - CollectedConsentsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CollectedConsentsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/collected-consents/components/collected-consents/collected-consents.component.ts\n\n\n    \n        Description\n    \n    \n        Root component for showing of consents table\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-collected-consents\n            \n\n            \n                styleUrls\n                ./collected-consents.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./collected-consents.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                consents$\n                            \n                            \n                                displayedColumns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(collectedConsentsService: CollectedConsentsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/collected-consents/components/collected-consents/collected-consents.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        collectedConsentsService\n                                                  \n                                                        \n                                                                        CollectedConsentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/collected-consents.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            consents$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.collectedConsentsService.consents$\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/collected-consents.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['name', 'email', 'consents']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/collected-consents.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { CollectedConsentsService } from '../../services/collected-consents/collected-consents.service';\nimport { MatTableDataSource } from '@angular/material/table';\n\n/**\n * Root component for showing of consents table\n */\n@Component({\n  selector: 'app-collected-consents',\n  templateUrl: './collected-consents.component.html',\n  styleUrls: ['./collected-consents.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CollectedConsentsComponent implements OnInit {\n  consents$ = this.collectedConsentsService.consents$;\n  displayedColumns = ['name', 'email', 'consents'];\n  constructor(\n    private collectedConsentsService: CollectedConsentsService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n       Name \n       {{element.name}} \n    \n\n    \n       Email \n       {{element.email}} \n    \n\n    \n       Consent given for \n       {{element | stringifyConsent}} \n    \n\n    \n    \n  \n  \n\n\n\n    \n\n    \n                \n                    ./collected-consents.component.scss\n                \n                table {\n  width: 100%;\n  margin-bottom: 16px;\n}\n\n:host {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n}\n\n.consents-table-wrapper {\n  min-width: 1000px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Name        {{element.name}}                Email        {{element.email}}                Consent given for        {{element | stringifyConsent}}                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectedConsentsComponent', 'selector': 'app-collected-consents'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'GiveConsentFormComponent', 'selector': 'app-give-consent-form'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainAreaComponent', 'selector': 'app-main-area'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'PaginationControllerComponent', 'selector': 'app-pagination-controller'},{'name': 'PaginationPagesPanelComponent', 'selector': 'app-pagination-pages-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CollectedConsentsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CollectedConsentsModule.html":{"url":"modules/CollectedConsentsModule.html","title":"module - CollectedConsentsModule","body":"\n                   \n\n\n\n\n    Modules\n    CollectedConsentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CollectedConsentsModule\n\n\n\ncluster_CollectedConsentsModule_declarations\n\n\n\ncluster_CollectedConsentsModule_imports\n\n\n\n\nCollectedConsentsComponent\n\nCollectedConsentsComponent\n\n\n\nCollectedConsentsModule\n\nCollectedConsentsModule\n\nCollectedConsentsModule -->\n\nCollectedConsentsComponent->CollectedConsentsModule\n\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\nCollectedConsentsModule -->\n\nPaginationComponent->CollectedConsentsModule\n\n\n\n\n\nPaginationControllerComponent\n\nPaginationControllerComponent\n\nCollectedConsentsModule -->\n\nPaginationControllerComponent->CollectedConsentsModule\n\n\n\n\n\nPaginationPagesPanelComponent\n\nPaginationPagesPanelComponent\n\nCollectedConsentsModule -->\n\nPaginationPagesPanelComponent->CollectedConsentsModule\n\n\n\n\n\nStringifyConsentPipe\n\nStringifyConsentPipe\n\nCollectedConsentsModule -->\n\nStringifyConsentPipe->CollectedConsentsModule\n\n\n\n\n\nCollectedConsentsRoutingModule\n\nCollectedConsentsRoutingModule\n\nCollectedConsentsModule -->\n\nCollectedConsentsRoutingModule->CollectedConsentsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nCollectedConsentsModule -->\n\nSharedModule->CollectedConsentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/collected-consents/collected-consents.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Module for displaying list of created consents\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CollectedConsentsComponent\n                        \n                        \n                            PaginationComponent\n                        \n                        \n                            PaginationControllerComponent\n                        \n                        \n                            PaginationPagesPanelComponent\n                        \n                        \n                            StringifyConsentPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CollectedConsentsRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CollectedConsentsComponent } from './components/collected-consents/collected-consents.component';\nimport { CollectedConsentsRoutingModule } from './routing/collected-consents-routing.module';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromCollectedConsents from './store/reducers';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ConsentsEffects } from './store/consents/consents.effects';\nimport { SharedModule } from '../shared/shared.module';\nimport { MatTableModule } from '@angular/material/table';\nimport { StringifyConsentPipe } from './pipes/stringify-consent/stringify-consent.pipe';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { PaginationControllerComponent } from './components/collected-consents/pagination-controller/pagination-controller.component';\nimport { PaginationComponent } from './components/collected-consents/pagination-controller/pagination/pagination.component';\nimport { FlexModule } from '@angular/flex-layout';\nimport { PaginationPagesPanelComponent } from './components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\n\n/**\n * Module for displaying list of created consents\n */\n@NgModule({\n  declarations: [\n    CollectedConsentsComponent,\n    StringifyConsentPipe,\n    PaginationControllerComponent,\n    PaginationComponent,\n    PaginationPagesPanelComponent\n  ],\n  imports: [\n    CommonModule,\n    CollectedConsentsRoutingModule,\n    StoreModule.forFeature(\n      fromCollectedConsents.collectedConsentsFeatureKey,\n      fromCollectedConsents.reducers,\n      { metaReducers: fromCollectedConsents.metaReducers }\n    ),\n    EffectsModule.forFeature([ConsentsEffects]),\n    SharedModule,\n    MatTableModule,\n    MatPaginatorModule,\n    FlexModule,\n    MatIconModule,\n    MatButtonModule\n  ]\n})\nexport class CollectedConsentsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CollectedConsentsRoutingModule.html":{"url":"modules/CollectedConsentsRoutingModule.html","title":"module - CollectedConsentsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    CollectedConsentsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/collected-consents/routing/collected-consents-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CollectedConsentsComponent } from '../components/collected-consents/collected-consents.component';\nimport { ConsentsResolverService } from './resolvers/consents-resolver/consents-resolver.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: CollectedConsentsComponent,\n    resolve: {\n      consents: ConsentsResolverService\n    }\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class CollectedConsentsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CollectedConsentsService.html":{"url":"injectables/CollectedConsentsService.html","title":"injectable - CollectedConsentsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CollectedConsentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/collected-consents/services/collected-consents/collected-consents.service.ts\n        \n\n            \n                Description\n            \n            \n                Proxy service for working with ConsentsState store\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                consents$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadConsents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/collected-consents/services/collected-consents/collected-consents.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadConsents\n                        \n                        \n                    \n                \n            \n            \n                \nloadConsents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/services/collected-consents/collected-consents.service.ts:22\n                \n            \n\n\n            \n                \n                    Initiate process of loading of consents\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            consents$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.store.select(selectConsents)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/services/collected-consents/collected-consents.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { loadConsents} from '../../store/consents/consents.actions';\nimport { selectConsents} from '../../store/consents/consents.selectors';\n\n/**\n * Proxy service for working with {@link ConsentsState} store\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CollectedConsentsService {\n  readonly consents$ = this.store.select(selectConsents);\n\n  constructor(\n    private store: Store\n  ) { }\n\n  /**\n   * Initiate process of loading of consents\n   */\n  loadConsents() {\n    this.store.dispatch(loadConsents());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CollectedConsentsState.html":{"url":"interfaces/CollectedConsentsState.html","title":"interface - CollectedConsentsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CollectedConsentsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/collected-consents/store/reducers.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        consents\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        consents\n                                    \n                                \n                                \n                                    \n                                        consents:         ConsentsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConsentsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ActionReducerMap,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from 'src/environments/environment';\nimport { consentsReducer, ConsentsState } from './consents/consents.reducer';\n\nexport const collectedConsentsFeatureKey = 'collectedConsents';\n\nexport interface CollectedConsentsState {\n  consents: ConsentsState;\n}\n\nexport const reducers: ActionReducerMap = {\n  consents: consentsReducer\n};\n\n\nexport const metaReducers: MetaReducer[] = !environment.production ? [] : [];\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Consent.html":{"url":"interfaces/Consent.html","title":"interface - Consent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Consent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/shared/models/consent.ts\n        \n\n            \n                Description\n            \n            \n                Consent model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        email\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        receiveNewsletter\n                                \n                                \n                                            Optional\n                                        targetedAds\n                                \n                                \n                                            Optional\n                                        trackVisits\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        receiveNewsletter\n                                    \n                                \n                                \n                                    \n                                        receiveNewsletter:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetedAds\n                                    \n                                \n                                \n                                    \n                                        targetedAds:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trackVisits\n                                    \n                                \n                                \n                                    \n                                        trackVisits:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Consent {\n  id?: number;\n  name?: string;\n  email?: string;\n  receiveNewsletter?: boolean;\n  targetedAds?: boolean;\n  trackVisits?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsentsEffects.html":{"url":"injectables/ConsentsEffects.html","title":"injectable - ConsentsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsentsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/collected-consents/store/consents/consents.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadConsents$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, consentsService: ConsentsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/collected-consents/store/consents/consents.effects.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        consentsService\n                                                  \n                                                        \n                                                                        ConsentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadConsents$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEffect(() => {\n    return this.actions$.pipe(\n      ofType(loadConsents.type),\n      switchMap(() => {\n        return this.consentsService.getConsents().pipe(\n          map(consents => loadConsentsSuccess({ payload: consents })),\n          catchError(error => of(loadConsentsFail({ payload: error.message })))\n        );\n      })\n    );\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/store/consents/consents.effects.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { ConsentsService } from '../../../shared/services/consents/consents.service';\nimport { loadConsents, loadConsentsFail, loadConsentsSuccess } from './consents.actions';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n\n@Injectable()\nexport class ConsentsEffects {\n  constructor(\n    private actions$: Actions,\n    private consentsService: ConsentsService\n  ) {\n  }\n\n  loadConsents$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(loadConsents.type),\n      switchMap(() => {\n        return this.consentsService.getConsents().pipe(\n          map(consents => loadConsentsSuccess({ payload: consents })),\n          catchError(error => of(loadConsentsFail({ payload: error.message })))\n        );\n      })\n    );\n  });\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsentsManagementEffects.html":{"url":"injectables/ConsentsManagementEffects.html","title":"injectable - ConsentsManagementEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsentsManagementEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/give-consent/store/consents-management/consents-management.effects.ts\n        \n\n            \n                Description\n            \n            \n                Effects related to management of consents\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createConsent$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, consentsService: ConsentsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/give-consent/store/consents-management/consents-management.effects.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        consentsService\n                                                  \n                                                        \n                                                                        ConsentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createConsent$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEffect(() => {\n    return this.actions$.pipe(\n      ofType(createConsent.type),\n      switchMap(({ payload }) => {\n        return this.consentsService.createConsent(payload).pipe(\n          mapTo(showSuccessMessage({ payload: 'Consent is created!' })),\n          catchError((e) => of(createConsentFail({ payload: e.message })))\n        );\n      })\n    );\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/give-consent/store/consents-management/consents-management.effects.ts:23\n                            \n                        \n\n                \n                    \n                        Handling of creating consent process\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { createConsent, createConsentFail } from './consents-management.actions';\nimport { catchError, map, mapTo, switchMap } from 'rxjs/operators';\nimport { ConsentsService } from '../../../shared/services/consents/consents.service';\nimport { showSuccessMessage } from '../../../shared/store/ui/ui.actions';\nimport { of } from 'rxjs';\n\n/**\n * Effects related to management of consents\n */\n@Injectable()\nexport class ConsentsManagementEffects {\n  constructor(\n    private actions$: Actions,\n    private consentsService: ConsentsService\n  ) {\n  }\n\n  /**\n   * Handling of creating consent process\n   */\n  createConsent$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(createConsent.type),\n      switchMap(({ payload }) => {\n        return this.consentsService.createConsent(payload).pipe(\n          mapTo(showSuccessMessage({ payload: 'Consent is created!' })),\n          catchError((e) => of(createConsentFail({ payload: e.message })))\n        );\n      })\n    );\n  });\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsentsManagementService.html":{"url":"injectables/ConsentsManagementService.html","title":"injectable - ConsentsManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsentsManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/give-consent/services/consents-management.service.ts\n        \n\n            \n                Description\n            \n            \n                Proxy service for working with ConsentsManagementState store\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                giveConsent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/give-consent/services/consents-management.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            giveConsent\n                        \n                        \n                    \n                \n            \n            \n                \ngiveConsent(consent: Consent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/give-consent/services/consents-management.service.ts:23\n                \n            \n\n\n            \n                \n                    Initiate process of creating a new consent\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    consent\n                                    \n                                                Consent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nNew consent\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Consent } from '../../shared/models/consent';\nimport { Store } from '@ngrx/store';\nimport { createConsent } from '../store/consents-management/consents-management.actions';\n\n/**\n * Proxy service for working with {@link ConsentsManagementState} store\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsentsManagementService {\n\n  constructor(\n    private store: Store\n  ) {\n  }\n\n  /**\n   * Initiate process of creating a new consent\n   * @param consent - New consent\n   */\n  giveConsent(consent: Consent) {\n    this.store.dispatch(createConsent({ payload: consent }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConsentsManagementState.html":{"url":"interfaces/ConsentsManagementState.html","title":"interface - ConsentsManagementState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConsentsManagementState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/give-consent/store/consents-management/consents-management.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Action, createReducer, on } from '@ngrx/store';\nimport { createConsentFail } from './consents-management.actions';\n\n\nexport const createConsentFeatureKey = 'consentsManagement';\n\nexport interface ConsentsManagementState {\n  error: string;\n}\n\nexport const initialState: ConsentsManagementState = {\n  error: null\n};\n\n\nexport const consentsManagementReducer = createReducer(\n  initialState,\n  on(createConsentFail, (state, { payload }) => ({ ...state, error: payload }))\n);\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ConsentsResolverService.html":{"url":"guards/ConsentsResolverService.html","title":"guard - ConsentsResolverService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    ConsentsResolverService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/collected-consents/routing/resolvers/consents-resolver/consents-resolver.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(collectedConsentsService: CollectedConsentsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/collected-consents/routing/resolvers/consents-resolver/consents-resolver.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        collectedConsentsService\n                                                  \n                                                        \n                                                                        CollectedConsentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/routing/resolvers/consents-resolver/consents-resolver.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable | Promise | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Consent } from '../../../../shared/models/consent';\nimport { Observable, of } from 'rxjs';\nimport { CollectedConsentsService } from '../../../services/collected-consents/collected-consents.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsentsResolverService implements Resolve{\n\n  constructor(\n    private collectedConsentsService: CollectedConsentsService\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable | Promise | void {\n    this.collectedConsentsService.loadConsents();\n    return of(undefined);\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsentsService.html":{"url":"injectables/ConsentsService.html","title":"injectable - ConsentsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/shared/services/consents/consents.service.ts\n        \n\n            \n                Description\n            \n            \n                Consents gateway\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                CONSENTS_URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createConsent\n                            \n                            \n                                getConsents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/shared/services/consents/consents.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createConsent\n                        \n                        \n                    \n                \n            \n            \n                \ncreateConsent(consent: Consent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/services/consents/consents.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consent\n                                    \n                                                Consent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConsents\n                        \n                        \n                    \n                \n            \n            \n                \ngetConsents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/services/consents/consents.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            CONSENTS_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/consents'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/shared/services/consents/consents.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Consent } from '../../models/consent';\nimport { Observable } from 'rxjs';\n\n/**\n * Consents gateway\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsentsService {\n  static readonly CONSENTS_URL = '/consents';\n  constructor(\n    private httpClient: HttpClient\n  ) { }\n\n  createConsent(consent: Consent): Observable {\n    return this.httpClient.post(ConsentsService.CONSENTS_URL, consent);\n  }\n\n  getConsents(): Observable {\n    return this.httpClient.get(ConsentsService.CONSENTS_URL);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConsentsState.html":{"url":"interfaces/ConsentsState.html","title":"interface - ConsentsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConsentsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/collected-consents/store/consents/consents.reducer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currentPage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentPage\n                                    \n                                \n                                \n                                    \n                                        currentPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { Consent } from '../../../shared/models/consent';\nimport { loadConsentsSuccess, nextPage, previousPage, setPage } from './consents.actions';\n\n\nexport const consentsFeatureKey = 'consents';\nexport const PAGE_SIZE = 2;\n\nexport interface ConsentsState extends EntityState {\n  currentPage: number;\n}\n\nexport const consentsAdapter = createEntityAdapter({\n  selectId: consent => consent.id\n});\n\nexport const initialState: ConsentsState = consentsAdapter.getInitialState({\n  currentPage: 0\n});\n\nexport const calculateTotalPagesCount = (state: ConsentsState): number => {\n  const numberOfEntities = Object.values(state.entities).length;\n  return Math.floor(numberOfEntities / PAGE_SIZE) + (numberOfEntities % PAGE_SIZE === 0 ? 0 : 1);\n};\n\nexport const consentsReducer = createReducer(\n  initialState,\n  on(loadConsentsSuccess, (state, { payload }) => {\n    return { ...consentsAdapter.setAll(payload, state), currentPage: 0 };\n  }),\n  on(nextPage, state => {\n    const totalPagesCount = calculateTotalPagesCount(state);\n    const { currentPage } = state;\n    return (currentPage + 1) >= totalPagesCount ? state : { ...state, currentPage: currentPage + 1 };\n  }),\n  on(previousPage, state => {\n    return state.currentPage === 0 ? state : { ...state, currentPage: state.currentPage - 1 };\n  }),\n  on(setPage, (state, { payload }) => {\n    const totalPagesCount = calculateTotalPagesCount(state);\n    return (payload >= 0 && payload \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GiveConsentComponent.html":{"url":"components/GiveConsentComponent.html","title":"component - GiveConsentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GiveConsentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/give-consent/components/give-consent/give-consent.component.ts\n\n\n    \n        Description\n    \n    \n        Main form for creating of consent entity\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-give-consent\n            \n\n            \n                styleUrls\n                ./give-consent.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./give-consent.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(giveConsentService: ConsentsManagementService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/give-consent/components/give-consent/give-consent.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        giveConsentService\n                                                  \n                                                        \n                                                                        ConsentsManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit(consent: Consent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/give-consent/components/give-consent/give-consent.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consent\n                                    \n                                                Consent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ConsentsManagementService } from '../../services/consents-management.service';\nimport { Consent } from '../../../shared/models/consent';\n\n/**\n * Main form for creating of consent entity\n */\n@Component({\n  selector: 'app-give-consent',\n  templateUrl: './give-consent.component.html',\n  styleUrls: ['./give-consent.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GiveConsentComponent {\n  constructor(\n    private giveConsentService: ConsentsManagementService\n  ) {\n  }\n\n  submit(consent: Consent) {\n    this.giveConsentService.giveConsent(consent);\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./give-consent.component.scss\n                \n                .form-wrapper {\n  width: 500px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectedConsentsComponent', 'selector': 'app-collected-consents'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'GiveConsentFormComponent', 'selector': 'app-give-consent-form'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainAreaComponent', 'selector': 'app-main-area'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'PaginationControllerComponent', 'selector': 'app-pagination-controller'},{'name': 'PaginationPagesPanelComponent', 'selector': 'app-pagination-pages-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GiveConsentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GiveConsentFormComponent.html":{"url":"components/GiveConsentFormComponent.html","title":"component - GiveConsentFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GiveConsentFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/give-consent/components/give-consent/give-consent-form/give-consent-form.component.ts\n\n\n    \n        Description\n    \n    \n        Dumb component the form of creating of consent entity\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-give-consent-form\n            \n\n            \n                styleUrls\n                ./give-consent-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./give-consent-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                atLeastOnePermissionRequiredValidator\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/give-consent/components/give-consent/give-consent-form/give-consent-form.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        submitted\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/give-consent/components/give-consent/give-consent-form/give-consent-form.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            atLeastOnePermissionRequiredValidator\n                        \n                        \n                    \n                \n            \n            \n                \natLeastOnePermissionRequiredValidator()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/give-consent/components/give-consent/give-consent-form/give-consent-form.component.ts:35\n                \n            \n\n\n            \n                \n                    Check if at least one consent is selected\n\n\n                    \n                        Returns :     (formGroup: any) => { atLeastOnPermissionRequired: boolean; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/give-consent/components/give-consent/give-consent-form/give-consent-form.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/give-consent/components/give-consent/give-consent-form/give-consent-form.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/give-consent/components/give-consent/give-consent-form/give-consent-form.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Consent } from '../../../../shared/models/consent';\n\n/**\n * Dumb component the form of creating of consent entity\n */\n@Component({\n  selector: 'app-give-consent-form',\n  templateUrl: './give-consent-form.component.html',\n  styleUrls: ['./give-consent-form.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GiveConsentFormComponent implements OnInit {\n  @Output() submitted = new EventEmitter();\n\n  form: FormGroup;\n  constructor(\n    private fb: FormBuilder\n  ) {\n    this.form = fb.group({\n      name: null,\n      email: [null, [Validators.email]],\n      receiveNewsletter: null,\n      targetedAds: null,\n      trackVisits: null\n    }, {\n      validators: this.atLeastOnePermissionRequiredValidator()\n    });\n  }\n\n  /**\n   * Check if at least one consent is selected\n   */\n  atLeastOnePermissionRequiredValidator() {\n    return (formGroup: FormGroup) => {\n      const { receiveNewsletter, targetedAds, trackVisits } = formGroup.value;\n      return (receiveNewsletter || targetedAds || trackVisits) ? null : {\n        atLeastOnPermissionRequired: true\n      };\n    };\n  }\n\n  ngOnInit() {\n  }\n\n  submit() {\n    if (!this.form.valid) {\n      return;\n    }\n\n    this.submitted.emit(this.form.value);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        Name\n        \n      \n      \n        Email address\n        \n        Email has incorrect format\n      \n    \n    I agree:\n    \n      Receive newsletter\n      Be shown targeted ads\n      Contribute to anonymous visit statistic\n    \n    \n      Give consent\n    \n  \n\n\n    \n\n    \n                \n                    ./give-consent-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Name                            Email address                Email has incorrect format              I agree:          Receive newsletter      Be shown targeted ads      Contribute to anonymous visit statistic              Give consent      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectedConsentsComponent', 'selector': 'app-collected-consents'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'GiveConsentFormComponent', 'selector': 'app-give-consent-form'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainAreaComponent', 'selector': 'app-main-area'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'PaginationControllerComponent', 'selector': 'app-pagination-controller'},{'name': 'PaginationPagesPanelComponent', 'selector': 'app-pagination-pages-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GiveConsentFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GiveConsentModule.html":{"url":"modules/GiveConsentModule.html","title":"module - GiveConsentModule","body":"\n                   \n\n\n\n\n    Modules\n    GiveConsentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GiveConsentModule\n\n\n\ncluster_GiveConsentModule_declarations\n\n\n\ncluster_GiveConsentModule_imports\n\n\n\n\nGiveConsentComponent\n\nGiveConsentComponent\n\n\n\nGiveConsentModule\n\nGiveConsentModule\n\nGiveConsentModule -->\n\nGiveConsentComponent->GiveConsentModule\n\n\n\n\n\nGiveConsentFormComponent\n\nGiveConsentFormComponent\n\nGiveConsentModule -->\n\nGiveConsentFormComponent->GiveConsentModule\n\n\n\n\n\nGiveConsentRoutingModule\n\nGiveConsentRoutingModule\n\nGiveConsentModule -->\n\nGiveConsentRoutingModule->GiveConsentModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nGiveConsentModule -->\n\nSharedModule->GiveConsentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/give-consent/give-consent.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Module for displaying list of created consents\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GiveConsentComponent\n                        \n                        \n                            GiveConsentFormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GiveConsentRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GiveConsentComponent } from './components/give-consent/give-consent.component';\nimport { GiveConsentRoutingModule } from './routing/give-consent-routing.module';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatCardModule } from '@angular/material/card';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexModule } from '@angular/flex-layout';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { HttpClientModule } from '@angular/common/http';\nimport { GiveConsentFormComponent } from './components/give-consent/give-consent-form/give-consent-form.component';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromGiveConsent from './store/reducers';\nimport { EffectsModule } from '@ngrx/effects';\nimport { SharedModule } from '../shared/shared.module';\nimport { ConsentsManagementEffects } from './store/consents-management/consents-management.effects';\n\n\n/**\n * Module for displaying list of created consents\n */\n@NgModule({\n  declarations: [GiveConsentComponent, GiveConsentFormComponent],\n  imports: [\n    CommonModule,\n    GiveConsentRoutingModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatCardModule,\n    ReactiveFormsModule,\n    FlexModule,\n    MatCheckboxModule,\n    HttpClientModule,\n    StoreModule.forFeature(fromGiveConsent.giveConsentFeatureKey, fromGiveConsent.reducers, { metaReducers: fromGiveConsent.metaReducers }),\n    EffectsModule.forFeature([ConsentsManagementEffects]),\n    SharedModule\n  ]\n})\nexport class GiveConsentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GiveConsentRoutingModule.html":{"url":"modules/GiveConsentRoutingModule.html","title":"module - GiveConsentRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    GiveConsentRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/give-consent/routing/give-consent-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GiveConsentComponent } from '../components/give-consent/give-consent.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: GiveConsentComponent\n  }\n];\n\n/**\n * Routing module for {@link GiveConsentModule}\n */\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class GiveConsentRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GiveConsentState.html":{"url":"interfaces/GiveConsentState.html","title":"interface - GiveConsentState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GiveConsentState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/give-consent/store/reducers.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        consentsManagement\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        consentsManagement\n                                    \n                                \n                                \n                                    \n                                        consentsManagement:         ConsentsManagementState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConsentsManagementState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ActionReducerMap,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from 'src/environments/environment';\nimport { consentsManagementReducer, ConsentsManagementState } from './consents-management/consents-management.reducer';\n\nexport const giveConsentFeatureKey = 'giveConsent';\n\nexport interface GiveConsentState {\n  consentsManagement: ConsentsManagementState;\n}\n\nexport const reducers: ActionReducerMap = {\n  consentsManagement: consentsManagementReducer\n};\n\nexport const metaReducers: MetaReducer[] = !environment.production ? [] : [];\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/loader/loader.component.ts\n\n\n    \n        Description\n    \n    \n        Wrapper for mat-loading-bar for showing at the top of the page\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loader\n            \n\n            \n                styleUrls\n                ./loader.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingService: UiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/loader/loader.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        UiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/loader/loader.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.loadingService.selectLoading$\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { UiService } from '../../modules/shared/services/ui/ui.service';\n\n/**\n * Wrapper for mat-loading-bar for showing at the top of the page\n */\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n  loading$ = this.loadingService.selectLoading$;\n  constructor(\n    private loadingService: UiService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./loader.component.scss\n                \n                mat-progress-bar {\n  position: absolute;\n  z-index: 1000;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectedConsentsComponent', 'selector': 'app-collected-consents'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'GiveConsentFormComponent', 'selector': 'app-give-consent-form'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainAreaComponent', 'selector': 'app-main-area'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'PaginationControllerComponent', 'selector': 'app-pagination-controller'},{'name': 'PaginationPagesPanelComponent', 'selector': 'app-pagination-pages-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainAreaComponent.html":{"url":"components/MainAreaComponent.html","title":"component - MainAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/main-area/main-area.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-area\n            \n\n            \n                styleUrls\n                ./main-area.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-area.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isHandset$\n                            \n                            \n                                links\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/main-area/main-area.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isHandset$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/main-area/main-area.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            links\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { title: 'Give consent', link: '/give-consent' },\n    { title: 'Collected consents', link: '/consents' },\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/main-area/main-area.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-main-area',\n  templateUrl: './main-area.component.html',\n  styleUrls: ['./main-area.component.scss']\n})\nexport class MainAreaComponent {\n  links = [\n    { title: 'Give consent', link: '/give-consent' },\n    { title: 'Collected consents', link: '/consents' },\n  ];\n  isHandset$: Observable = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      {{ item.title }}\n    \n  \n  \n    \n      \n        menu\n      \n      Didomi test app\n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./main-area.component.scss\n                \n                .sidenav-container {\n  height: 100%;\n}\n\n.sidenav {\n  width: 200px;\n}\n\n.sidenav .mat-toolbar {\n  background: inherit;\n}\n\n.mat-toolbar.mat-primary {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\na.active {\n  background-color: rgba(0,0,0,.08);\n}\n\n.content {\n  padding-top: 16px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ item.title }}                          menu            Didomi test app                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectedConsentsComponent', 'selector': 'app-collected-consents'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'GiveConsentFormComponent', 'selector': 'app-give-consent-form'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainAreaComponent', 'selector': 'app-main-area'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'PaginationControllerComponent', 'selector': 'app-pagination-controller'},{'name': 'PaginationPagesPanelComponent', 'selector': 'app-pagination-pages-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NumberPageItem.html":{"url":"interfaces/NumberPageItem.html","title":"interface - NumberPageItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NumberPageItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n        \n\n            \n                Description\n            \n            \n                Represent a non-selected page number (button with number)\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        number\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        number\n                                    \n                                \n                                \n                                    \n                                        number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Represent three dots (...) in {@link PaginationPagesPanelComponent}\n */\nexport interface PlaceholderPageItem {\n  type: 'placeholder';\n}\n\n/**\n * Represent a non-selected page number (button with {@link number})\n */\nexport interface NumberPageItem {\n  type: 'pageNumber';\n  number: number;\n}\n\n/**\n * Represent a selected page number (primary button with {@link number})\n */\nexport interface ActivePageNumberItem {\n  type: 'activePageNumber';\n  number: number;\n}\n\nexport type PageItem = PlaceholderPageItem | NumberPageItem | ActivePageNumberItem;\n\nconst PANEL_LENGTH = 5;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PagesPanelGeneratorService {\n  constructor() {\n  }\n\n  /**\n   * Calculate the start page number of subrange of the pages range so\n   * currentPage will be preferably at the center of this subrange or at least inside of the subrange\n   * @param totalPages - total count of pages\n   * @param currentPage - current page\n   * @return start index (start page) of subrange\n   */\n  // put currentPage in the center of the panel or at least inside of one\n  private calculateStartIndex(totalPages: number, currentPage: number): number {\n    const panelLength = PANEL_LENGTH;\n    const half = Math.floor(panelLength / 2);\n    if (currentPage + half  {\n        const pageNumber = index + 1;\n        if (pageNumber === currentPage + 1) {\n          return { type: 'activePageNumber', number: pageNumber } as ActivePageNumberItem;\n        } else {\n          return { type: 'pageNumber', number: pageNumber } as NumberPageItem;\n        }\n      })\n      .slice(startIndex, startIndex + PANEL_LENGTH)\n    ;\n\n    // If there are pages before startIndex we add ... before \"the body\"\n    if (startIndex !== 0) {\n      result = [{ type: 'placeholder' }, ...result];\n    }\n\n    // If there are pages after startIndex we add ... after \"the body\"\n    if ((startIndex + PANEL_LENGTH + 1) \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesPanelGeneratorService.html":{"url":"injectables/PagesPanelGeneratorService.html","title":"injectable - PagesPanelGeneratorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesPanelGeneratorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateStartIndex\n                            \n                            \n                                generate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts:33\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            calculateStartIndex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateStartIndex(totalPages: number, currentPage: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts:45\n                \n            \n\n\n            \n                \n                    Calculate the start page number of subrange of the pages range so\ncurrentPage will be preferably at the center of this subrange or at least inside of the subrange\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    totalPages\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntotal count of pages\n\n\n                                    \n                                \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ncurrent page\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        start index (start page) of subrange\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generate\n                        \n                        \n                    \n                \n            \n            \n                \ngenerate(totalPages: number, currentPage: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts:60\n                \n            \n\n\n            \n                \n                    Generate intermediate representation for PaginationPagesPanelComponent\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    totalPages\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntotal count of pages\n\n\n                                    \n                                \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ncurrent page\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PageItem[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Represent three dots (...) in {@link PaginationPagesPanelComponent}\n */\nexport interface PlaceholderPageItem {\n  type: 'placeholder';\n}\n\n/**\n * Represent a non-selected page number (button with {@link number})\n */\nexport interface NumberPageItem {\n  type: 'pageNumber';\n  number: number;\n}\n\n/**\n * Represent a selected page number (primary button with {@link number})\n */\nexport interface ActivePageNumberItem {\n  type: 'activePageNumber';\n  number: number;\n}\n\nexport type PageItem = PlaceholderPageItem | NumberPageItem | ActivePageNumberItem;\n\nconst PANEL_LENGTH = 5;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PagesPanelGeneratorService {\n  constructor() {\n  }\n\n  /**\n   * Calculate the start page number of subrange of the pages range so\n   * currentPage will be preferably at the center of this subrange or at least inside of the subrange\n   * @param totalPages - total count of pages\n   * @param currentPage - current page\n   * @return start index (start page) of subrange\n   */\n  // put currentPage in the center of the panel or at least inside of one\n  private calculateStartIndex(totalPages: number, currentPage: number): number {\n    const panelLength = PANEL_LENGTH;\n    const half = Math.floor(panelLength / 2);\n    if (currentPage + half  {\n        const pageNumber = index + 1;\n        if (pageNumber === currentPage + 1) {\n          return { type: 'activePageNumber', number: pageNumber } as ActivePageNumberItem;\n        } else {\n          return { type: 'pageNumber', number: pageNumber } as NumberPageItem;\n        }\n      })\n      .slice(startIndex, startIndex + PANEL_LENGTH)\n    ;\n\n    // If there are pages before startIndex we add ... before \"the body\"\n    if (startIndex !== 0) {\n      result = [{ type: 'placeholder' }, ...result];\n    }\n\n    // If there are pages after startIndex we add ... after \"the body\"\n    if ((startIndex + PANEL_LENGTH + 1) \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaginationComponent.html":{"url":"components/PaginationComponent.html","title":"component - PaginationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PaginationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts\n\n\n    \n        Description\n    \n    \n        Dumb component for displaying of paginator\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pagination\n            \n\n            \n                styleUrls\n                ./pagination.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pagination.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePageNumber\n                            \n                            \n                                nextPage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                prevPage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canNext\n                            \n                            \n                                canPrev\n                            \n                            \n                                currentPage\n                            \n                            \n                                totalPages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                nextClicked\n                            \n                            \n                                pageChanged\n                            \n                            \n                                prevClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:30\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canNext\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        canPrev\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        currentPage\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        totalPages\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        nextClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pageChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        prevClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:29\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changePageNumber\n                        \n                        \n                    \n                \n            \n            \n                \nchangePageNumber(pageNumber: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            nextPage\n                        \n                        \n                    \n                \n            \n            \n                \nnextPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            prevPage\n                        \n                        \n                    \n                \n            \n            \n                \nprevPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { PageItem, PagesPanelGeneratorService } from './pagination-pages-panel/pages-panel-generator/pages-panel-generator.service';\n\n/**\n * Dumb component for displaying of paginator\n */\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PaginationComponent implements OnInit {\n  @Input() currentPage: number;\n  @Input() totalPages: number;\n  @Input() canNext: boolean;\n  @Input() canPrev: boolean;\n\n  @Output() nextClicked = new EventEmitter();\n  @Output() prevClicked = new EventEmitter();\n  @Output() pageChanged = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  changePageNumber(pageNumber: number) {\n    this.pageChanged.emit(pageNumber);\n  }\n\n  nextPage() {\n    this.nextClicked.emit();\n  }\n\n  prevPage() {\n    this.prevClicked.emit();\n  }\n\n}\n\n    \n\n    \n        \n  \n    chevron_left Previous page\n  \n  \n  \n    Next page chevron_right\n  \n\n\n    \n\n    \n                \n                    ./pagination.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      chevron_left Previous page          Next page chevron_right  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectedConsentsComponent', 'selector': 'app-collected-consents'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'GiveConsentFormComponent', 'selector': 'app-give-consent-form'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainAreaComponent', 'selector': 'app-main-area'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'PaginationControllerComponent', 'selector': 'app-pagination-controller'},{'name': 'PaginationPagesPanelComponent', 'selector': 'app-pagination-pages-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaginationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaginationControllerComponent.html":{"url":"components/PaginationControllerComponent.html","title":"component - PaginationControllerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PaginationControllerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts\n\n\n    \n        Description\n    \n    \n        Pagination controller as a replacement of standard mat-paginator.\nStandard mat-paginator is not suitable here, because it doesn't show pages numbers\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pagination-controller\n            \n\n            \n                styleUrls\n                ./pagination-controller.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pagination-controller.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage$\n                            \n                            \n                                hasNextPage$\n                            \n                            \n                                hasPrevPage$\n                            \n                            \n                                totalPages$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                nextPage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                prevPage\n                            \n                            \n                                setPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tableHandlerService: TableHandlerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tableHandlerService\n                                                  \n                                                        \n                                                                        TableHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            nextPage\n                        \n                        \n                    \n                \n            \n            \n                \nnextPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            prevPage\n                        \n                        \n                    \n                \n            \n            \n                \nprevPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPage\n                        \n                        \n                    \n                \n            \n            \n                \nsetPage(pageNumber: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPage$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.tableHandlerService.currentPage$\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasNextPage$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.tableHandlerService.hasNextPage$\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasPrevPage$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.tableHandlerService.hasPrevPage\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalPages$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.tableHandlerService.totalPages$\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { TableHandlerService } from '../../../services/table-handler/table-handler.service';\n\n/**\n * Pagination controller as a replacement of standard mat-paginator.\n * Standard mat-paginator is not suitable here, because it doesn't show pages numbers\n */\n@Component({\n  selector: 'app-pagination-controller',\n  templateUrl: './pagination-controller.component.html',\n  styleUrls: ['./pagination-controller.component.scss']\n})\nexport class PaginationControllerComponent implements OnInit {\n  totalPages$ = this.tableHandlerService.totalPages$;\n  currentPage$ = this.tableHandlerService.currentPage$;\n  hasNextPage$ = this.tableHandlerService.hasNextPage$;\n  hasPrevPage$ = this.tableHandlerService.hasPrevPage;\n\n  constructor(\n    private tableHandlerService: TableHandlerService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  nextPage() {\n    this.tableHandlerService.nextPage();\n  }\n\n  prevPage() {\n    this.tableHandlerService.prevPage();\n  }\n\n  setPage(pageNumber: number) {\n    this.tableHandlerService.setPage(pageNumber);\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./pagination-controller.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectedConsentsComponent', 'selector': 'app-collected-consents'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'GiveConsentFormComponent', 'selector': 'app-give-consent-form'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainAreaComponent', 'selector': 'app-main-area'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'PaginationControllerComponent', 'selector': 'app-pagination-controller'},{'name': 'PaginationPagesPanelComponent', 'selector': 'app-pagination-pages-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaginationControllerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaginationPagesPanelComponent.html":{"url":"components/PaginationPagesPanelComponent.html","title":"component - PaginationPagesPanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PaginationPagesPanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts\n\n\n    \n        Description\n    \n    \n        Component of pages numbers. It's the central part of PaginationComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pagination-pages-panel\n            \n\n            \n                styleUrls\n                ./pagination-pages-panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pagination-pages-panel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePageNumber\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                totalPages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pagesPanelGeneratorService: PagesPanelGeneratorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pagesPanelGeneratorService\n                                                  \n                                                        \n                                                                        PagesPanelGeneratorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentPage\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        totalPages\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        pageChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changePageNumber\n                        \n                        \n                    \n                \n            \n            \n                \nchangePageNumber(pageNumber: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PageItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { PageItem, PagesPanelGeneratorService } from './pages-panel-generator/pages-panel-generator.service';\n\n/**\n * Component of pages numbers. It's the central part of {@link PaginationComponent}\n */\n@Component({\n  selector: 'app-pagination-pages-panel',\n  templateUrl: './pagination-pages-panel.component.html',\n  styleUrls: ['./pagination-pages-panel.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PaginationPagesPanelComponent implements OnInit, OnChanges {\n  @Input() totalPages: number;\n  @Input() currentPage: number;\n\n  @Output() pageChanged = new EventEmitter();\n\n  pageItems: PageItem[] = [];\n  constructor(\n    private pagesPanelGeneratorService: PagesPanelGeneratorService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.pageItems = this.pagesPanelGeneratorService.generate(this.totalPages, this.currentPage);\n  }\n\n  changePageNumber(pageNumber: number) {\n    return this.pageChanged.emit(pageNumber - 1);\n  }\n\n\n\n}\n\n    \n\n    \n        \n  \n    \n      ...\n      {{item.number}}\n      {{item.number}}\n    \n  \n\n\n    \n\n    \n                \n                    ./pagination-pages-panel.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            ...      {{item.number}}      {{item.number}}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectedConsentsComponent', 'selector': 'app-collected-consents'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'GiveConsentFormComponent', 'selector': 'app-give-consent-form'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainAreaComponent', 'selector': 'app-main-area'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'PaginationControllerComponent', 'selector': 'app-pagination-controller'},{'name': 'PaginationPagesPanelComponent', 'selector': 'app-pagination-pages-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaginationPagesPanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlaceholderPageItem.html":{"url":"interfaces/PlaceholderPageItem.html","title":"interface - PlaceholderPageItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlaceholderPageItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n        \n\n            \n                Description\n            \n            \n                Represent three dots (...) in PaginationPagesPanelComponent\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Represent three dots (...) in {@link PaginationPagesPanelComponent}\n */\nexport interface PlaceholderPageItem {\n  type: 'placeholder';\n}\n\n/**\n * Represent a non-selected page number (button with {@link number})\n */\nexport interface NumberPageItem {\n  type: 'pageNumber';\n  number: number;\n}\n\n/**\n * Represent a selected page number (primary button with {@link number})\n */\nexport interface ActivePageNumberItem {\n  type: 'activePageNumber';\n  number: number;\n}\n\nexport type PageItem = PlaceholderPageItem | NumberPageItem | ActivePageNumberItem;\n\nconst PANEL_LENGTH = 5;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PagesPanelGeneratorService {\n  constructor() {\n  }\n\n  /**\n   * Calculate the start page number of subrange of the pages range so\n   * currentPage will be preferably at the center of this subrange or at least inside of the subrange\n   * @param totalPages - total count of pages\n   * @param currentPage - current page\n   * @return start index (start page) of subrange\n   */\n  // put currentPage in the center of the panel or at least inside of one\n  private calculateStartIndex(totalPages: number, currentPage: number): number {\n    const panelLength = PANEL_LENGTH;\n    const half = Math.floor(panelLength / 2);\n    if (currentPage + half  {\n        const pageNumber = index + 1;\n        if (pageNumber === currentPage + 1) {\n          return { type: 'activePageNumber', number: pageNumber } as ActivePageNumberItem;\n        } else {\n          return { type: 'pageNumber', number: pageNumber } as NumberPageItem;\n        }\n      })\n      .slice(startIndex, startIndex + PANEL_LENGTH)\n    ;\n\n    // If there are pages before startIndex we add ... before \"the body\"\n    if (startIndex !== 0) {\n      result = [{ type: 'placeholder' }, ...result];\n    }\n\n    // If there are pages after startIndex we add ... after \"the body\"\n    if ((startIndex + PANEL_LENGTH + 1) \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/shared/shared.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Module for sharing code between modules\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromShared from './store/reducers';\nimport { EffectsModule } from '@ngrx/effects';\nimport { UiEffects } from './store/ui/ui.effects';\nimport { MAT_SNACK_BAR_DEFAULT_OPTIONS, MatSnackBarModule } from '@angular/material/snack-bar';\n\n/**\n * Module for sharing code between modules\n */\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(fromShared.sharedFeatureKey, fromShared.reducers, { metaReducers: fromShared.metaReducers }),\n    EffectsModule.forFeature([UiEffects]),\n    MatSnackBarModule\n  ],\n  providers: [\n    { provide: MAT_SNACK_BAR_DEFAULT_OPTIONS, useValue: { duration: 2500 } }\n  ]\n})\nexport class SharedModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SharedState.html":{"url":"interfaces/SharedState.html","title":"interface - SharedState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SharedState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/shared/store/reducers.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ui\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ui\n                                    \n                                \n                                \n                                    \n                                        ui:         UiState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UiState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ActionReducerMap,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from 'src/environments/environment';\nimport { uiReducer, UiState } from './ui/ui.reducer';\n\nexport const sharedFeatureKey = 'shared';\n\nexport interface SharedState {\n  ui: UiState;\n}\n\nexport const reducers: ActionReducerMap = {\n  ui: uiReducer\n};\n\n\nexport const metaReducers: MetaReducer[] = !environment.production ? [] : [];\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ShowLoaderInterceptor.html":{"url":"interceptors/ShowLoaderInterceptor.html","title":"interceptor - ShowLoaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ShowLoaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/show-loader/show-loader.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uiService: UiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/show-loader/show-loader.interceptor.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/show-loader/show-loader.interceptor.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { UiService } from '../../modules/shared/services/ui/ui.service';\nimport { finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class ShowLoaderInterceptor implements HttpInterceptor {\n\n  constructor(\n    private uiService: UiService\n  ) {}\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    this.uiService.setLoading(true);\n    return next.handle(request).pipe(finalize(() => this.uiService.setLoading(false)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/StringifyConsentPipe.html":{"url":"pipes/StringifyConsentPipe.html","title":"pipe - StringifyConsentPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  StringifyConsentPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/collected-consents/pipes/stringify-consent/stringify-consent.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Show text representation of selected consents\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        stringifyConsent\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: Consent, ...args: unknown[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/pipes/stringify-consent/stringify-consent.pipe.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Consent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            unknown[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Consent } from '../../../shared/models/consent';\n\n/**\n * Show text representation of selected consents\n */\n@Pipe({\n  name: 'stringifyConsent'\n})\nexport class StringifyConsentPipe implements PipeTransform {\n\n  transform(value: Consent, ...args: unknown[]): unknown {\n    const consents: string[] = [];\n    if (value.receiveNewsletter) {\n      consents.push('Receive newsletter');\n    }\n\n    if (value.targetedAds) {\n      consents.push('Be shown targeted ads');\n    }\n\n    if (value.trackVisits) {\n      consents.push('Contribute to anonymous visit statistic');\n    }\n\n    return consents.join(', ');\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TableHandlerService.html":{"url":"injectables/TableHandlerService.html","title":"injectable - TableHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TableHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/collected-consents/services/table-handler/table-handler.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for working with the consents table state.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentPage$\n                            \n                            \n                                    Readonly\n                                hasNextPage$\n                            \n                            \n                                    Readonly\n                                hasPrevPage\n                            \n                            \n                                    Readonly\n                                totalPages$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                nextPage\n                            \n                            \n                                prevPage\n                            \n                            \n                                setPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/collected-consents/services/table-handler/table-handler.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            nextPage\n                        \n                        \n                    \n                \n            \n            \n                \nnextPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/services/table-handler/table-handler.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            prevPage\n                        \n                        \n                    \n                \n            \n            \n                \nprevPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/services/table-handler/table-handler.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPage\n                        \n                        \n                    \n                \n            \n            \n                \nsetPage(pageNumber: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/services/table-handler/table-handler.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            currentPage$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.store.select(selectCurrentPage)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/services/table-handler/table-handler.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            hasNextPage$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.store.select(hasNextPage)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/services/table-handler/table-handler.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            hasPrevPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.store.select(hasPrevPage)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/services/table-handler/table-handler.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            totalPages$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.store.select(selectTotalPages)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/services/table-handler/table-handler.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { hasNextPage, selectTotalPages, hasPrevPage, selectCurrentPage } from '../../store/consents/consents.selectors';\nimport { Store } from '@ngrx/store';\nimport { previousPage, nextPage, setPage } from '../../store/consents/consents.actions';\n\n/**\n * Service for working with the consents table state.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TableHandlerService {\n  readonly totalPages$ = this.store.select(selectTotalPages);\n  readonly currentPage$ = this.store.select(selectCurrentPage);\n  readonly hasNextPage$ = this.store.select(hasNextPage);\n  readonly hasPrevPage = this.store.select(hasPrevPage);\n\n  constructor(\n    private store: Store\n  ) { }\n\n  nextPage() {\n    this.store.dispatch(nextPage());\n  }\n\n  prevPage() {\n    this.store.dispatch(previousPage());\n  }\n\n  setPage(pageNumber: number) {\n    this.store.dispatch(setPage({ payload: pageNumber }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UiEffects.html":{"url":"injectables/UiEffects.html","title":"injectable - UiEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UiEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/shared/store/ui/ui.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showSuccessMessage$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/shared/store/ui/ui.effects.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSuccessMessage$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEffect(() => this.actions$.pipe(\n    ofType(showSuccessMessage.type),\n    tap(({ payload }) => this.snackBar.open(payload))\n  ), { dispatch: false })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/shared/store/ui/ui.effects.ts:19\n                            \n                        \n\n                \n                    \n                        Show message in snack bar\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { showSuccessMessage } from './ui.actions';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { tap } from 'rxjs/operators';\n\n\n\n@Injectable()\nexport class UiEffects {\n  constructor(\n    private actions$: Actions,\n    private snackBar: MatSnackBar\n  ) {}\n\n  /**\n   * Show message in snack bar\n   */\n  showSuccessMessage$ = createEffect(() => this.actions$.pipe(\n    ofType(showSuccessMessage.type),\n    tap(({ payload }) => this.snackBar.open(payload))\n  ), { dispatch: false });\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UiService.html":{"url":"injectables/UiService.html","title":"injectable - UiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/shared/services/ui/ui.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for ui state management\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                selectLoading$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setLoading\n                            \n                            \n                                showSuccessMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/shared/services/ui/ui.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLoading\n                        \n                        \n                    \n                \n            \n            \n                \nsetLoading(value: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/services/ui/ui.service.ts:24\n                \n            \n\n\n            \n                \n                    Show or hide the loading bar at the top of the page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nvisibility of loading bar\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showSuccessMessage\n                        \n                        \n                    \n                \n            \n            \n                \nshowSuccessMessage(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/services/ui/ui.service.ts:32\n                \n            \n\n\n            \n                \n                    Show message in snack bar\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmessage which'll be shown in snack bar\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            selectLoading$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.store.select(selectLoading)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/shared/services/ui/ui.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { selectLoading } from '../../store/ui/ui.selectors';\nimport { setLoading, showSuccessMessage } from '../../store/ui/ui.actions';\n\n/**\n * Service for ui state management\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UiService {\n  readonly selectLoading$ = this.store.select(selectLoading);\n\n  constructor(\n    private store: Store\n  ) {\n  }\n\n  /**\n   * Show or hide the loading bar at the top of the page\n   * @param value - visibility of loading bar\n   */\n  setLoading(value: boolean) {\n    this.store.dispatch(setLoading({ payload: value }));\n  }\n\n  /**\n   * Show message in snack bar\n   * @param message - message which'll be shown in snack bar\n   */\n  showSuccessMessage(message: string) {\n    this.store.dispatch(showSuccessMessage({ payload: message }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UiState.html":{"url":"interfaces/UiState.html","title":"interface - UiState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UiState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/shared/store/ui/ui.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        loading\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field represents the state of loading bar at the top of the page (show or hide)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { setLoading } from './ui.actions';\n\nexport interface UiState {\n  /**\n   * Field represents the state of loading bar at the top of the page (show or hide)\n   */\n  loading: boolean;\n}\n\nexport const initialState: UiState = {\n  loading: false\n};\n\n\nexport const uiReducer = createReducer(\n  initialState,\n  on(setLoading, (state, { payload }) => ({...state, loading: payload}))\n);\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/components/main-area/main-area.component.ts\n            \n            component\n            MainAreaComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/mock/app-mock.module.ts\n            \n            function\n            createConsent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock/app-mock.module.ts\n            \n            function\n            getConsents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock/app-mock.module.ts\n            \n            variable\n            appMockRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock/app-mock.module.ts\n            \n            variable\n            consents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock/app-mock.module.ts\n            \n            variable\n            id\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/components/collected-consents/collected-consents.component.ts\n            \n            component\n            CollectedConsentsComponent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts\n            \n            component\n            PaginationControllerComponent\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n            \n            injectable\n            PagesPanelGeneratorService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n            \n            interface\n            ActivePageNumberItem\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n            \n            interface\n            NumberPageItem\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n            \n            interface\n            PlaceholderPageItem\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n            \n            variable\n            PANEL_LENGTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts\n            \n            component\n            PaginationPagesPanelComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts\n            \n            component\n            PaginationComponent\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/pipes/stringify-consent/stringify-consent.pipe.ts\n            \n            pipe\n            StringifyConsentPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/routing/resolvers/consents-resolver/consents-resolver.service.ts\n            \n            guard\n            ConsentsResolverService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/services/collected-consents/collected-consents.service.ts\n            \n            injectable\n            CollectedConsentsService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/services/table-handler/table-handler.service.ts\n            \n            injectable\n            TableHandlerService\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.actions.ts\n            \n            variable\n            loadConsents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.actions.ts\n            \n            variable\n            loadConsentsFail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.actions.ts\n            \n            variable\n            loadConsentsSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.actions.ts\n            \n            variable\n            nextPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.actions.ts\n            \n            variable\n            previousPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.actions.ts\n            \n            variable\n            setPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.effects.ts\n            \n            injectable\n            ConsentsEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.reducer.ts\n            \n            interface\n            ConsentsState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.reducer.ts\n            \n            variable\n            calculateTotalPagesCount\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.reducer.ts\n            \n            variable\n            consentsAdapter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.reducer.ts\n            \n            variable\n            consentsFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.reducer.ts\n            \n            variable\n            consentsReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.reducer.ts\n            \n            variable\n            PAGE_SIZE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.selectors.ts\n            \n            variable\n            hasNextPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.selectors.ts\n            \n            variable\n            hasPrevPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.selectors.ts\n            \n            variable\n            selectConsents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.selectors.ts\n            \n            variable\n            selectConsentsStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.selectors.ts\n            \n            variable\n            selectCurrentPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.selectors.ts\n            \n            variable\n            selectTotalPages\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.selectors.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/reducers.ts\n            \n            interface\n            CollectedConsentsState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/reducers.ts\n            \n            variable\n            collectedConsentsFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/reducers.ts\n            \n            variable\n            metaReducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/reducers.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/selector.ts\n            \n            variable\n            selectCollectedConsents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/components/give-consent/give-consent-form/give-consent-form.component.ts\n            \n            component\n            GiveConsentFormComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/components/give-consent/give-consent.component.ts\n            \n            component\n            GiveConsentComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/services/consents-management.service.ts\n            \n            injectable\n            ConsentsManagementService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/consents-management/consents-management.actions.ts\n            \n            variable\n            createConsent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/consents-management/consents-management.actions.ts\n            \n            variable\n            createConsentFail\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/consents-management/consents-management.effects.ts\n            \n            injectable\n            ConsentsManagementEffects\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/consents-management/consents-management.reducer.ts\n            \n            interface\n            ConsentsManagementState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/consents-management/consents-management.reducer.ts\n            \n            variable\n            consentsManagementReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/consents-management/consents-management.reducer.ts\n            \n            variable\n            createConsentFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/consents-management/consents-management.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/reducers.ts\n            \n            interface\n            GiveConsentState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/reducers.ts\n            \n            variable\n            giveConsentFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/reducers.ts\n            \n            variable\n            metaReducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/reducers.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/models/consent.ts\n            \n            interface\n            Consent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/modules/shared/services/consents/consents.service.ts\n            \n            injectable\n            ConsentsService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/modules/shared/services/ui/ui.service.ts\n            \n            injectable\n            UiService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/reducers.ts\n            \n            interface\n            SharedState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/reducers.ts\n            \n            variable\n            metaReducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/reducers.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/reducers.ts\n            \n            variable\n            sharedFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/selector.ts\n            \n            variable\n            selectShared\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/ui/ui.actions.ts\n            \n            variable\n            setLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/ui/ui.actions.ts\n            \n            variable\n            showSuccessMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/ui/ui.effects.ts\n            \n            injectable\n            UiEffects\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/ui/ui.reducer.ts\n            \n            interface\n            UiState\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/ui/ui.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/ui/ui.reducer.ts\n            \n            variable\n            uiReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/ui/ui.selectors.ts\n            \n            variable\n            selectLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/ui/ui.selectors.ts\n            \n            variable\n            selectUiState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/routing/app-routing.module.ts\n            \n            variable\n            defaultRoute\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/show-loader/show-loader.interceptor.ts\n            \n            interceptor\n            ShowLoaderInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.1.4\n        \n            @angular/cdk : ^9.2.2\n        \n            @angular/common : ~9.1.4\n        \n            @angular/compiler : ~9.1.4\n        \n            @angular/core : ~9.1.4\n        \n            @angular/flex-layout : ^9.0.0-beta.29\n        \n            @angular/forms : ~9.1.4\n        \n            @angular/material : ^9.2.2\n        \n            @angular/platform-browser : ~9.1.4\n        \n            @angular/platform-browser-dynamic : ~9.1.4\n        \n            @angular/router : ~9.1.4\n        \n            @ngrx/effects : ^9.1.0\n        \n            @ngrx/entity : ^9.1.0\n        \n            @ngrx/schematics : ^9.1.0\n        \n            @ngrx/store : ^9.1.0\n        \n            @ngrx/store-devtools : ^9.1.0\n        \n            faker : ^4.1.0\n        \n            jasmine-marbles : ^0.6.0\n        \n            ngx-mock-server : ^2.0.0\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createConsent   (src/.../app-mock.module.ts)\n                        \n                        \n                            getConsents   (src/.../app-mock.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/mock/app-mock.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createConsent\n                        \n                        \n                    \n                \n            \n            \n                \ncreateConsent(req?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConsents\n                        \n                        \n                    \n                \n            \n            \n                \ngetConsents()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDidomi Test App\n\nIt's my solution for Didomi code challenge. The app is available on Github Pages.\nKey features :key:\n\nThoroughly tested. ~80 tests, ~90% code coverage :lock:\nFront-end level mocks of http-request, using my package ngx-mock-server (yes, it can be effortlessly deployed as a static website on Github Pages :palm_tree: . And it is!)\nHandy Compodoc documentation. Do you not want to generate the latest version of the documentation manually? Check it out online! :green_book:\nRunning tests and app deployment on push via Github Actions :ant:\nProject rely on the latest version of Angular (9.1.4) and NgRx :new:\n\nSetup\nI think you'll do it with your eyes closed) :zzz: \n\nInstall Node.js (Angular requires a current, active LTS, or maintenance LTS version of Node.js)\nRun npm install in the root of the project\nRun npm start in the root of the project\nOpen http://localhost:4200 in a browser\nEnjoi! :)\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nGenerate documentation\nRun npm run compodoc to generate documentation via Compodoc. The documentation will be stored in the dist/docs directory.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppMockModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CollectedConsentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CollectedConsentsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GiveConsentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GiveConsentRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CollectedConsentsModule\n\n\n\ncluster_CollectedConsentsModule_declarations\n\n\n\ncluster_CollectedConsentsModule_imports\n\n\n\ncluster_GiveConsentModule\n\n\n\ncluster_GiveConsentModule_declarations\n\n\n\ncluster_GiveConsentModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nAppModule -->\n\nLoaderComponent->AppModule\n\n\n\n\n\nMainAreaComponent\n\nMainAreaComponent\n\nAppModule -->\n\nMainAreaComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppMockModule\n\nAppMockModule\n\nAppModule -->\n\nAppMockModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nCollectedConsentsModule\n\nCollectedConsentsModule\n\nCollectedConsentsModule -->\n\nSharedModule->CollectedConsentsModule\n\n\n\n\n\nGiveConsentModule\n\nGiveConsentModule\n\nGiveConsentModule -->\n\nSharedModule->GiveConsentModule\n\n\n\n\n\nShowLoaderInterceptor\n\nShowLoaderInterceptor\n\nAppModule -->\n\nShowLoaderInterceptor->AppModule\n\n\n\n\n\nCollectedConsentsComponent\n\nCollectedConsentsComponent\n\nCollectedConsentsModule -->\n\nCollectedConsentsComponent->CollectedConsentsModule\n\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\nCollectedConsentsModule -->\n\nPaginationComponent->CollectedConsentsModule\n\n\n\n\n\nPaginationControllerComponent\n\nPaginationControllerComponent\n\nCollectedConsentsModule -->\n\nPaginationControllerComponent->CollectedConsentsModule\n\n\n\n\n\nPaginationPagesPanelComponent\n\nPaginationPagesPanelComponent\n\nCollectedConsentsModule -->\n\nPaginationPagesPanelComponent->CollectedConsentsModule\n\n\n\n\n\nStringifyConsentPipe\n\nStringifyConsentPipe\n\nCollectedConsentsModule -->\n\nStringifyConsentPipe->CollectedConsentsModule\n\n\n\n\n\nCollectedConsentsRoutingModule\n\nCollectedConsentsRoutingModule\n\nCollectedConsentsModule -->\n\nCollectedConsentsRoutingModule->CollectedConsentsModule\n\n\n\n\n\nGiveConsentComponent\n\nGiveConsentComponent\n\nGiveConsentModule -->\n\nGiveConsentComponent->GiveConsentModule\n\n\n\n\n\nGiveConsentFormComponent\n\nGiveConsentFormComponent\n\nGiveConsentModule -->\n\nGiveConsentFormComponent->GiveConsentModule\n\n\n\n\n\nGiveConsentRoutingModule\n\nGiveConsentRoutingModule\n\nGiveConsentModule -->\n\nGiveConsentRoutingModule->GiveConsentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        8 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PageItem   (src/.../pages-panel-generator.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n    \n    \n        \n            \n                \n                    \n                    PageItem\n                \n            \n            \n                \n                            PlaceholderPageItem | NumberPageItem | ActivePageNumberItem\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appMockRoutes   (src/.../app-mock.module.ts)\n                        \n                        \n                            calculateTotalPagesCount   (src/.../consents.reducer.ts)\n                        \n                        \n                            collectedConsentsFeatureKey   (src/.../reducers.ts)\n                        \n                        \n                            consents   (src/.../app-mock.module.ts)\n                        \n                        \n                            consentsAdapter   (src/.../consents.reducer.ts)\n                        \n                        \n                            consentsFeatureKey   (src/.../consents.reducer.ts)\n                        \n                        \n                            consentsManagementReducer   (src/.../consents-management.reducer.ts)\n                        \n                        \n                            consentsReducer   (src/.../consents.reducer.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            createConsent   (src/.../consents-management.actions.ts)\n                        \n                        \n                            createConsentFail   (src/.../consents-management.actions.ts)\n                        \n                        \n                            createConsentFeatureKey   (src/.../consents-management.reducer.ts)\n                        \n                        \n                            defaultRoute   (src/.../app-routing.module.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            giveConsentFeatureKey   (src/.../reducers.ts)\n                        \n                        \n                            hasNextPage   (src/.../consents.selectors.ts)\n                        \n                        \n                            hasPrevPage   (src/.../consents.selectors.ts)\n                        \n                        \n                            id   (src/.../app-mock.module.ts)\n                        \n                        \n                            initialState   (src/.../consents.reducer.ts)\n                        \n                        \n                            initialState   (src/.../consents-management.reducer.ts)\n                        \n                        \n                            initialState   (src/.../ui.reducer.ts)\n                        \n                        \n                            loadConsents   (src/.../consents.actions.ts)\n                        \n                        \n                            loadConsentsFail   (src/.../consents.actions.ts)\n                        \n                        \n                            loadConsentsSuccess   (src/.../consents.actions.ts)\n                        \n                        \n                            metaReducers   (src/.../reducers.ts)\n                        \n                        \n                            metaReducers   (src/.../reducers.ts)\n                        \n                        \n                            metaReducers   (src/.../reducers.ts)\n                        \n                        \n                            nextPage   (src/.../consents.actions.ts)\n                        \n                        \n                            PAGE_SIZE   (src/.../consents.reducer.ts)\n                        \n                        \n                            PANEL_LENGTH   (src/.../pages-panel-generator.service.ts)\n                        \n                        \n                            previousPage   (src/.../consents.actions.ts)\n                        \n                        \n                            reducers   (src/.../reducers.ts)\n                        \n                        \n                            reducers   (src/.../reducers.ts)\n                        \n                        \n                            reducers   (src/.../reducers.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            selectCollectedConsents   (src/.../selector.ts)\n                        \n                        \n                            selectConsents   (src/.../consents.selectors.ts)\n                        \n                        \n                            selectConsentsStore   (src/.../consents.selectors.ts)\n                        \n                        \n                            selectCurrentPage   (src/.../consents.selectors.ts)\n                        \n                        \n                            selectLoading   (src/.../ui.selectors.ts)\n                        \n                        \n                            selectShared   (src/.../selector.ts)\n                        \n                        \n                            selectTotalPages   (src/.../consents.selectors.ts)\n                        \n                        \n                            selectUiState   (src/.../ui.selectors.ts)\n                        \n                        \n                            setLoading   (src/.../ui.actions.ts)\n                        \n                        \n                            setPage   (src/.../consents.actions.ts)\n                        \n                        \n                            sharedFeatureKey   (src/.../reducers.ts)\n                        \n                        \n                            showSuccessMessage   (src/.../ui.actions.ts)\n                        \n                        \n                            uiReducer   (src/.../ui.reducer.ts)\n                        \n                        \n                               (src/.../consents.selectors.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/mock/app-mock.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appMockRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RouteDeclaration[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: '/consents',\n    method: 'POST',\n    callback: createConsent\n  },\n  {\n    path: '/consents',\n    method: 'GET',\n    callback: getConsents\n  }\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            consents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Consent[]\n\n                        \n                    \n                    \n                        \n                            Default value : [...Array(4)].map((_, index) => ({\n  id: index,\n  name: faker.name.findName(),\n  email: faker.internet.email(),\n  receiveNewsletter: faker.random.boolean(),\n  trackVisits: faker.random.boolean(),\n  targetedAds: faker.random.boolean()\n}))\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : consents.length\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/collected-consents/store/consents/consents.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            calculateTotalPagesCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: ConsentsState): number => {\n  const numberOfEntities = Object.values(state.entities).length;\n  return Math.floor(numberOfEntities / PAGE_SIZE) + (numberOfEntities % PAGE_SIZE === 0 ? 0 : 1);\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            consentsAdapter\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEntityAdapter({\n  selectId: consent => consent.id\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            consentsFeatureKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'consents'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            consentsReducer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createReducer(\n  initialState,\n  on(loadConsentsSuccess, (state, { payload }) => {\n    return { ...consentsAdapter.setAll(payload, state), currentPage: 0 };\n  }),\n  on(nextPage, state => {\n    const totalPagesCount = calculateTotalPagesCount(state);\n    const { currentPage } = state;\n    return (currentPage + 1) >= totalPagesCount ? state : { ...state, currentPage: currentPage + 1 };\n  }),\n  on(previousPage, state => {\n    return state.currentPage === 0 ? state : { ...state, currentPage: state.currentPage - 1 };\n  }),\n  on(setPage, (state, { payload }) => {\n    const totalPagesCount = calculateTotalPagesCount(state);\n    return (payload >= 0 && payload \n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConsentsState\n\n                        \n                    \n                    \n                        \n                            Default value : consentsAdapter.getInitialState({\n  currentPage: 0\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PAGE_SIZE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/collected-consents/store/reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            collectedConsentsFeatureKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'collectedConsents'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            metaReducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MetaReducer[]\n\n                        \n                    \n                    \n                        \n                            Default value : !environment.production ? [] : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  consents: consentsReducer\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/give-consent/store/consents-management/consents-management.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            consentsManagementReducer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createReducer(\n  initialState,\n  on(createConsentFail, (state, { payload }) => ({ ...state, error: payload }))\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createConsentFeatureKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'consentsManagement'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConsentsManagementState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  error: null\n}\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/give-consent/store/consents-management/consents-management.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createConsent\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[CreateConsent] create consent',\n  props()\n)\n                        \n                    \n\n                \n                    \n                        Action for initiate process of creating a consent entity\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createConsentFail\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[CreateConsent] create consent fail',\n  props()\n)\n                        \n                    \n\n                \n                    \n                        Action of consent creating process failure\n\n                    \n                \n\n            \n        \n\n    src/app/routing/app-routing.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultRoute\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/give-consent'\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/give-consent/store/reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            giveConsentFeatureKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'giveConsent'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            metaReducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MetaReducer[]\n\n                        \n                    \n                    \n                        \n                            Default value : !environment.production ? [] : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  consentsManagement: consentsManagementReducer\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/collected-consents/store/consents/consents.selectors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            hasNextPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n  selectConsentsStore,\n  (consentsState) => {\n    const totalPagesCount = calculateTotalPagesCount(consentsState);\n    return (consentsState.currentPage + 1) \n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasPrevPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n  selectConsentsStore,\n  (consentsState) => consentsState.currentPage > 0\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectConsents\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n  selectConsentsStore,\n  (consentsState) => {\n    const currentIndex = consentsState.currentPage * PAGE_SIZE;\n    return selectAll(consentsState).slice(currentIndex, currentIndex + PAGE_SIZE);\n  }\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectConsentsStore\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n  selectCollectedConsents,\n  store => store.consents\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectCurrentPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n  selectConsentsStore,\n  state => state.currentPage\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectTotalPages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n  selectConsentsStore,\n  calculateTotalPagesCount\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : consentsAdapter.getSelectors()\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/shared/store/ui/ui.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UiState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  loading: false\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uiReducer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createReducer(\n  initialState,\n  on(setLoading, (state, { payload }) => ({...state, loading: payload}))\n)\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/collected-consents/store/consents/consents.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            loadConsents\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[Consents] load consents'\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadConsentsFail\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[Consents] load consents fail',\n  props()\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadConsentsSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[Consents] load consents success',\n  props()\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nextPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[Consents] next page'\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            previousPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[Consents] previous page'\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[Consents] set page',\n  props()\n)\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/shared/store/reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            metaReducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MetaReducer[]\n\n                        \n                    \n                    \n                        \n                            Default value : !environment.production ? [] : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  ui: uiReducer\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sharedFeatureKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'shared'\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PANEL_LENGTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/collected-consents/store/selector.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectCollectedConsents\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createFeatureSelector(collectedConsentsFeatureKey)\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/shared/store/ui/ui.selectors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectUiState, state => state.loading)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectUiState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectShared, state => state.ui)\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/shared/store/selector.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectShared\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createFeatureSelector(sharedFeatureKey)\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/shared/store/ui/ui.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            setLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[Ui] set loading',\n  props()\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSuccessMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[Ui] show success message',\n  props()\n)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
