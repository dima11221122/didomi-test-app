var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/ActivePageNumberItem.html",[0,0.815,1,1.936]],["body/interfaces/ActivePageNumberItem.html",[0,1.16,1,3.012,2,1.272,3,0.182,4,0.161,5,0.161,6,0.771,7,1.272,8,1.272,9,1.437,10,1.672,11,1.533,12,1.611,13,1.437,14,1.642,15,0.653,16,3.823,17,2.964,18,2.906,19,3.012,20,2.742,21,3.499,22,0.498,23,0.938,24,0.773,25,0.022,26,0.204,27,0.886,28,0.347,29,2.084,30,2.084,31,2.413,32,0.908,33,0.354,34,2.356,35,2.991,36,2.084,37,2.756,38,3.101,39,2.991,40,1.642,41,1.667,42,3.239,43,1.91,44,1.35,45,1.133,46,0.272,47,1.533,48,0.691,49,2.084,50,3.499,51,3.823,52,2.084,53,2.731,54,2.084,55,2.742,56,2.991,57,2.534,58,1.533,59,2.084,60,2.084,61,2.084,62,1.611,63,2.084,64,1.91,65,0.771,66,2.084,67,2.084,68,2.991,69,2.084,70,1.765,71,2.413,72,2.084,73,4.048,74,2.991,75,2.991,76,2.991,77,1.533,78,0.015,79,0.012,80,0.009]],["title/components/AppComponent.html",[81,0.861,82,1.336]],["body/components/AppComponent.html",[3,0.238,4,0.21,5,0.21,10,1.122,12,1.251,25,0.021,26,0.266,28,0.452,32,1.184,33,0.238,45,1.953,46,0.355,78,0.011,79,0.015,80,0.011,81,1.41,82,2.328,83,2.328,84,1.873,85,1.873,86,1.873,87,1.873,88,3.38,89,1.761,90,3.363,91,3.16,92,2.477,93,5.859,94,2.477,95,5.23,96,2.477,97,3.38,98,5.326,99,2.49,100,6.234,101,2.716,102,3.956,103,3,104,3.956,105,3.956,106,3.38,107,2.716,108,3.956,109,1.477,110,2.477,111,2.328,112,1.873,113,2.952,114,1.873,115,1.004,116,1.873,117,1.396,118,1.873,119,1.873,120,1.396,121,2.192,122,1.873,123,1.477,124,0.852,125,1.873,126,1.477,127,1.873,128,1.477,129,1.873,130,1.477,131,1.873,132,1.477,133,2.477,134,1.873,135,1.873,136,1.873]],["title/modules/AppMockModule.html",[137,1.195,138,2.252]],["body/modules/AppMockModule.html",[3,0.228,4,0.202,5,0.202,15,0.817,22,0.497,25,0.022,26,0.442,28,0.434,33,0.345,41,1.523,46,0.341,62,1.609,78,0.011,79,0.015,80,0.011,115,0.729,124,1.096,137,1.7,138,3.203,139,1.591,140,2.607,141,2.607,142,4.347,143,4.347,144,4.347,145,3.942,146,2.571,147,2.753,148,1.918,149,3.796,150,3.243,151,4.347,152,2.607,153,2.607,154,3.796,155,4.347,156,2.39,157,4.347,158,1.768,159,3.243,160,4.211,161,3.243,162,2.39,163,3.243,164,2.607,165,4.904,166,2.607,167,2.607,168,3.243,169,4.347,170,3.243,171,5.74,172,3.796,173,5.089,174,3.203,175,3.859,176,3.203,177,4.347,178,3.243,179,4.347,180,2.054,181,1.798,182,1.918,183,3.796,184,3.796,185,2.607,186,2.054]],["title/modules/AppModule.html",[137,1.195,187,2.457]],["body/modules/AppModule.html",[3,0.177,4,0.156,5,0.156,25,0.022,26,0.486,28,0.336,33,0.177,46,0.264,78,0.008,79,0.012,80,0.008,82,2.538,109,1.1,126,2.268,128,2.268,137,0.984,138,3.824,139,1.234,145,2.022,146,2.154,150,2.516,152,2.022,153,2.022,156,1.854,181,2.373,182,2.154,185,2.022,187,4.881,188,1.713,189,3.44,190,3.154,191,1.593,192,2.516,193,2.516,194,2.516,195,2.516,196,2.516,197,3.824,198,3.287,199,3.824,200,2.927,201,2.022,202,1.854,203,2.945,204,4.263,205,3.642,206,2.022,207,2.945,208,4.263,209,2.945,210,2.022,211,1.424,212,2.945,213,2.516,214,1.713,215,2.945,216,2.022,217,1.488,218,4.263,219,2.945,220,4.263,221,2.022,222,2.022,223,2.945,224,2.233,225,2.945,226,4.263,227,2.516,228,4.263,229,2.945,230,3.233,231,2.233,232,4.263,233,2.945,234,3.642,235,2.516,236,2.945,237,2.945,238,4.263,239,2.945,240,1.713,241,2.945,242,2.233,243,4.263,244,2.945,245,2.233,246,2.945,247,2.945,248,2.945,249,2.945,250,2.945,251,2.945,252,2.516,253,2.945,254,1.854,255,2.945,256,2.516,257,2.945,258,2.945]],["title/classes/AppPage.html",[46,0.321,259,2.713]],["body/classes/AppPage.html",[3,0.293,4,0.259,5,0.259,22,0.476,25,0.021,26,0.327,33,0.293,45,1.818,46,0.437,62,1.888,78,0.014,79,0.017,80,0.014,111,2.167,206,3.344,259,4.528,260,4.87,261,4.16,262,1.788,263,6.731,264,6.731,265,1.437,266,4.87,267,1.788,268,6.006,269,4.87,270,4.87,271,4.87,272,4.87,273,3.693,274,4.87]],["title/modules/AppRoutingModule.html",[137,1.195,197,2.252]],["body/modules/AppRoutingModule.html",[3,0.261,4,0.231,5,0.231,25,0.022,26,0.412,28,0.496,33,0.261,41,1.664,46,0.39,78,0.012,79,0.016,80,0.012,121,2.329,124,1.196,139,1.82,146,2.808,147,3.006,148,2.194,158,1.166,176,4.066,181,2.056,182,2.194,186,3.315,191,2.349,197,3.498,275,3.293,276,2.733,277,4.214,278,2.733,279,4.647,280,5.556,281,4.342,282,2.526,283,4.342,284,4.342,285,4.342,286,2.349,287,4.342,288,4.342,289,5.556,290,4.214,291,4.214,292,4.342]],["title/components/CollectedConsentsComponent.html",[81,0.861,117,1.263]],["body/components/CollectedConsentsComponent.html",[3,0.173,4,0.153,5,0.153,6,1.47,7,2.423,10,0.818,12,0.913,15,0.622,22,0.282,23,0.905,24,0.48,25,0.021,26,0.333,28,0.33,32,0.864,33,0.173,45,1.569,46,0.259,48,0.957,55,1.817,65,0.734,78,0.008,79,0.012,80,0.008,81,1.391,82,1.078,83,1.87,84,1.367,85,1.367,86,1.367,87,1.367,89,1.285,90,3.171,91,2.98,92,1.99,94,1.99,96,1.367,98,2.466,106,2.466,107,3.401,109,1.078,110,1.99,111,2.421,112,1.367,113,2.576,114,1.367,115,1.196,116,1.367,117,1.92,118,3.022,119,1.367,120,1.019,121,1.761,122,1.367,123,1.078,124,1.066,125,1.367,126,1.078,127,1.367,128,1.078,129,1.367,130,1.078,131,1.367,132,1.078,133,1.99,134,1.367,135,1.367,136,1.367,158,1.775,162,3.424,262,1.258,265,1.309,267,0.864,273,2.189,286,3.264,293,2.466,294,3.589,295,4.125,296,1.99,297,2.68,298,2.644,299,2.644,300,4.953,301,4.201,302,4.953,303,3.165,304,2.466,305,3.797,306,4.201,307,0.695,308,0.657,309,2.887,310,1.661,311,1.569,312,1.483,313,4.201,314,2.887,315,1.679,316,2.466,317,2.466,318,2.887,319,2.466,320,4.201,321,4.201,322,4.201,323,3.589,324,3.756,325,2.466,326,2.887,327,2.466,328,2.887,329,4.201,330,2.887,331,2.887,332,2.887,333,2.189,334,2.887,335,2.887]],["title/modules/CollectedConsentsModule.html",[137,1.195,336,2.457]],["body/modules/CollectedConsentsModule.html",[3,0.19,4,0.168,5,0.168,6,0.803,8,2.184,9,1.497,10,1.271,15,0.68,25,0.022,26,0.48,28,0.361,32,1.862,33,0.19,46,0.284,78,0.009,79,0.013,80,0.009,103,3.4,109,1.18,117,2.196,130,2.323,132,2.323,137,1.74,139,1.324,146,2.266,147,2.426,148,1.597,158,1.399,181,2.468,182,2.266,188,1.838,189,2.17,190,1.989,191,1.71,198,3.365,200,3.079,201,2.17,202,1.989,210,2.17,211,1.055,216,2.17,217,1.597,221,2.17,222,2.17,230,3.4,231,2.396,234,3.83,235,2.7,242,2.396,286,2.426,319,2.7,336,4.905,337,2.7,338,2.7,339,2.7,340,3.915,341,3.915,342,3.16,343,3.4,344,3.4,345,4.845,346,2.7,347,3.16,348,3.16,349,2.396,350,2.17,351,3.16,352,2.7,353,4.483,354,3.16,355,2.396,356,3.16,357,4.483,358,3.16,359,2.396,360,3.16,361,3.16,362,3.83,363,2.396,364,3.16,365,3.16,366,3.16,367,3.16,368,1.597,369,3.16,370,3.16]],["title/modules/CollectedConsentsRoutingModule.html",[137,1.195,341,2.252]],["body/modules/CollectedConsentsRoutingModule.html",[3,0.274,4,0.242,5,0.242,6,1.157,25,0.022,26,0.455,28,0.52,33,0.274,41,1.363,46,0.408,78,0.013,79,0.016,80,0.013,81,1.095,117,2.021,139,1.908,146,2.893,147,3.097,148,2.3,158,1.537,176,2.865,181,2.156,182,2.3,186,3.389,191,2.462,276,2.865,277,4.342,278,2.865,286,2.462,290,3.452,291,3.452,341,3.604,345,3.888,346,3.888,371,4.552,372,3.931,373,4.552,374,3.452,375,4.552,376,3.888,377,3.888]],["title/injectables/CollectedConsentsService.html",[27,0.728,305,2.252]],["body/injectables/CollectedConsentsService.html",[3,0.243,4,0.214,5,0.214,6,1.597,15,0.869,22,0.394,23,1.141,24,0.461,25,0.021,26,0.422,27,1.078,28,0.461,31,1.911,33,0.243,44,1.796,45,1.507,46,0.362,48,1.207,65,1.026,78,0.012,79,0.015,80,0.012,115,0.775,158,1.752,211,1.348,262,1.586,265,1.424,267,1.208,286,3.399,305,3.336,307,0.971,308,0.919,310,1.595,311,1.507,312,1.425,378,1.796,379,5.367,380,3.448,381,4.527,382,3.639,383,4.019,384,3.083,385,4.359,386,4.063,387,4.481,388,2.771,389,5.299,390,4.036,391,4.019,392,3.639,393,3.336,394,5.299,395,3.448,396,3.06,397,3.448,398,4.036]],["title/interfaces/CollectedConsentsState.html",[0,0.815,399,2.713]],["body/interfaces/CollectedConsentsState.html",[0,1.07,2,1.969,3,0.282,4,0.25,5,0.25,6,1.195,22,0.459,23,1.257,24,0.537,25,0.021,26,0.427,33,0.399,41,1.903,78,0.013,79,0.017,80,0.013,158,1.836,211,1.569,214,2.734,254,2.957,368,2.374,384,3.868,399,4.429,400,3.563,401,4.01,402,4.01,403,3.563,404,4.01,405,4.698,406,3.563,407,4.014,408,2.957]],["title/interfaces/Consent.html",[0,0.815,124,0.77]],["body/interfaces/Consent.html",[0,1.016,2,1.87,3,0.268,4,0.237,5,0.237,15,0.961,19,2.601,22,0.436,23,1.218,24,0.786,25,0.021,33,0.268,78,0.013,79,0.016,80,0.013,115,1.253,124,1.336,160,4.481,162,4.108,164,4.481,166,4.481,167,4.481,308,1.656,409,3.813,410,4.463,411,4.002,412,4.492]],["title/injectables/ConsentsEffects.html",[27,0.728,350,2.457]],["body/injectables/ConsentsEffects.html",[3,0.23,4,0.204,5,0.204,6,1.466,22,0.374,23,1.103,24,0.438,25,0.022,26,0.444,27,1.042,28,0.438,33,0.23,46,0.344,48,1.166,62,1.946,65,1.302,78,0.011,79,0.015,80,0.011,115,0.736,158,1.375,217,1.937,265,1.233,307,0.922,308,0.873,311,1.431,312,1.353,350,3.517,378,1.706,387,4.227,413,3.274,414,2.907,415,4.532,416,4.242,417,3.833,418,4.374,419,3.884,420,5.121,421,4.927,422,5.121,423,5.121,424,3.96,425,2.74,426,5.121,427,5.121,428,5.121,429,3.833,430,2.907,431,3.274,432,2.907,433,3.274,434,3.274,435,2.907,436,2.413,437,2.074]],["title/injectables/ConsentsManagementEffects.html",[27,0.728,438,2.457]],["body/injectables/ConsentsManagementEffects.html",[3,0.212,4,0.187,5,0.187,15,0.758,22,0.344,23,1.041,24,0.402,25,0.022,26,0.443,27,0.984,28,0.402,33,0.212,46,0.316,48,1.101,62,1.879,65,1.229,78,0.01,79,0.014,80,0.01,115,0.676,124,1.28,158,1.483,180,3.216,217,1.779,265,1.164,307,0.847,308,0.802,311,1.315,312,1.243,344,3.667,378,1.567,392,3.32,414,2.67,415,4.42,416,4.15,418,4.188,419,3.667,421,4.718,425,2.865,430,2.67,431,3.008,434,3.008,435,2.67,436,2.216,437,1.905,438,3.32,439,2.458,440,3.792,441,2.988,442,3.008,443,4.835,444,4.835,445,4.131,446,3.521,447,4.835,448,4.835,449,4.835,450,4.835,451,4.835,452,4.835,453,3.521,454,4.835,455,3.044,456,2.418,457,2.67,458,3.521,459,2.216,460,3.521]],["title/injectables/ConsentsManagementService.html",[27,0.728,461,2.457]],["body/injectables/ConsentsManagementService.html",[3,0.24,4,0.212,5,0.212,15,1.133,22,0.39,24,0.601,25,0.021,26,0.421,27,1.071,28,0.456,31,1.892,33,0.24,44,1.778,45,1.492,46,0.359,48,1.199,57,2.325,65,1.016,78,0.011,79,0.015,80,0.011,115,1.011,124,1.531,180,2.162,211,1.334,262,1.576,265,1.267,267,1.196,307,1.267,308,1.199,310,1.579,378,1.778,381,4.497,382,3.615,383,3.992,385,4.35,388,2.744,391,3.992,392,3.615,425,1.778,439,2.62,441,2.162,455,3.314,457,3.03,461,3.615,462,5.03,463,3.413,464,3.063,465,3.992,466,3.995,467,5.264,468,3.995,469,3.939,470,2.325,471,3.413,472,3.995]],["title/interfaces/ConsentsManagementState.html",[0,0.815,464,2.082]],["body/interfaces/ConsentsManagementState.html",[0,1.054,2,1.941,3,0.278,4,0.246,5,0.246,22,0.452,23,1.246,24,0.529,25,0.021,26,0.389,33,0.397,41,1.89,78,0.013,79,0.017,80,0.013,158,1.243,211,1.547,411,3.673,425,2.576,439,2.061,440,3.18,441,2.505,456,3.18,457,3.512,464,3.673,473,3.512,474,5.932,475,3.956,476,3.974,477,3.512,478,3.512,479,3.643,480,3.512,481,3.18,482,3.956,483,3.131]],["title/guards/ConsentsResolverService.html",[372,2.457,484,2.713]],["body/guards/ConsentsResolverService.html",[3,0.247,4,0.218,5,0.218,6,1.517,22,0.401,24,0.612,25,0.021,26,0.441,27,1.091,28,0.469,33,0.247,44,1.828,45,1.534,46,0.369,48,1.221,62,1.299,65,1.045,78,0.012,79,0.015,80,0.012,115,1.029,124,0.885,262,1.605,265,1.29,267,1.23,268,4.58,278,2.586,286,2.222,296,1.946,304,3.51,305,4.236,307,1.29,308,1.221,310,2.119,316,3.51,317,3.51,372,3.681,374,4.526,376,5.404,437,2.222,470,2.39,483,3.229,485,4.108,486,5.099,487,3.51,488,4.108,489,5.361,490,6.326,491,6.326,492,4.108,493,4.108,494,4.098,495,4.108,496,4.108]],["title/injectables/ConsentsService.html",[27,0.728,416,2.252]],["body/injectables/ConsentsService.html",[3,0.24,4,0.212,5,0.212,15,0.86,22,0.39,23,1.133,24,0.672,25,0.021,26,0.421,27,1.071,28,0.456,33,0.24,44,1.778,45,1.492,46,0.359,48,1.199,62,1.664,65,1.016,78,0.011,79,0.015,80,0.011,115,1.011,124,1.438,156,2.515,158,1.68,174,3.939,180,2.848,262,1.576,265,1.506,267,1.576,307,1.267,308,1.199,311,1.492,312,1.41,378,1.778,386,4.043,411,2.325,416,3.314,437,2.162,494,4.466,497,3.413,498,5.264,499,5.888,500,5.888,501,3.995,502,6.678,503,5.264,504,5.264,505,3.995,506,3.995,507,3.995,508,3.995,509,3.995]],["title/interfaces/ConsentsState.html",[0,0.815,384,2.082]],["body/interfaces/ConsentsState.html",[0,0.771,2,1.42,3,0.204,4,0.18,5,0.18,6,0.861,19,2.451,22,0.331,23,1.014,24,0.387,25,0.022,26,0.393,33,0.392,41,2.048,53,3.076,62,1.943,70,1.971,71,2.769,77,3.214,78,0.01,79,0.013,80,0.01,124,1.014,158,0.91,211,1.131,384,3.402,404,2.326,424,2.326,425,2.602,433,2.894,470,1.971,476,3.232,479,2.963,483,3.739,510,2.569,511,4.707,512,5.41,513,4.022,514,3.387,515,2.894,516,1.971,517,2.326,518,2.132,519,2.569,520,4.103,521,2.569,522,2.894,523,2.894,524,2.894,525,2.569,526,4.022,527,2.894,528,2.894,529,2.894,530,2.894,531,2.894,532,4.622,533,4.022,534,2.894,535,4.022,536,2.894]],["title/components/GiveConsentComponent.html",[81,0.861,120,1.263]],["body/components/GiveConsentComponent.html",[3,0.201,4,0.178,5,0.178,10,0.95,12,1.06,15,0.722,22,0.327,24,0.534,25,0.021,26,0.362,28,0.383,32,1.003,33,0.201,46,0.301,48,1.064,65,0.852,78,0.01,79,0.013,80,0.01,81,1.295,82,1.251,83,2.08,84,1.587,85,1.587,86,1.587,87,1.587,89,1.492,90,3.267,91,3.07,92,2.213,94,2.213,96,2.548,107,2.302,109,1.251,110,2.213,111,2.08,112,1.587,113,2.757,114,1.587,115,1.118,116,1.587,117,1.183,118,1.587,119,1.587,120,2.055,121,2.825,122,1.587,123,1.251,124,1.47,125,1.587,126,1.251,127,1.587,128,1.251,129,1.587,130,1.251,131,1.587,132,1.251,133,2.213,134,1.587,135,1.587,136,1.587,262,1.399,265,1.125,267,1.003,282,3.13,297,1.813,298,2.941,299,2.941,307,1.125,308,1.064,310,1.325,315,1.95,333,2.542,439,2.394,455,2.941,461,3.997,470,1.95,537,4.08,538,2.863,539,4.596,540,3.544,541,5.38,542,4.673,543,3.992,544,3.352,545,3.352,546,4.673,547,4.673,548,3.352,549,3.352,550,3.352,551,3.352,552,3.352]],["title/components/GiveConsentFormComponent.html",[81,0.861,123,1.336]],["body/components/GiveConsentFormComponent.html",[3,0.145,4,0.129,5,0.129,10,0.686,12,0.765,15,0.521,17,2.144,22,0.236,23,0.793,24,0.509,25,0.021,26,0.3,28,0.276,32,0.724,33,0.145,41,0.724,46,0.217,48,0.839,62,1.41,64,2.319,65,0.615,78,0.007,79,0.011,80,0.007,81,1.292,82,0.904,83,1.64,84,1.146,85,1.146,86,1.146,87,1.146,89,1.077,90,3.047,91,2.864,92,1.745,94,1.745,96,1.146,109,0.904,110,1.745,111,1.64,112,1.146,113,2.362,114,1.146,115,1.086,116,1.146,117,0.854,118,1.146,119,1.146,120,0.854,121,2.697,122,1.146,123,1.862,124,1.545,125,1.146,126,0.904,127,1.146,128,0.904,129,1.146,130,0.904,131,1.146,132,0.904,133,1.745,134,1.146,135,1.146,136,1.146,162,3.378,164,3.063,166,3.063,167,3.063,185,1.662,262,1.103,265,1.361,267,1.336,282,3.42,296,1.745,297,2.414,298,2.319,299,2.319,303,2.901,307,0.582,308,0.551,310,1.457,315,1.408,412,1.523,439,2.616,455,2.319,469,1.523,470,1.408,480,4.287,537,4.457,539,5.021,540,2.794,543,4.26,553,4.457,554,2.067,555,3.147,556,4.461,557,3.684,558,4.987,559,2.794,560,4.461,561,2.42,562,4.987,563,3.684,564,3.684,565,3.383,566,2.42,567,2.42,568,3.147,569,5.653,570,3.684,571,2.42,572,2.42,573,2.794,574,3.684,575,1.835,576,2.42,577,2.42,578,2.42,579,2.42,580,2.42,581,2.42,582,2.42,583,3.684,584,3.684,585,3.684,586,3.684,587,3.684,588,3.147,589,2.794,590,3.147,591,3.147,592,3.684,593,3.147,594,3.147,595,3.147]],["title/modules/GiveConsentModule.html",[137,1.195,596,2.252]],["body/modules/GiveConsentModule.html",[3,0.2,4,0.177,5,0.177,15,0.716,25,0.022,26,0.485,28,0.38,33,0.2,46,0.298,78,0.01,79,0.013,80,0.01,103,3.523,109,1.241,120,2.232,123,2.361,124,1.153,137,1.789,139,1.393,146,2.348,147,2.514,148,1.68,156,2.092,158,1.248,181,2.537,182,2.348,188,1.934,189,2.282,190,2.092,191,1.798,198,3.421,200,3.19,201,2.282,202,2.092,210,2.282,211,1.11,216,2.282,217,1.68,221,2.282,222,2.282,230,3.523,231,2.521,242,2.521,282,3.116,343,3.523,344,3.523,349,2.521,352,2.84,362,3.969,368,1.68,438,2.282,439,1.479,441,1.798,471,2.84,553,2.521,575,2.521,596,4.374,597,2.84,598,2.84,599,2.84,600,3.98,601,3.324,602,3.969,603,2.84,604,3.324,605,4.646,606,3.324,607,4.646,608,3.324,609,4.646,610,3.324,611,4.646,612,3.324,613,4.646,614,4.646,615,3.324,616,4.646,617,3.324,618,3.324,619,3.324,620,3.324,621,3.324,622,3.324,623,3.324]],["title/modules/GiveConsentRoutingModule.html",[137,1.195,600,2.252]],["body/modules/GiveConsentRoutingModule.html",[3,0.277,4,0.245,5,0.245,25,0.022,26,0.444,28,0.527,31,2.187,33,0.277,41,1.382,46,0.414,78,0.013,79,0.017,80,0.013,81,1.111,120,2.039,124,0.994,137,1.542,139,1.935,146,2.919,147,3.125,148,2.333,176,2.906,181,2.187,182,2.333,186,3.411,191,2.498,276,2.906,277,4.381,278,2.906,282,2.686,290,3.501,291,3.501,377,3.945,439,2.055,596,2.906,600,3.636,602,3.945,603,3.945,624,4.617,625,4.617]],["title/interfaces/GiveConsentState.html",[0,0.815,626,2.713]],["body/interfaces/GiveConsentState.html",[0,1.064,2,1.958,3,0.281,4,0.248,5,0.248,22,0.456,23,1.253,24,0.533,25,0.021,26,0.426,33,0.399,41,1.897,78,0.013,79,0.017,80,0.013,158,1.254,211,1.56,214,2.718,254,2.94,368,2.36,401,3.996,402,3.996,403,3.542,408,2.94,439,2.079,441,2.527,464,3.86,465,3.542,478,5.176,481,3.996,626,4.413,627,3.542,628,4.671,629,3.542]],["title/components/LoaderComponent.html",[81,0.861,126,1.336]],["body/components/LoaderComponent.html",[3,0.205,4,0.182,5,0.182,10,0.969,12,1.08,15,0.736,18,2.243,22,0.462,23,1.02,24,0.39,25,0.021,26,0.318,28,0.39,32,1.023,33,0.205,46,0.307,48,1.078,65,0.869,78,0.01,79,0.014,80,0.01,81,1.308,82,1.275,83,2.107,84,1.618,85,1.618,86,1.618,87,1.618,89,1.52,90,3.279,91,3.081,92,2.243,94,2.243,96,1.618,99,2.981,101,3.732,109,1.275,110,2.243,111,2.107,112,1.618,113,2.779,114,1.618,115,1.044,116,1.618,117,1.206,118,1.618,119,1.618,120,1.206,121,1.985,122,1.618,123,1.275,124,0.736,125,1.618,126,2.191,127,1.618,128,1.275,129,1.618,130,1.275,131,1.618,132,1.275,133,2.243,134,1.618,135,1.618,136,1.618,240,3.162,262,1.418,265,1.308,267,1.023,294,4.045,296,2.243,297,2.94,303,3.414,307,0.822,308,0.778,310,1.872,311,1.275,312,1.206,315,1.987,333,3.591,393,3.88,630,2.918,631,4.735,632,5.435,633,4.735,634,3.416,635,3.694,636,4.735,637,4.735,638,3.416,639,4.735,640,2.346,641,2.918,642,3.416,643,2.918,644,3.416,645,2.918,646,3.416]],["title/components/MainAreaComponent.html",[81,0.861,128,1.336]],["body/components/MainAreaComponent.html",[3,0.171,4,0.151,5,0.151,10,0.807,12,0.9,20,1.791,22,0.406,23,0.895,24,0.561,25,0.022,26,0.363,28,0.325,31,2.559,32,0.852,33,0.171,46,0.255,48,0.648,71,1.348,77,1.438,78,0.008,79,0.012,80,0.008,81,1.182,82,1.063,83,1.85,84,1.348,85,1.348,86,1.348,87,1.348,89,1.266,90,3.162,91,3.034,92,1.969,94,1.969,96,3.01,97,3.552,99,2.617,101,2.855,107,1.954,109,1.063,110,1.969,111,1.85,112,1.348,113,2.559,114,1.348,115,0.943,116,1.348,117,1.005,118,2.327,119,1.348,120,1.005,121,2.516,122,1.348,123,1.063,124,1.238,125,1.348,126,1.063,127,1.348,128,2.018,129,1.348,130,1.063,131,1.348,132,1.063,133,1.969,134,1.348,135,1.348,136,1.348,158,1.451,224,4.098,227,2.431,265,1.182,273,2.158,307,0.685,308,0.648,311,1.552,312,1.468,324,2.158,325,2.431,327,2.431,435,2.158,436,1.791,437,1.539,494,3.373,643,2.431,645,2.431,647,4.616,648,2.431,649,4.913,650,4.158,651,4.913,652,4.913,653,2.846,654,6.003,655,2.846,656,4.158,657,2.617,658,4.158,659,4.158,660,4.913,661,2.846,662,5.403,663,2.846,664,2.846,665,2.846,666,4.158,667,4.158,668,3.552,669,3.552,670,4.913,671,2.846,672,2.846,673,2.846,674,4.158,675,2.846,676,2.846,677,2.846,678,2.846,679,2.846,680,2.846,681,2.846]],["title/interfaces/NumberPageItem.html",[0,0.815,37,1.936]],["body/interfaces/NumberPageItem.html",[0,1.16,1,2.756,2,1.272,3,0.182,4,0.161,5,0.161,6,0.771,7,1.272,8,1.272,9,1.437,10,1.672,11,1.533,12,1.611,13,1.437,14,1.642,15,0.653,16,3.823,17,2.964,18,2.906,19,3.012,20,1.91,21,3.499,22,0.498,23,0.938,24,0.773,25,0.022,26,0.204,27,0.886,28,0.347,29,2.084,30,2.084,31,2.413,32,0.908,33,0.354,34,2.356,35,2.991,36,2.991,37,3.012,38,3.101,39,2.991,40,1.642,41,1.667,42,3.239,43,1.91,44,1.35,45,1.133,46,0.272,47,1.533,48,0.691,49,2.084,50,3.499,51,3.823,52,2.084,53,2.731,54,2.084,55,2.742,56,2.991,57,2.534,58,1.533,59,2.084,60,2.084,61,2.084,62,1.611,63,2.084,64,1.91,65,0.771,66,2.084,67,2.084,68,2.991,69,2.084,70,1.765,71,2.413,72,2.084,73,4.048,74,2.991,75,2.991,76,2.991,77,1.533,78,0.015,79,0.012,80,0.009]],["title/injectables/PagesPanelGeneratorService.html",[27,0.728,47,1.808]],["body/injectables/PagesPanelGeneratorService.html",[0,1.06,1,2.519,3,0.156,4,0.138,5,0.138,6,1.314,7,2.166,8,2.166,9,2.448,10,1.855,11,2.611,12,2.001,13,2.448,14,1.405,15,0.837,16,3.197,17,2.261,18,2.997,19,2.988,20,1.634,21,2.668,22,0.505,24,0.723,25,0.022,26,0.175,27,0.79,28,0.297,29,1.783,30,1.783,31,2.205,32,1.163,33,0.333,34,2.102,35,2.668,36,1.783,37,2.519,38,2.934,39,2.668,40,2.102,41,1.547,42,3.007,43,1.634,44,1.156,45,0.97,46,0.233,47,1.963,48,1.06,49,2.668,50,3.987,51,4.25,52,2.668,53,2.912,54,2.668,55,2.931,56,3.197,57,2.261,58,2.353,59,3.197,60,3.197,61,3.197,62,1.472,63,1.783,64,1.634,65,1.184,66,2.668,67,1.783,68,2.668,69,1.783,70,1.511,71,2.205,72,1.783,73,3.8,74,2.668,75,2.668,76,2.668,77,1.312,78,0.013,79,0.011,80,0.007,115,0.746,262,1.163,265,1.121,267,1.163,307,0.935,308,0.885,378,1.156,682,3.885,683,3.977,684,2.596,685,2.596,686,2.596,687,2.596,688,2.596,689,2.218]],["title/components/PaginationComponent.html",[81,0.861,130,1.336]],["body/components/PaginationComponent.html",[3,0.155,4,0.137,5,0.137,6,1.702,7,2.805,8,2.805,10,1.098,11,1.306,12,1.468,13,1.224,15,0.556,18,2.442,19,2.519,22,0.252,24,0.706,25,0.021,26,0.26,28,0.295,32,0.774,33,0.155,38,1.306,40,1.398,46,0.232,47,1.306,48,1.057,53,2.066,58,2.346,78,0.007,79,0.011,80,0.007,81,1.329,82,0.965,83,1.723,84,1.224,85,1.224,86,1.224,87,1.224,89,1.15,90,3.095,91,2.908,92,1.833,94,1.833,96,1.224,109,0.965,110,1.833,111,1.723,112,1.224,113,2.442,114,1.224,115,0.891,116,1.224,117,0.912,118,1.224,119,1.224,120,0.912,121,1.622,122,1.224,123,0.965,124,0.556,125,1.224,126,0.965,127,1.224,128,0.965,129,1.224,130,1.925,131,1.224,132,0.965,133,2.615,134,1.224,135,1.224,136,1.224,262,1.159,265,1.593,267,1.543,296,1.833,297,2.511,298,2.437,299,2.437,303,3,307,0.622,308,0.588,310,2.183,315,1.503,343,2.936,412,3.245,469,2.922,516,3,555,3.307,559,2.936,565,4.558,573,3.91,640,3.792,690,2.207,691,3.307,692,4.642,693,3.871,694,3.307,695,3.91,696,3.307,697,4.642,698,4.642,699,4.642,700,3.966,701,4.642,702,3.871,703,2.584,704,2.584,705,2.584,706,2.584,707,2.584,708,2.584,709,3.307,710,2.584,711,2.584,712,2.584,713,2.584,714,2.207,715,2.207,716,2.207,717,2.207,718,2.584,719,2.584,720,3.871,721,3.307,722,2.936,723,3.871]],["title/components/PaginationControllerComponent.html",[81,0.861,132,1.336]],["body/components/PaginationControllerComponent.html",[3,0.16,4,0.141,5,0.141,6,1.648,7,2.717,8,2.717,10,1.339,12,0.841,15,0.573,19,1.98,22,0.26,23,0.852,24,0.452,25,0.021,26,0.266,28,0.304,32,0.797,33,0.16,38,1.345,46,0.239,48,0.901,53,2.103,58,2.387,65,0.677,78,0.008,79,0.011,80,0.008,81,1.137,82,0.994,83,1.761,84,1.26,85,1.26,86,1.26,87,1.26,89,1.184,90,3.116,91,2.928,92,1.874,94,1.874,96,1.26,101,3.592,109,0.994,110,1.874,111,1.761,112,1.26,113,2.477,114,1.26,115,1.004,116,1.26,117,0.939,118,1.26,119,1.26,120,0.939,121,1.659,122,1.26,123,0.994,124,0.573,125,1.26,126,0.994,127,1.26,128,0.994,129,1.26,130,0.994,131,1.26,132,1.953,133,3.116,134,1.26,135,1.26,136,1.26,262,1.185,265,1.533,267,1.566,296,1.874,297,2.556,303,3.044,307,0.952,308,0.901,310,2.21,311,1.953,312,1.847,359,4.917,516,3.044,518,2.491,640,1.827,691,4.469,695,3.967,724,2.273,725,5.231,726,3.957,727,5.231,728,3.957,729,3.957,730,3.957,731,2.302,732,3.381,733,4.724,734,3.957,735,3.244,736,3.244,737,2.661,738,4.024,739,3.957,740,2.661,741,2.661,742,2.661,743,3.381,744,2.661,745,3.957,746,2.661,747,3.957,748,2.661,749,3.957,750,3.957,751,2.661,752,2.661,753,2.018,754,2.661,755,2.661,756,2.661,757,2.661]],["title/components/PaginationPagesPanelComponent.html",[32,1.071,81,0.861]],["body/components/PaginationPagesPanelComponent.html",[3,0.149,4,0.132,5,0.132,6,1.589,7,2.619,8,2.619,9,2.96,10,2.039,12,1.715,13,1.174,15,0.534,19,2.484,22,0.242,23,0.808,24,0.677,25,0.021,26,0.252,28,0.283,31,1.174,32,1.512,33,0.149,38,1.253,40,2.45,46,0.223,47,2.884,48,0.855,53,2.015,58,2.288,62,0.784,65,0.631,71,1.174,78,0.007,79,0.011,80,0.007,81,1.306,82,0.926,83,1.67,84,1.174,85,1.174,86,1.174,87,1.174,89,1.104,90,3.065,91,2.881,92,1.778,94,1.778,96,1.174,109,0.926,110,1.778,111,1.67,112,1.174,113,2.392,114,1.174,115,1.042,116,1.174,117,0.875,118,1.174,119,1.174,120,0.875,121,1.573,122,1.174,123,0.926,124,0.534,125,1.174,126,0.926,127,1.174,128,0.926,129,1.174,130,1.691,131,1.174,132,0.926,133,2.96,134,1.174,135,1.174,136,1.174,262,1.124,265,1.469,267,1.356,296,1.778,297,2.45,298,2.363,299,2.363,303,2.938,307,1.09,308,1.031,310,1.996,311,0.926,312,0.875,315,1.443,363,4.739,469,1.561,559,2.846,565,3.434,573,2.846,640,3.11,694,3.206,696,3.206,700,3.869,709,3.206,714,3.869,715,4.314,716,2.119,717,2.119,732,3.206,758,2.119,759,3.206,760,3.753,761,3.753,762,4.528,763,3.753,764,4.528,765,3.753,766,2.48,767,3.753,768,2.48,769,2.48,770,2.48,771,2.48,772,3.753,773,2.48,774,2.48,775,2.48,776,2.48,777,2.48,778,2.48,779,5.05]],["title/interfaces/PlaceholderPageItem.html",[0,0.815,34,1.936]],["body/interfaces/PlaceholderPageItem.html",[0,1.171,1,2.783,2,1.294,3,0.185,4,0.164,5,0.164,6,0.785,7,1.294,8,1.294,9,1.462,10,1.683,11,1.56,12,1.626,13,1.462,14,1.67,15,0.665,16,3.853,17,2.565,18,2.811,19,2.921,20,1.943,21,3.028,22,0.502,23,0.949,24,0.766,25,0.022,26,0.208,27,0.897,28,0.353,29,3.028,30,3.028,31,2.436,32,1.32,33,0.357,34,2.783,35,3.028,36,2.12,37,2.783,38,3.119,39,3.028,40,1.67,41,1.68,42,3.265,43,1.943,44,1.374,45,1.153,46,0.277,47,1.56,48,0.703,49,2.12,50,3.532,51,3.853,52,2.12,53,2.747,54,2.12,55,2.776,56,3.028,57,2.565,58,1.56,59,2.12,60,2.12,61,2.12,62,1.626,63,2.12,64,1.943,65,0.785,66,2.12,67,2.12,68,3.028,69,2.12,70,1.796,71,2.436,72,2.12,73,4.075,74,3.028,75,3.028,76,3.028,77,1.56,78,0.015,79,0.013,80,0.009]],["title/modules/SharedModule.html",[137,1.195,198,1.936]],["body/modules/SharedModule.html",[3,0.264,4,0.233,5,0.233,15,0.945,25,0.022,26,0.468,28,0.501,33,0.264,46,0.394,78,0.013,79,0.016,80,0.013,137,1.869,139,2.581,146,2.827,147,3.027,148,2.218,181,2.079,182,2.218,190,2.763,198,3.027,210,3.014,211,1.466,216,3.014,217,2.218,240,2.554,256,3.75,349,3.329,368,2.218,780,4.389,781,5.595,782,4.78,783,5.595,784,4.389,785,3.014,786,4.389,787,5.595,788,5.595,789,3.75,790,4.389,791,4.389,792,4.389,793,4.389,794,4.389,795,4.389,796,4.389]],["title/interfaces/SharedState.html",[0,0.815,797,2.713]],["body/interfaces/SharedState.html",[0,1.073,2,1.975,3,0.283,4,0.25,5,0.25,22,0.46,23,1.26,24,0.538,25,0.021,26,0.428,33,0.4,41,1.905,78,0.014,79,0.017,80,0.014,211,1.574,214,2.742,254,2.966,368,2.381,401,4.018,402,4.018,403,3.574,408,2.966,797,4.437,798,3.574,799,5.189,800,4.189,801,4.018,802,4.712,803,3.574,804,4.026]],["title/interceptors/ShowLoaderInterceptor.html",[199,2.252,805,3.056]],["body/interceptors/ShowLoaderInterceptor.html",[3,0.255,4,0.226,5,0.226,22,0.415,24,0.626,25,0.021,26,0.446,27,1.115,28,0.485,33,0.255,46,0.381,48,1.248,62,1.344,65,1.081,78,0.012,79,0.016,80,0.012,115,1.052,155,5.475,156,2.675,199,3.45,245,4.6,262,1.641,265,1.319,267,1.272,296,2.013,307,1.319,308,1.248,436,2.675,437,2.299,494,4.165,635,4.275,641,3.631,722,4.6,806,4.25,807,5.182,808,3.631,809,5.48,810,4.25,811,4.25,812,5.48,813,6.408,814,4.25,815,3.631,816,4.25,817,5.48,818,4.25,819,4.25,820,4.25,821,4.25]],["title/pipes/StringifyConsentPipe.html",[340,2.252,657,2.252]],["body/pipes/StringifyConsentPipe.html",[3,0.253,4,0.223,5,0.223,6,1.384,15,0.905,17,3.167,24,0.48,25,0.021,26,0.366,28,0.48,33,0.253,41,1.259,46,0.377,62,1.329,78,0.012,79,0.016,80,0.012,89,1.872,115,1.159,124,1.374,158,1.621,262,1.259,265,1.012,267,1.259,296,1.992,307,1.012,308,0.958,312,1.484,323,4.65,340,3.426,355,4.128,411,2.447,470,2.447,588,3.592,589,3.189,590,3.592,591,3.592,593,3.592,594,3.592,595,3.592,657,3.426,689,4.65,731,3.167,822,4.205,823,4.65,824,3.592,825,5.443,826,4.205,827,5.443,828,6.035,829,6.611,830,4.205,831,5.443,832,4.205,833,4.205,834,4.205,835,4.205,836,4.205,837,4.205,838,4.205]],["title/injectables/TableHandlerService.html",[27,0.728,738,2.457]],["body/injectables/TableHandlerService.html",[3,0.199,4,0.176,5,0.176,6,1.708,15,0.711,19,2.237,22,0.323,23,0.996,24,0.528,25,0.021,26,0.389,27,0.941,28,0.377,33,0.199,38,2.338,44,1.47,45,1.233,46,0.296,48,1.053,53,2.376,58,2.698,65,0.84,78,0.009,79,0.013,80,0.009,115,0.888,158,1.242,211,1.103,262,1.385,265,1.591,267,1.598,295,3.508,307,1.113,308,1.053,310,2.11,311,2.16,312,2.042,378,1.47,382,3.176,383,3.508,385,3.972,386,4.767,388,2.268,395,2.822,397,2.822,425,1.47,483,2.503,516,3.542,517,2.268,518,3.36,695,4.386,735,3.972,736,3.972,738,3.176,743,3.952,753,5.094,839,5.739,840,2.822,841,4.626,842,3.303,843,3.303,844,3.303,845,4.626,846,3.303,847,4.626,848,3.303,849,4.626,850,4.626,851,3.303,852,2.505,853,2.505,854,3.303,855,3.303,856,3.303]],["title/injectables/UiEffects.html",[27,0.728,785,2.457]],["body/injectables/UiEffects.html",[3,0.246,4,0.217,5,0.217,22,0.399,23,1.15,24,0.467,25,0.022,26,0.44,27,1.087,28,0.467,33,0.246,46,0.367,48,1.217,65,1.359,78,0.012,79,0.015,80,0.012,115,0.785,217,2.065,240,3.464,265,1.286,307,0.984,308,0.931,311,1.526,312,1.443,378,1.819,414,3.099,415,4.615,418,4.515,419,4.052,425,2.378,430,3.099,436,2.573,459,3.974,731,3.109,785,3.669,789,3.492,857,3.492,858,5.953,859,6.314,860,4.087,861,5.343,862,5.953,863,5.343,864,5.343,865,4.052,866,4.087,867,4.052,868,4.565,869,3.492]],["title/injectables/UiService.html",[27,0.728,635,2.252]],["body/injectables/UiService.html",[3,0.209,4,0.185,5,0.185,15,1.182,18,2.273,22,0.34,23,1.033,24,0.627,25,0.021,26,0.398,27,0.976,28,0.398,33,0.209,44,1.55,45,1.3,46,0.313,48,1.093,57,2.792,65,0.886,78,0.01,79,0.014,80,0.01,99,3.021,115,1.054,211,1.163,240,3.897,262,1.437,265,1.424,267,1.437,307,1.322,308,1.25,310,1.897,311,1.3,312,2.089,378,1.55,382,3.295,385,4.038,386,3.77,388,2.392,393,3.725,411,3.195,412,3.456,425,2.136,445,4.1,459,3.456,483,2.596,589,3.639,635,3.021,731,3.443,799,3.639,867,4.985,868,5.055,870,2.975,871,4.487,872,3.77,873,4.799,874,4.799,875,3.483,876,4.1,877,4.799,878,4.799,879,3.483,880,4.799,881,4.799,882,3.483,883,3.483,884,3.483,885,3.483]],["title/interfaces/UiState.html",[0,0.815,800,2.252]],["body/interfaces/UiState.html",[0,1.028,2,1.892,3,0.271,4,0.24,5,0.24,18,2.697,22,0.441,23,1.226,24,0.515,25,0.021,26,0.383,33,0.375,41,1.705,78,0.013,79,0.016,80,0.013,99,3.585,211,1.507,240,3.313,393,4.46,412,3.927,425,2.534,476,3.911,479,3.585,483,3.545,731,3.313,800,3.927,801,3.099,865,3.423,869,3.856,872,3.099,876,4.865,886,3.423,887,5.695,888,5.695,889,3.856]],["title/coverage.html",[890,3.707]],["body/coverage.html",[0,1.301,1,0.928,5,0.091,6,1.8,7,2.328,8,2.25,9,2.308,10,1.459,11,2.294,12,1.807,13,2.15,14,2.456,24,0.196,25,0.021,27,1.13,32,0.513,34,0.928,37,0.928,42,0.998,46,0.154,47,0.867,77,3.687,78,0.005,79,0.008,80,0.005,81,1.337,82,0.64,88,1.465,117,0.605,120,0.605,123,0.64,124,0.767,126,0.64,128,0.64,130,0.64,132,0.64,140,3.117,141,3.117,158,0.461,160,1.178,169,2.398,174,1.08,175,1.301,180,1.518,199,1.08,214,1.633,224,1.301,245,1.301,252,1.465,259,1.301,261,1.465,275,1.301,276,1.08,279,1.301,282,1.633,286,1.518,293,1.465,295,1.301,305,1.08,324,2.701,340,1.08,350,1.178,355,1.301,359,1.301,363,1.301,368,1.8,372,1.178,374,1.301,379,1.465,380,1.465,384,0.998,387,1.178,396,1.301,399,1.301,400,3.121,404,1.178,406,1.301,408,2.242,409,1.465,413,1.465,416,1.08,424,1.178,432,1.301,438,1.178,439,2.747,440,3.532,441,2.783,442,1.465,456,1.178,459,1.08,461,1.178,462,1.465,463,1.465,464,0.998,469,1.08,473,3.121,477,1.301,479,2.242,481,1.178,484,1.301,486,1.465,487,1.465,497,1.465,510,3.901,516,0.998,517,1.178,518,1.08,519,1.301,520,1.301,521,1.301,525,1.301,537,2.128,538,1.465,553,1.301,554,1.465,626,1.301,627,3.121,629,1.301,630,1.465,635,1.08,647,1.465,648,1.465,657,1.08,690,1.465,724,1.465,735,1.178,736,1.178,738,1.178,753,1.301,758,1.465,785,1.178,797,1.301,798,3.121,800,1.08,801,1.178,803,1.301,805,1.465,807,1.465,808,1.465,823,1.465,824,1.465,839,1.465,840,1.465,852,1.301,853,1.301,857,1.465,870,1.465,871,1.301,872,1.178,886,2.701,890,1.301,891,1.465,892,1.715,893,1.715,894,4.116,895,7.219,896,1.715,897,1.715,898,7.21,899,2.806,900,2.806,901,1.465,902,1.715,903,4.116,904,2.806,905,4.116,906,4.116,907,2.806,908,2.806,909,2.806,910,1.715,911,1.715,912,3.562,913,4.163,914,4.539,915,4.395,916,1.465,917,1.465,918,1.465,919,1.715,920,1.715,921,2.806,922,2.806,923,2.398,924,1.715,925,1.715,926,1.715,927,1.715,928,1.465,929,1.465,930,2.398,931,2.398,932,1.465,933,1.465,934,1.465,935,2.398,936,1.465,937,1.465,938,1.715]],["title/dependencies.html",[188,2.504,939,2.55]],["body/dependencies.html",[25,0.021,28,0.52,78,0.013,79,0.016,80,0.013,145,3.126,148,2.3,152,3.126,153,3.126,157,3.888,188,2.648,205,4.891,206,3.931,211,1.912,213,3.888,217,2.3,221,3.126,222,3.126,278,2.865,437,2.462,515,3.888,575,3.452,940,4.552,941,6.064,942,4.552,943,5.725,944,4.552,945,4.552,946,4.552,947,4.552,948,4.552,949,6.773,950,4.552,951,4.552,952,4.552,953,4.552,954,4.552,955,4.552,956,4.552,957,4.552,958,4.552,959,4.552,960,4.552]],["title/miscellaneous/functions.html",[961,1.737,962,3.677]],["body/miscellaneous/functions.html",[22,0.527,25,0.019,78,0.015,79,0.018,80,0.015,115,1.036,140,3.704,141,4.633,170,4.609,174,4.247,180,3.435,307,1.298,308,1.228,961,3.139,962,4.609,963,5.424,964,5.395,965,4.609]],["title/index.html",[22,0.292,966,2.985,967,2.985]],["body/index.html",[4,0.215,10,1.505,25,0.015,78,0.012,79,0.015,80,0.012,91,2.799,142,3.456,143,3.456,144,3.456,145,2.778,152,2.778,153,4.068,202,2.547,415,2.778,568,3.456,668,4.535,669,4.535,683,5.061,759,3.456,782,4.535,815,3.456,890,3.068,891,5.373,939,3.456,941,3.456,965,3.456,968,4.046,969,4.046,970,3.456,971,5.924,972,5.308,973,4.046,974,4.046,975,4.046,976,4.046,977,6.289,978,4.046,979,4.046,980,4.046,981,4.046,982,4.046,983,4.046,984,4.046,985,4.046,986,4.046,987,4.046,988,5.924,989,4.046,990,4.046,991,4.046,992,4.046,993,5.308,994,4.046,995,4.046,996,5.924,997,5.308,998,4.046,999,4.046,1000,4.046,1001,4.046,1002,6.53,1003,5.924,1004,4.046,1005,4.046,1006,4.046,1007,4.046,1008,4.046,1009,4.046,1010,4.046,1011,4.046,1012,6.53,1013,4.046,1014,5.308,1015,4.046,1016,5.308,1017,4.046,1018,4.046,1019,4.046,1020,3.456,1021,5.308,1022,4.046,1023,4.046,1024,4.046,1025,4.046]],["title/modules.html",[139,2.049]],["body/modules.html",[25,0.018,78,0.015,79,0.018,80,0.015,138,3.232,139,2.152,187,3.526,197,3.232,198,2.778,206,4.538,336,3.526,341,3.232,596,3.232,600,3.232,970,5.989,1026,7.01,1027,7.259,1028,6.608,1029,6.608]],["title/overview.html",[1030,4.176]],["body/overview.html",[2,1.558,25,0.021,32,1.7,46,0.334,71,2.69,78,0.011,79,0.014,80,0.011,82,2.497,83,1.654,109,1.388,117,2.005,120,2.005,123,2.12,126,2.12,128,2.12,130,2.12,132,2.12,137,1.242,138,3.575,139,1.558,181,1.76,186,2.011,187,4.982,188,2.163,189,2.553,190,2.34,191,2.011,192,3.176,193,3.176,194,3.176,195,3.176,196,3.176,197,3.575,198,3.435,199,3.575,200,3.445,201,2.553,202,2.34,336,4.964,337,3.176,338,3.176,339,3.176,340,3.575,341,3.575,378,1.654,484,2.819,596,4.385,597,3.176,598,3.176,599,3.176,600,3.575,657,2.34,901,3.176,1030,3.176,1031,5.017,1032,5.017]],["title/routes.html",[186,2.645]],["body/routes.html",[25,0.019,78,0.017,79,0.019,80,0.017,186,3.129]],["title/miscellaneous/typealiases.html",[961,1.737,1033,4.304]],["body/miscellaneous/typealiases.html",[1,2.889,6,1.358,7,2.238,8,2.238,9,2.529,10,1.514,11,2.699,12,2.124,13,2.529,14,3.415,22,0.522,24,0.61,25,0.02,34,2.889,37,2.889,40,3.415,78,0.015,79,0.018,80,0.015,961,3.107,1034,5.341,1035,4.563]],["title/miscellaneous/variables.html",[961,1.737,1036,3.677]],["body/miscellaneous/variables.html",[6,1.162,7,0.63,8,0.63,9,0.712,10,0.426,11,0.76,12,1.026,13,0.712,14,1.362,18,1.538,19,1.361,22,0.317,24,0.747,25,0.022,41,1.368,42,1.465,43,0.947,53,2.16,62,1.534,70,0.875,71,2.001,77,2.452,78,0.004,79,0.007,80,0.004,115,0.289,121,0.63,124,1.045,140,1.033,141,2.607,151,1.285,158,1.624,159,1.285,160,2.229,161,1.285,162,0.947,163,1.285,164,1.033,165,2.774,166,1.033,167,1.033,168,1.285,174,0.947,175,1.909,176,1.585,177,2.151,178,1.285,179,2.151,180,2.286,185,1.729,214,2.209,254,2.044,275,1.141,276,1.585,279,1.909,311,2.657,312,2.512,368,2.309,384,2.458,385,0.947,387,1.729,391,1.141,392,1.729,393,2.044,396,1.909,400,1.141,401,2.229,402,2.229,404,2.229,406,1.909,407,1.285,408,2.877,411,2.659,424,1.729,425,2.265,432,1.909,439,1.445,440,1.729,441,1.362,455,1.585,456,1.729,459,1.585,464,0.875,465,1.141,473,2.879,474,2.151,475,2.151,476,2.229,477,1.909,478,1.909,479,3.329,480,1.141,481,2.229,482,1.285,483,3.395,510,1.141,513,1.285,516,1.465,517,1.729,518,1.585,519,1.909,520,3.466,521,1.909,522,1.285,523,1.285,524,1.285,525,2.462,526,2.151,527,1.285,528,1.285,529,1.285,530,1.285,531,1.285,532,3.243,533,2.151,534,1.285,535,2.774,536,1.285,540,1.141,627,1.141,629,1.909,721,1.285,722,1.141,731,0.875,735,1.729,736,1.729,798,1.141,799,2.462,800,0.947,801,2.229,803,1.909,804,1.285,852,1.909,853,1.909,865,1.909,867,1.141,871,1.909,872,1.729,886,1.141,889,1.285,913,1.285,915,1.285,916,4.146,917,1.285,918,2.774,923,2.774,928,1.285,929,2.151,930,1.285,931,1.285,932,2.151,933,1.285,934,1.285,935,1.285,936,2.151,937,2.151,961,0.875,963,3.243,1020,2.151,1035,1.285,1036,1.285,1037,4.57,1038,5.288,1039,4.225,1040,2.517,1041,1.504,1042,1.504,1043,4.852,1044,2.517,1045,4.57,1046,2.517,1047,2.517,1048,2.517,1049,1.504,1050,1.504,1051,1.504,1052,5.46,1053,2.517,1054,4.852,1055,2.517,1056,1.504,1057,2.517,1058,4.57,1059,1.504,1060,3.246,1061,2.517,1062,1.504,1063,1.504,1064,1.504,1065,3.246,1066,2.517,1067,2.517,1068,1.504,1069,1.504,1070,1.504,1071,1.504,1072,1.504,1073,1.504]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":77,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/ConsentsState.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.10.2",{"_index":960,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":954,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":895,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":914,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":894,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":897,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":71,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/ConsentsState.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.10.0",{"_index":958,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":912,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":902,"title":{},"body":{"coverage.html":{}}}],["1/13",{"_index":911,"title":{},"body":{"coverage.html":{}}}],["1/2",{"_index":907,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":906,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":896,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":900,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":925,"title":{},"body":{"coverage.html":{}}}],["1/9",{"_index":909,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":901,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["100",{"_index":324,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/MainAreaComponent.html":{},"coverage.html":{}}}],["1000",{"_index":646,"title":{},"body":{"components/LoaderComponent.html":{}}}],["1000px",{"_index":335,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["11",{"_index":908,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":924,"title":{},"body":{"coverage.html":{}}}],["16px",{"_index":325,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/MainAreaComponent.html":{}}}],["2",{"_index":70,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/ConsentsState.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":955,"title":{},"body":{"dependencies.html":{}}}],["2/3",{"_index":922,"title":{},"body":{"coverage.html":{}}}],["2/4",{"_index":904,"title":{},"body":{"coverage.html":{}}}],["2/7",{"_index":920,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":899,"title":{},"body":{"coverage.html":{}}}],["200px",{"_index":672,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["240px",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["25",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"coverage.html":{}}}],["2500",{"_index":796,"title":{},"body":{"modules/SharedModule.html":{}}}],["25px",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["28",{"_index":919,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":927,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":905,"title":{},"body":{"coverage.html":{}}}],["4.1.0",{"_index":951,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":43,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"miscellaneous/variables.html":{}}}],["50",{"_index":903,"title":{},"body":{"coverage.html":{}}}],["500px",{"_index":552,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["6.5.4",{"_index":956,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":926,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":921,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":910,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1031,"title":{},"body":{"overview.html":{}}}],["80",{"_index":976,"title":{},"body":{"index.html":{}}}],["9",{"_index":1032,"title":{},"body":{"overview.html":{}}}],["9.0.0",{"_index":945,"title":{},"body":{"dependencies.html":{}}}],["9.1.0",{"_index":949,"title":{},"body":{"dependencies.html":{}}}],["9.1.4",{"_index":941,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["9.2.2",{"_index":943,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":978,"title":{},"body":{"index.html":{}}}],["a.active",{"_index":678,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["absolute",{"_index":644,"title":{},"body":{"components/LoaderComponent.html":{}}}],["action",{"_index":475,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"miscellaneous/variables.html":{}}}],["actionreducermap",{"_index":401,"title":{},"body":{"interfaces/CollectedConsentsState.html":{},"interfaces/GiveConsentState.html":{},"interfaces/SharedState.html":{},"miscellaneous/variables.html":{}}}],["actions",{"_index":415,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/UiEffects.html":{},"index.html":{}}}],["activatedroutesnapshot",{"_index":490,"title":{},"body":{"guards/ConsentsResolverService.html":{}}}],["activepagenumber",{"_index":39,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["activepagenumberitem",{"_index":1,"title":{"interfaces/ActivePageNumberItem.html":{}},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["actual_component",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["add",{"_index":75,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["address",{"_index":583,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["ads",{"_index":591,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"pipes/StringifyConsentPipe.html":{}}}],["agree",{"_index":586,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["aliases",{"_index":1034,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["angular",{"_index":142,"title":{},"body":{"modules/AppMockModule.html":{},"index.html":{}}}],["angular/animations",{"_index":940,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":942,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/layout",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"components/MainAreaComponent.html":{}}}],["angular/common",{"_index":148,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules/SharedModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":156,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"injectables/ConsentsService.html":{},"modules/GiveConsentModule.html":{},"interceptors/ShowLoaderInterceptor.html":{}}}],["angular/compiler",{"_index":944,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":28,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":575,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":947,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{}}}],["angular/material/card",{"_index":612,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["angular/material/checkbox",{"_index":615,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["angular/material/icon",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{}}}],["angular/material/input",{"_index":606,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["angular/material/list",{"_index":219,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/paginator",{"_index":358,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["angular/material/progress",{"_index":239,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/radio",{"_index":610,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["angular/material/select",{"_index":608,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["angular/material/sidenav",{"_index":233,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":789,"title":{},"body":{"modules/SharedModule.html":{},"injectables/UiEffects.html":{}}}],["angular/material/table",{"_index":319,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{}}}],["angular/material/toolbar",{"_index":229,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/platform",{"_index":205,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":278,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"guards/ConsentsResolverService.html":{},"modules/GiveConsentRoutingModule.html":{},"dependencies.html":{}}}],["anonymous",{"_index":593,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"pipes/StringifyConsentPipe.html":{}}}],["app",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"index.html":{}}}],["app.component",{"_index":207,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.html",{"_index":95,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":82,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmockmodule",{"_index":138,"title":{"modules/AppMockModule.html":{}},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appmockroutes",{"_index":175,"title":{},"body":{"modules/AppMockModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["appmodule",{"_index":187,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["apppage",{"_index":259,"title":{"classes/AppPage.html":{}},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["approutingmodule",{"_index":197,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["area",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"components/MainAreaComponent.html":{}}}],["area'},{'name",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["area.component",{"_index":225,"title":{},"body":{"modules/AppModule.html":{}}}],["area.component.html",{"_index":650,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["area.component.scss",{"_index":649,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["area.component.ts",{"_index":648,"title":{},"body":{"components/MainAreaComponent.html":{},"coverage.html":{}}}],["area.component.ts:12",{"_index":663,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["area.component.ts:16",{"_index":661,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["area.component.ts:20",{"_index":655,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["area/main",{"_index":224,"title":{},"body":{"modules/AppModule.html":{},"components/MainAreaComponent.html":{},"coverage.html":{}}}],["args",{"_index":828,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["array(4)].map((_",{"_index":159,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/variables.html":{}}}],["artifacts",{"_index":1013,"title":{},"body":{"index.html":{}}}],["atleastonepermissionrequiredvalidator",{"_index":558,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["atleastonpermissionrequired",{"_index":570,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["automatically",{"_index":1008,"title":{},"body":{"index.html":{}}}],["available",{"_index":970,"title":{},"body":{"index.html":{},"modules.html":{}}}],["background",{"_index":674,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["bar",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"components/LoaderComponent.html":{},"modules/SharedModule.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{}}}],["before",{"_index":74,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["beta.29",{"_index":946,"title":{},"body":{"dependencies.html":{}}}],["between",{"_index":783,"title":{},"body":{"modules/SharedModule.html":{}}}],["body",{"_index":76,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["boolean",{"_index":412,"title":{},"body":{"interfaces/Consent.html":{},"components/GiveConsentFormComponent.html":{},"components/PaginationComponent.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{}}}],["bootstrap",{"_index":189,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"overview.html":{}}}],["bottom",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{}}}],["breakpointobserver",{"_index":654,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["breakpoints",{"_index":664,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["browse",{"_index":1027,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"classes/AppPage.html":{},"dependencies.html":{},"modules.html":{}}}],["browser.get(browser.baseurl",{"_index":271,"title":{},"body":{"classes/AppPage.html":{}}}],["browser/animations",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":208,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":1012,"title":{},"body":{"index.html":{}}}],["button",{"_index":21,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["calculate",{"_index":49,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["calculatestartindex",{"_index":682,"title":{},"body":{"injectables/PagesPanelGeneratorService.html":{}}}],["calculatestartindex(totalpages",{"_index":66,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["calculatetotalpagescount",{"_index":525,"title":{},"body":{"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["calculatetotalpagescount(consentsstate",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calculatetotalpagescount(state",{"_index":533,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["callback",{"_index":179,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/variables.html":{}}}],["cannext",{"_index":697,"title":{},"body":{"components/PaginationComponent.html":{}}}],["canprev",{"_index":698,"title":{},"body":{"components/PaginationComponent.html":{}}}],["catcherror",{"_index":434,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{}}}],["catcherror((e",{"_index":450,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["catcherror(error",{"_index":426,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["center",{"_index":55,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/CollectedConsentsComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["central",{"_index":760,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["challenge",{"_index":969,"title":{},"body":{"index.html":{}}}],["change",{"_index":1010,"title":{},"body":{"index.html":{}}}],["changedetection",{"_index":298,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["changedetectionstrategy",{"_index":315,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":299,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["changepagenumber",{"_index":694,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["changepagenumber(pagenumber",{"_index":709,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["changes",{"_index":774,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["check",{"_index":568,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"index.html":{}}}],["chevron_left",{"_index":720,"title":{},"body":{"components/PaginationComponent.html":{}}}],["chevron_right",{"_index":723,"title":{},"body":{"components/PaginationComponent.html":{}}}],["class",{"_index":46,"title":{"classes/AppPage.html":{}},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"coverage.html":{},"overview.html":{}}}],["classes",{"_index":260,"title":{},"body":{"classes/AppPage.html":{}}}],["cli",{"_index":999,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":192,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":195,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":194,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":196,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_collectedconsentsmodule",{"_index":337,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"overview.html":{}}}],["cluster_collectedconsentsmodule_declarations",{"_index":338,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"overview.html":{}}}],["cluster_collectedconsentsmodule_imports",{"_index":339,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"overview.html":{}}}],["cluster_giveconsentmodule",{"_index":597,"title":{},"body":{"modules/GiveConsentModule.html":{},"overview.html":{}}}],["cluster_giveconsentmodule_declarations",{"_index":598,"title":{},"body":{"modules/GiveConsentModule.html":{},"overview.html":{}}}],["cluster_giveconsentmodule_imports",{"_index":599,"title":{},"body":{"modules/GiveConsentModule.html":{},"overview.html":{}}}],["code",{"_index":782,"title":{},"body":{"modules/SharedModule.html":{},"index.html":{}}}],["collected",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["collectedconsents",{"_index":407,"title":{},"body":{"interfaces/CollectedConsentsState.html":{},"miscellaneous/variables.html":{}}}],["collectedconsentscomponent",{"_index":117,"title":{"components/CollectedConsentsComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["collectedconsentsfeaturekey",{"_index":406,"title":{},"body":{"interfaces/CollectedConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["collectedconsentsmodule",{"_index":336,"title":{"modules/CollectedConsentsModule.html":{}},"body":{"modules/CollectedConsentsModule.html":{},"modules.html":{},"overview.html":{}}}],["collectedconsentsroutingmodule",{"_index":341,"title":{"modules/CollectedConsentsRoutingModule.html":{}},"body":{"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["collectedconsentsservice",{"_index":305,"title":{"injectables/CollectedConsentsService.html":{}},"body":{"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"guards/ConsentsResolverService.html":{},"coverage.html":{}}}],["collectedconsentsstate",{"_index":399,"title":{"interfaces/CollectedConsentsState.html":{}},"body":{"interfaces/CollectedConsentsState.html":{},"coverage.html":{}}}],["color",{"_index":679,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["commonmodule",{"_index":147,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules/SharedModule.html":{}}}],["compodoc",{"_index":988,"title":{},"body":{"index.html":{}}}],["component",{"_index":81,"title":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsRoutingModule.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentRoutingModule.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":114,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["components",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"overview.html":{}}}],["components/collected",{"_index":345,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{}}}],["components/give",{"_index":602,"title":{},"body":{"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{}}}],["components/loader/loader.component",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["components/main",{"_index":223,"title":{},"body":{"modules/AppModule.html":{}}}],["consent",{"_index":124,"title":{"interfaces/Consent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"interfaces/Consent.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"pipes/StringifyConsentPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consent'},{'name",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["consent.component",{"_index":603,"title":{},"body":{"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{}}}],["consent.component.html",{"_index":542,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["consent.component.scss",{"_index":541,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["consent.component.ts",{"_index":538,"title":{},"body":{"components/GiveConsentComponent.html":{},"coverage.html":{}}}],["consent.component.ts:14",{"_index":545,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["consent.component.ts:20",{"_index":548,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["consent.id",{"_index":523,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["consent.module').then(m",{"_index":283,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["consent.module.ts",{"_index":601,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["consent.pipe",{"_index":356,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["consent.pipe.ts",{"_index":824,"title":{},"body":{"pipes/StringifyConsentPipe.html":{},"coverage.html":{}}}],["consent.pipe.ts:12",{"_index":830,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["consent/components/give",{"_index":537,"title":{},"body":{"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"coverage.html":{}}}],["consent/give",{"_index":282,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"coverage.html":{}}}],["consent/routing/give",{"_index":624,"title":{},"body":{"modules/GiveConsentRoutingModule.html":{}}}],["consent/services/consents",{"_index":462,"title":{},"body":{"injectables/ConsentsManagementService.html":{},"coverage.html":{}}}],["consent/store/consents",{"_index":440,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{},"interfaces/ConsentsManagementState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consent/store/reducers.ts",{"_index":627,"title":{},"body":{"interfaces/GiveConsentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consent/stringify",{"_index":355,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"pipes/StringifyConsentPipe.html":{},"coverage.html":{}}}],["consents",{"_index":158,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"interfaces/ConsentsManagementState.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"modules/GiveConsentModule.html":{},"interfaces/GiveConsentState.html":{},"components/MainAreaComponent.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consents'},{'name",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["consents.actions",{"_index":433,"title":{},"body":{"injectables/ConsentsEffects.html":{},"interfaces/ConsentsState.html":{}}}],["consents.component",{"_index":346,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{}}}],["consents.component.html",{"_index":301,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["consents.component.scss",{"_index":300,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["consents.component.ts",{"_index":293,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"coverage.html":{}}}],["consents.component.ts:15",{"_index":314,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["consents.component.ts:16",{"_index":306,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["consents.component.ts:21",{"_index":309,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["consents.join",{"_index":838,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["consents.length",{"_index":168,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/variables.html":{}}}],["consents.module').then(m",{"_index":287,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["consents.module.ts",{"_index":342,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["consents.push('be",{"_index":835,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["consents.push('contribute",{"_index":837,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["consents.push('receive",{"_index":833,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["consents.service",{"_index":317,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"guards/ConsentsResolverService.html":{}}}],["consents.service.ts",{"_index":380,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"coverage.html":{}}}],["consents.service.ts:13",{"_index":389,"title":{},"body":{"injectables/CollectedConsentsService.html":{}}}],["consents.service.ts:22",{"_index":390,"title":{},"body":{"injectables/CollectedConsentsService.html":{}}}],["consents/collected",{"_index":286,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"guards/ConsentsResolverService.html":{},"coverage.html":{}}}],["consents/components/collected",{"_index":7,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/CollectedConsentsComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["consents/consents.reducer",{"_index":405,"title":{},"body":{"interfaces/CollectedConsentsState.html":{}}}],["consents/pagination",{"_index":8,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"modules/CollectedConsentsModule.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["consents/pipes/stringify",{"_index":823,"title":{},"body":{"pipes/StringifyConsentPipe.html":{},"coverage.html":{}}}],["consents/routing/collected",{"_index":371,"title":{},"body":{"modules/CollectedConsentsRoutingModule.html":{}}}],["consents/routing/resolvers/consents",{"_index":486,"title":{},"body":{"guards/ConsentsResolverService.html":{},"coverage.html":{}}}],["consents/services/collected",{"_index":379,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"coverage.html":{}}}],["consents/services/table",{"_index":839,"title":{},"body":{"injectables/TableHandlerService.html":{},"coverage.html":{}}}],["consents/store/consents/consents.actions.ts",{"_index":913,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["consents/store/consents/consents.effects.ts",{"_index":413,"title":{},"body":{"injectables/ConsentsEffects.html":{},"coverage.html":{}}}],["consents/store/consents/consents.effects.ts:10",{"_index":417,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["consents/store/consents/consents.effects.ts:17",{"_index":429,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["consents/store/consents/consents.reducer.ts",{"_index":510,"title":{},"body":{"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consents/store/consents/consents.selectors.ts",{"_index":915,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["consents/store/reducers.ts",{"_index":400,"title":{},"body":{"interfaces/CollectedConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consents/store/selector.ts",{"_index":917,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["consents_url",{"_index":500,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["consentsadapter",{"_index":521,"title":{},"body":{"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consentsadapter.getinitialstate",{"_index":524,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["consentsadapter.getselectors",{"_index":1064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["consentsadapter.setall(payload",{"_index":530,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["consentseffects",{"_index":350,"title":{"injectables/ConsentsEffects.html":{}},"body":{"modules/CollectedConsentsModule.html":{},"injectables/ConsentsEffects.html":{},"coverage.html":{}}}],["consentsfeaturekey",{"_index":519,"title":{},"body":{"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consentsmanagement",{"_index":478,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"interfaces/GiveConsentState.html":{},"miscellaneous/variables.html":{}}}],["consentsmanagementeffects",{"_index":438,"title":{"injectables/ConsentsManagementEffects.html":{}},"body":{"injectables/ConsentsManagementEffects.html":{},"modules/GiveConsentModule.html":{},"coverage.html":{}}}],["consentsmanagementreducer",{"_index":481,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"interfaces/GiveConsentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consentsmanagementservice",{"_index":461,"title":{"injectables/ConsentsManagementService.html":{}},"body":{"injectables/ConsentsManagementService.html":{},"components/GiveConsentComponent.html":{},"coverage.html":{}}}],["consentsmanagementstate",{"_index":464,"title":{"interfaces/ConsentsManagementState.html":{}},"body":{"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"interfaces/GiveConsentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consentsreducer",{"_index":404,"title":{},"body":{"interfaces/CollectedConsentsState.html":{},"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consentsresolverservice",{"_index":372,"title":{"guards/ConsentsResolverService.html":{}},"body":{"modules/CollectedConsentsRoutingModule.html":{},"guards/ConsentsResolverService.html":{},"coverage.html":{}}}],["consentsservice",{"_index":416,"title":{"injectables/ConsentsService.html":{}},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsService.html":{},"coverage.html":{}}}],["consentsstate",{"_index":384,"title":{"interfaces/ConsentsState.html":{}},"body":{"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["consentsstate.currentpage",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["const",{"_index":41,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"modules/AppMockModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/ConsentsManagementState.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"interfaces/SharedState.html":{},"pipes/StringifyConsentPipe.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["constructor",{"_index":48,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"interceptors/ShowLoaderInterceptor.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{}}}],["constructor(actions",{"_index":414,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/UiEffects.html":{}}}],["constructor(breakpointobserver",{"_index":653,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["constructor(collectedconsentsservice",{"_index":304,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"guards/ConsentsResolverService.html":{}}}],["constructor(fb",{"_index":561,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["constructor(giveconsentservice",{"_index":544,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["constructor(httpclient",{"_index":501,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["constructor(loadingservice",{"_index":634,"title":{},"body":{"components/LoaderComponent.html":{}}}],["constructor(pagespanelgeneratorservice",{"_index":766,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["constructor(private",{"_index":665,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["constructor(store",{"_index":388,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{}}}],["constructor(tablehandlerservice",{"_index":737,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["constructor(uiservice",{"_index":810,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["container",{"_index":671,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["content",{"_index":273,"title":{},"body":{"classes/AppPage.html":{},"components/CollectedConsentsComponent.html":{},"components/MainAreaComponent.html":{}}}],["context",{"_index":936,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["contribute",{"_index":592,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["controller",{"_index":725,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller'},{'name",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["controller.component",{"_index":360,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["controller.component.html",{"_index":734,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller.component.scss",{"_index":733,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller.component.ts",{"_index":724,"title":{},"body":{"components/PaginationControllerComponent.html":{},"coverage.html":{}}}],["controller.component.ts:14",{"_index":751,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller.component.ts:15",{"_index":746,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller.component.ts:16",{"_index":748,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller.component.ts:17",{"_index":739,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller.component.ts:23",{"_index":741,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller.component.ts:26",{"_index":740,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller.component.ts:30",{"_index":742,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller.component.ts:34",{"_index":744,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["controller/pagination",{"_index":359,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"components/PaginationControllerComponent.html":{},"coverage.html":{}}}],["controller/pagination/pagination",{"_index":9,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"modules/CollectedConsentsModule.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["controller/pagination/pagination.component",{"_index":361,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["controller/pagination/pagination.component.ts",{"_index":690,"title":{},"body":{"components/PaginationComponent.html":{},"coverage.html":{}}}],["controller/pagination/pagination.component.ts:23",{"_index":705,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:24",{"_index":706,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:25",{"_index":703,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:26",{"_index":704,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:28",{"_index":707,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:29",{"_index":708,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:30",{"_index":702,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:34",{"_index":712,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:37",{"_index":710,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:41",{"_index":711,"title":{},"body":{"components/PaginationComponent.html":{}}}],["controller/pagination/pagination.component.ts:45",{"_index":713,"title":{},"body":{"components/PaginationComponent.html":{}}}],["count",{"_index":60,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["coverage",{"_index":890,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createaction",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createconsent",{"_index":180,"title":{},"body":{"modules/AppMockModule.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"injectables/ConsentsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["createconsent(consent",{"_index":504,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["createconsent(req",{"_index":170,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/functions.html":{}}}],["createconsentfail",{"_index":456,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{},"interfaces/ConsentsManagementState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createconsentfeaturekey",{"_index":477,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["created",{"_index":344,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"injectables/ConsentsManagementEffects.html":{},"modules/GiveConsentModule.html":{}}}],["createeffect",{"_index":418,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/UiEffects.html":{}}}],["createentityadapter",{"_index":513,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["createfeatureselector(collectedconsentsfeaturekey",{"_index":1068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createfeatureselector(sharedfeaturekey",{"_index":1073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createreducer",{"_index":476,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"interfaces/ConsentsState.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["createselector",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectshared",{"_index":1071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["createselector(selectuistate",{"_index":1069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["creating",{"_index":455,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"miscellaneous/variables.html":{}}}],["current",{"_index":61,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["currentindex",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["currentpage",{"_index":53,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/ConsentsState.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"injectables/TableHandlerService.html":{},"miscellaneous/variables.html":{}}}],["data",{"_index":171,"title":{},"body":{"modules/AppMockModule.html":{}}}],["declarations",{"_index":181,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["default",{"_index":311,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsService.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"miscellaneous/variables.html":{}}}],["defaultroute",{"_index":279,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":265,"title":{},"body":{"classes/AppPage.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{}}}],["dependencies",{"_index":188,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deployed",{"_index":985,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":994,"title":{},"body":{"index.html":{}}}],["description",{"_index":15,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"modules/AppMockModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/Consent.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"components/LoaderComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{}}}],["dev",{"_index":1005,"title":{},"body":{"index.html":{}}}],["development",{"_index":1001,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":213,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["didomi",{"_index":668,"title":{},"body":{"components/MainAreaComponent.html":{},"index.html":{}}}],["direction",{"_index":330,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["directive",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["directives",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["directory",{"_index":1016,"title":{},"body":{"index.html":{}}}],["dispatch",{"_index":864,"title":{},"body":{"injectables/UiEffects.html":{}}}],["display",{"_index":328,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["displayedcolumns",{"_index":302,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["displaying",{"_index":343,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"components/PaginationComponent.html":{}}}],["dist",{"_index":1015,"title":{},"body":{"index.html":{}}}],["dist/docs",{"_index":1025,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":891,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["doesn't",{"_index":730,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["dom",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["dots",{"_index":30,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["dumb",{"_index":555,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"components/PaginationComponent.html":{}}}],["duration",{"_index":795,"title":{},"body":{"modules/SharedModule.html":{}}}],["dynamic",{"_index":948,"title":{},"body":{"dependencies.html":{}}}],["e.message",{"_index":452,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["e2e/src/app.po.ts",{"_index":261,"title":{},"body":{"classes/AppPage.html":{},"coverage.html":{}}}],["e2e/src/app.po.ts:4",{"_index":269,"title":{},"body":{"classes/AppPage.html":{}}}],["e2e/src/app.po.ts:8",{"_index":266,"title":{},"body":{"classes/AppPage.html":{}}}],["effects",{"_index":443,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["effectsmodule",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"modules/SharedModule.html":{}}}],["effectsmodule.forfeature([consentseffects",{"_index":370,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["effectsmodule.forfeature([consentsmanagementeffects",{"_index":623,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["effectsmodule.forfeature([uieffects",{"_index":793,"title":{},"body":{"modules/SharedModule.html":{}}}],["effectsmodule.forroot",{"_index":255,"title":{},"body":{"modules/AppModule.html":{}}}],["effortlessly",{"_index":984,"title":{},"body":{"index.html":{}}}],["element",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["element(by.css('app",{"_index":272,"title":{},"body":{"classes/AppPage.html":{}}}],["element.email",{"_index":321,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["element.name",{"_index":320,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["email",{"_index":162,"title":{},"body":{"modules/AppMockModule.html":{},"components/CollectedConsentsComponent.html":{},"interfaces/Consent.html":{},"components/GiveConsentFormComponent.html":{},"miscellaneous/variables.html":{}}}],["enabled",{"_index":184,"title":{},"body":{"modules/AppMockModule.html":{}}}],["end",{"_index":981,"title":{},"body":{"index.html":{}}}],["entity",{"_index":540,"title":{},"body":{"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"miscellaneous/variables.html":{}}}],["entityadapter",{"_index":514,"title":{},"body":{"interfaces/ConsentsState.html":{}}}],["entitystate",{"_index":512,"title":{},"body":{"interfaces/ConsentsState.html":{}}}],["environment",{"_index":214,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/GiveConsentState.html":{},"interfaces/SharedState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.production",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/GiveConsentState.html":{},"interfaces/SharedState.html":{},"miscellaneous/variables.html":{}}}],["environments/environment",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["error",{"_index":474,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"miscellaneous/variables.html":{}}}],["error.message",{"_index":428,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["eventemitter",{"_index":565,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["execute",{"_index":1022,"title":{},"body":{"index.html":{}}}],["export",{"_index":33,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{}}}],["exports",{"_index":191,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"overview.html":{}}}],["extends",{"_index":511,"title":{},"body":{"interfaces/ConsentsState.html":{}}}],["fail",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["failure",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["faker",{"_index":157,"title":{},"body":{"modules/AppMockModule.html":{},"dependencies.html":{}}}],["faker.internet.email",{"_index":163,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/variables.html":{}}}],["faker.name.findname",{"_index":161,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/variables.html":{}}}],["faker.random.boolean",{"_index":165,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/variables.html":{}}}],["false",{"_index":865,"title":{},"body":{"injectables/UiEffects.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["fb",{"_index":564,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["fb.group",{"_index":577,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["features",{"_index":973,"title":{},"body":{"index.html":{}}}],["field",{"_index":887,"title":{},"body":{"interfaces/UiState.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"coverage.html":{}}}],["files",{"_index":1011,"title":{},"body":{"index.html":{}}}],["finalize",{"_index":818,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["flag",{"_index":1019,"title":{},"body":{"index.html":{}}}],["flex",{"_index":329,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["flexlayoutmodule",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["flexmodule",{"_index":362,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{}}}],["form",{"_index":539,"title":{},"body":{"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{}}}],["form'},{'name",{"_index":125,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["form.component",{"_index":617,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["form.component.html",{"_index":557,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["form.component.scss",{"_index":556,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["form.component.ts",{"_index":554,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:15",{"_index":566,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["form.component.ts:17",{"_index":563,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["form.component.ts:35",{"_index":567,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["form.component.ts:44",{"_index":571,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["form.component.ts:47",{"_index":572,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["form/give",{"_index":553,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"coverage.html":{}}}],["format",{"_index":585,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["formbuilder",{"_index":562,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["formgroup",{"_index":569,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["formgroup.value",{"_index":580,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["fromcollectedconsents",{"_index":348,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["fromcollectedconsents.collectedconsentsfeaturekey",{"_index":366,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["fromcollectedconsents.metareducers",{"_index":369,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["fromcollectedconsents.reducers",{"_index":367,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["fromgiveconsent",{"_index":618,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["fromgiveconsent.metareducers",{"_index":622,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["fromgiveconsent.reducers",{"_index":621,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["fromshared",{"_index":784,"title":{},"body":{"modules/SharedModule.html":{}}}],["fromshared.metareducers",{"_index":792,"title":{},"body":{"modules/SharedModule.html":{}}}],["fromshared.reducers",{"_index":791,"title":{},"body":{"modules/SharedModule.html":{}}}],["front",{"_index":980,"title":{},"body":{"index.html":{}}}],["full",{"_index":291,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentRoutingModule.html":{}}}],["function",{"_index":169,"title":{},"body":{"modules/AppMockModule.html":{},"coverage.html":{}}}],["functions",{"_index":962,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gateway",{"_index":498,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["generate",{"_index":683,"title":{},"body":{"injectables/PagesPanelGeneratorService.html":{},"index.html":{}}}],["generate(totalpages",{"_index":686,"title":{},"body":{"injectables/PagesPanelGeneratorService.html":{}}}],["generated",{"_index":998,"title":{},"body":{"index.html":{}}}],["generator.service",{"_index":716,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["generator.service.ts",{"_index":14,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["generator.service.ts:33",{"_index":684,"title":{},"body":{"injectables/PagesPanelGeneratorService.html":{}}}],["generator.service.ts:45",{"_index":685,"title":{},"body":{"injectables/PagesPanelGeneratorService.html":{}}}],["generator.service.ts:60",{"_index":687,"title":{},"body":{"injectables/PagesPanelGeneratorService.html":{}}}],["generator/pages",{"_index":13,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["getconsents",{"_index":174,"title":{},"body":{"modules/AppMockModule.html":{},"injectables/ConsentsService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["getting",{"_index":966,"title":{"index.html":{}},"body":{}}],["gettitletext",{"_index":263,"title":{},"body":{"classes/AppPage.html":{}}}],["github",{"_index":971,"title":{},"body":{"index.html":{}}}],["give",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"miscellaneous/variables.html":{}}}],["giveconsent",{"_index":465,"title":{},"body":{"injectables/ConsentsManagementService.html":{},"interfaces/GiveConsentState.html":{},"miscellaneous/variables.html":{}}}],["giveconsent(consent",{"_index":467,"title":{},"body":{"injectables/ConsentsManagementService.html":{}}}],["giveconsentcomponent",{"_index":120,"title":{"components/GiveConsentComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["giveconsentfeaturekey",{"_index":629,"title":{},"body":{"interfaces/GiveConsentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["giveconsentformcomponent",{"_index":123,"title":{"components/GiveConsentFormComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["giveconsentmodule",{"_index":596,"title":{"modules/GiveConsentModule.html":{}},"body":{"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["giveconsentroutingmodule",{"_index":600,"title":{"modules/GiveConsentRoutingModule.html":{}},"body":{"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["giveconsentservice",{"_index":546,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["giveconsentstate",{"_index":626,"title":{"interfaces/GiveConsentState.html":{}},"body":{"interfaces/GiveConsentState.html":{},"coverage.html":{}}}],["given",{"_index":322,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["graph",{"_index":1026,"title":{},"body":{"modules.html":{}}}],["green_book",{"_index":992,"title":{},"body":{"index.html":{}}}],["guard",{"_index":484,"title":{"guards/ConsentsResolverService.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guards",{"_index":485,"title":{},"body":{"guards/ConsentsResolverService.html":{}}}],["half",{"_index":68,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["handler.service",{"_index":754,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["handler.service.ts",{"_index":840,"title":{},"body":{"injectables/TableHandlerService.html":{},"coverage.html":{}}}],["handler.service.ts:13",{"_index":851,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["handler.service.ts:14",{"_index":846,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["handler.service.ts:15",{"_index":848,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["handler.service.ts:16",{"_index":841,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["handler.service.ts:22",{"_index":842,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["handler.service.ts:26",{"_index":843,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["handler.service.ts:30",{"_index":844,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["handler/table",{"_index":753,"title":{},"body":{"components/PaginationControllerComponent.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{}}}],["handling",{"_index":454,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["handy",{"_index":987,"title":{},"body":{"index.html":{}}}],["hasnextpage",{"_index":735,"title":{},"body":{"components/PaginationControllerComponent.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hasprevpage",{"_index":736,"title":{},"body":{"components/PaginationControllerComponent.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["height",{"_index":327,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/MainAreaComponent.html":{}}}],["here",{"_index":729,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["hide",{"_index":876,"title":{},"body":{"injectables/UiService.html":{},"interfaces/UiState.html":{}}}],["host",{"_index":326,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["html",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["http",{"_index":144,"title":{},"body":{"modules/AppMockModule.html":{},"index.html":{}}}],["http://localhost:4200",{"_index":1007,"title":{},"body":{"index.html":{}}}],["http_interceptors",{"_index":243,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclient",{"_index":502,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["httpclientmodule",{"_index":616,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["httpevent",{"_index":816,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["httphandler",{"_index":813,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["httpinterceptor",{"_index":817,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["httprequest",{"_index":155,"title":{},"body":{"modules/AppMockModule.html":{},"interceptors/ShowLoaderInterceptor.html":{}}}],["id",{"_index":160,"title":{},"body":{"modules/AppMockModule.html":{},"interfaces/Consent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["identifier",{"_index":892,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":296,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"guards/ConsentsResolverService.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{}}}],["import",{"_index":26,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{}}}],["import('../modules/collected",{"_index":285,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["import('../modules/give",{"_index":281,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["imports",{"_index":182,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules/SharedModule.html":{}}}],["incorrect",{"_index":584,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"interfaces/ActivePageNumberItem.html":{},"modules/AppMockModule.html":{},"classes/AppPage.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{}}}],["inherit",{"_index":675,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["initialstate",{"_index":479,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"interfaces/ConsentsState.html":{},"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["initiate",{"_index":391,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"miscellaneous/variables.html":{}}}],["injectable",{"_index":27,"title":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"injectables/ConsentsService.html":{},"injectables/PagesPanelGeneratorService.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{}},"body":{"interfaces/ActivePageNumberItem.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"interceptors/ShowLoaderInterceptor.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"coverage.html":{}}}],["injectables",{"_index":378,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"injectables/ConsentsService.html":{},"injectables/PagesPanelGeneratorService.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"overview.html":{}}}],["input",{"_index":640,"title":{},"body":{"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["inputs",{"_index":696,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["inside",{"_index":56,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["intercept",{"_index":809,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["intercept(request",{"_index":812,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["interceptor",{"_index":805,"title":{"interceptors/ShowLoaderInterceptor.html":{}},"body":{"coverage.html":{}}}],["interceptors",{"_index":806,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["interface",{"_index":0,"title":{"interfaces/ActivePageNumberItem.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"interfaces/ConsentsManagementState.html":{},"interfaces/ConsentsState.html":{},"interfaces/GiveConsentState.html":{},"interfaces/NumberPageItem.html":{},"interfaces/PlaceholderPageItem.html":{},"interfaces/SharedState.html":{},"interfaces/UiState.html":{}},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"interfaces/ConsentsManagementState.html":{},"interfaces/ConsentsState.html":{},"interfaces/GiveConsentState.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"interfaces/SharedState.html":{},"interfaces/UiState.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"interfaces/ConsentsManagementState.html":{},"interfaces/ConsentsState.html":{},"interfaces/GiveConsentState.html":{},"interfaces/NumberPageItem.html":{},"interfaces/PlaceholderPageItem.html":{},"interfaces/SharedState.html":{},"interfaces/UiState.html":{},"overview.html":{}}}],["intermediate",{"_index":688,"title":{},"body":{"injectables/PagesPanelGeneratorService.html":{}}}],["ishandset",{"_index":651,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["it's",{"_index":759,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{},"index.html":{}}}],["item.number",{"_index":779,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["item.title",{"_index":666,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["jasmine",{"_index":952,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":149,"title":{},"body":{"modules/AppMockModule.html":{}}}],["json(200",{"_index":173,"title":{},"body":{"modules/AppMockModule.html":{}}}],["justify",{"_index":332,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["karma",{"_index":1023,"title":{},"body":{"index.html":{}}}],["key",{"_index":972,"title":{},"body":{"index.html":{}}}],["layout",{"_index":222,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"dependencies.html":{}}}],["layoutmodule",{"_index":226,"title":{},"body":{"modules/AppModule.html":{}}}],["left",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["legend",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"overview.html":{}}}],["level",{"_index":143,"title":{},"body":{"modules/AppMockModule.html":{},"index.html":{}}}],["link",{"_index":31,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"modules/GiveConsentRoutingModule.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["links",{"_index":652,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["list",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{}}}],["literal",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["load",{"_index":1065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loadchildren",{"_index":280,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["loadconsents",{"_index":387,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadconsentsfail",{"_index":432,"title":{},"body":{"injectables/ConsentsEffects.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loadconsentssuccess",{"_index":424,"title":{},"body":{"injectables/ConsentsEffects.html":{},"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loader",{"_index":631,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader'},{'name",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["loader.component.html",{"_index":633,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":632,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.interceptor",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["loader.interceptor.ts",{"_index":808,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{},"coverage.html":{}}}],["loader.interceptor.ts:13",{"_index":811,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["loader.interceptor.ts:19",{"_index":814,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["loader/show",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"interceptors/ShowLoaderInterceptor.html":{},"coverage.html":{}}}],["loadercomponent",{"_index":126,"title":{"components/LoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loading",{"_index":393,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"components/LoaderComponent.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["loadingservice",{"_index":637,"title":{},"body":{"components/LoaderComponent.html":{}}}],["lock",{"_index":979,"title":{},"body":{"index.html":{}}}],["logonly",{"_index":253,"title":{},"body":{"modules/AppModule.html":{}}}],["m.collectedconsentsmodule",{"_index":288,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["m.giveconsentmodule",{"_index":284,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["main",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["mainareacomponent",{"_index":128,"title":{"components/MainAreaComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["management",{"_index":445,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{},"injectables/UiService.html":{}}}],["management.actions",{"_index":457,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{}}}],["management.actions.ts",{"_index":923,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["management.effects",{"_index":619,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["management.effects.ts",{"_index":442,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{},"coverage.html":{}}}],["management.effects.ts:13",{"_index":446,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["management.effects.ts:23",{"_index":453,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["management.reducer",{"_index":628,"title":{},"body":{"interfaces/GiveConsentState.html":{}}}],["management.reducer.ts",{"_index":473,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["management.service",{"_index":550,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["management.service.ts",{"_index":463,"title":{},"body":{"injectables/ConsentsManagementService.html":{},"coverage.html":{}}}],["management.service.ts:12",{"_index":466,"title":{},"body":{"injectables/ConsentsManagementService.html":{}}}],["management.service.ts:23",{"_index":468,"title":{},"body":{"injectables/ConsentsManagementService.html":{}}}],["management/consents",{"_index":441,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"modules/GiveConsentModule.html":{},"interfaces/GiveConsentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["manually",{"_index":990,"title":{},"body":{"index.html":{}}}],["map",{"_index":435,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"components/MainAreaComponent.html":{}}}],["map(consents",{"_index":423,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["map(result",{"_index":658,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["mapto",{"_index":458,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["mapto(showsuccessmessage",{"_index":449,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["marbles",{"_index":953,"title":{},"body":{"dependencies.html":{}}}],["margin",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{}}}],["mat",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationControllerComponent.html":{}}}],["mat_snack_bar_default_options",{"_index":787,"title":{},"body":{"modules/SharedModule.html":{}}}],["matbuttonmodule",{"_index":230,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{}}}],["matcardmodule",{"_index":611,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["matcheckboxmodule",{"_index":614,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["matching",{"_index":79,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor(numberofentities",{"_index":528,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["math.floor(panellength",{"_index":69,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["maticonmodule",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{}}}],["matinputmodule",{"_index":605,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["matlistmodule",{"_index":218,"title":{},"body":{"modules/AppModule.html":{}}}],["matpaginatormodule",{"_index":357,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["matprogressbarmodule",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["matradiomodule",{"_index":609,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["matselectmodule",{"_index":607,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["matsidenavmodule",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":859,"title":{},"body":{"injectables/UiEffects.html":{}}}],["matsnackbarmodule",{"_index":788,"title":{},"body":{"modules/SharedModule.html":{}}}],["mattabledatasource",{"_index":318,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["mattablemodule",{"_index":353,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["mattoolbarmodule",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["maxage",{"_index":251,"title":{},"body":{"modules/AppModule.html":{}}}],["menu",{"_index":667,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["message",{"_index":867,"title":{},"body":{"injectables/UiEffects.html":{},"injectables/UiService.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"pipes/StringifyConsentPipe.html":{}}}],["metareducer",{"_index":402,"title":{},"body":{"interfaces/CollectedConsentsState.html":{},"interfaces/GiveConsentState.html":{},"interfaces/SharedState.html":{},"miscellaneous/variables.html":{}}}],["metareducers",{"_index":368,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"interfaces/CollectedConsentsState.html":{},"modules/GiveConsentModule.html":{},"interfaces/GiveConsentState.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["method",{"_index":177,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/variables.html":{}}}],["methods",{"_index":262,"title":{},"body":{"classes/AppPage.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{}}}],["min",{"_index":334,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["miscellaneous",{"_index":961,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mock",{"_index":145,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["mock.module",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["mock.module.ts",{"_index":141,"title":{},"body":{"modules/AppMockModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mock/app",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["mocks",{"_index":982,"title":{},"body":{"index.html":{}}}],["model",{"_index":410,"title":{},"body":{"interfaces/Consent.html":{}}}],["models/consent",{"_index":507,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["module",{"_index":137,"title":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules/SharedModule.html":{}},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["modules",{"_index":139,"title":{"modules.html":{}},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/shared/models/consent",{"_index":154,"title":{},"body":{"modules/AppMockModule.html":{}}}],["modules/shared/services/ui/ui.service",{"_index":641,"title":{},"body":{"components/LoaderComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{}}}],["modules/shared/shared.module",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["multi",{"_index":258,"title":{},"body":{"modules/AppModule.html":{}}}],["name",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"modules/AppMockModule.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["nav",{"_index":102,"title":{},"body":{"components/AppComponent.html":{}}}],["navigate",{"_index":1006,"title":{},"body":{"index.html":{}}}],["navigateto",{"_index":264,"title":{},"body":{"classes/AppPage.html":{}}}],["new",{"_index":469,"title":{},"body":{"injectables/ConsentsManagementService.html":{},"components/GiveConsentFormComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{}}}],["newsletter",{"_index":588,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"pipes/StringifyConsentPipe.html":{}}}],["next",{"_index":722,"title":{},"body":{"components/PaginationComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"miscellaneous/variables.html":{}}}],["next.handle(request).pipe(finalize",{"_index":820,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["nextclicked",{"_index":699,"title":{},"body":{"components/PaginationComponent.html":{}}}],["nextpage",{"_index":516,"title":{},"body":{"interfaces/ConsentsState.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":1003,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":146,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"modules/SharedModule.html":{}}}],["ngonchanges",{"_index":765,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["ngonchanges(changes",{"_index":772,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["ngoninit",{"_index":303,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["ngrx/effects",{"_index":217,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"modules/GiveConsentModule.html":{},"modules/SharedModule.html":{},"injectables/UiEffects.html":{},"dependencies.html":{}}}],["ngrx/entity",{"_index":515,"title":{},"body":{"interfaces/ConsentsState.html":{},"dependencies.html":{}}}],["ngrx/schematics",{"_index":950,"title":{},"body":{"dependencies.html":{}}}],["ngrx/store",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"interfaces/ConsentsState.html":{},"modules/GiveConsentModule.html":{},"interfaces/GiveConsentState.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"dependencies.html":{}}}],["ngx",{"_index":152,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["ngxmockservermodule",{"_index":150,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{}}}],["ngxmockservermodule.forroot",{"_index":183,"title":{},"body":{"modules/AppMockModule.html":{}}}],["non",{"_index":36,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["npm",{"_index":1024,"title":{},"body":{"index.html":{}}}],["null",{"_index":480,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"components/GiveConsentFormComponent.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":19,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/Consent.html":{},"interfaces/ConsentsState.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"injectables/TableHandlerService.html":{},"miscellaneous/variables.html":{}}}],["numberofentities",{"_index":526,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["numberpageitem",{"_index":37,"title":{"interfaces/NumberPageItem.html":{}},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["numbers",{"_index":732,"title":{},"body":{"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["object",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["object.values(state.entities).length",{"_index":527,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["observable",{"_index":494,"title":{},"body":{"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/MainAreaComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{}}}],["of(createconsentfail",{"_index":451,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["of(loadconsentsfail",{"_index":427,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["of(undefined",{"_index":496,"title":{},"body":{"guards/ConsentsResolverService.html":{}}}],["oftype",{"_index":430,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/UiEffects.html":{}}}],["oftype(createconsent.type",{"_index":447,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["oftype(loadconsents.type",{"_index":420,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["oftype(showsuccessmessage.type",{"_index":861,"title":{},"body":{"injectables/UiEffects.html":{}}}],["on(createconsentfail",{"_index":482,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"miscellaneous/variables.html":{}}}],["on(loadconsentssuccess",{"_index":529,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["on(nextpage",{"_index":531,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["on(previouspage",{"_index":534,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["on(setloading",{"_index":889,"title":{},"body":{"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["on(setpage",{"_index":536,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["onchanges",{"_index":714,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["one",{"_index":64,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/GiveConsentFormComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["oninit",{"_index":297,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["online",{"_index":991,"title":{},"body":{"index.html":{}}}],["optional",{"_index":308,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":573,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["outputs",{"_index":559,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["overview",{"_index":1030,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":939,"title":{"dependencies.html":{}},"body":{"index.html":{}}}],["padding",{"_index":681,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["page",{"_index":18,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/LoaderComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["page_size",{"_index":520,"title":{},"body":{"interfaces/ConsentsState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["pagechanged",{"_index":700,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["pageitem",{"_index":40,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"miscellaneous/typealiases.html":{}}}],["pageitems",{"_index":764,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["pagenumber",{"_index":38,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"injectables/TableHandlerService.html":{}}}],["pages",{"_index":10,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["pagespanelgeneratorservice",{"_index":47,"title":{"injectables/PagesPanelGeneratorService.html":{}},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{}}}],["pagination",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["pagination'},{'name",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["pagination.component.html",{"_index":693,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.component.scss",{"_index":692,"title":{},"body":{"components/PaginationComponent.html":{}}}],["paginationcomponent",{"_index":130,"title":{"components/PaginationComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["paginationcontrollercomponent",{"_index":132,"title":{"components/PaginationControllerComponent.html":{}},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{},"overview.html":{}}}],["paginationpagespanelcomponent",{"_index":32,"title":{"components/PaginationPagesPanelComponent.html":{}},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"overview.html":{}}}],["paginator",{"_index":691,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{}}}],["palm_tree",{"_index":986,"title":{},"body":{"index.html":{}}}],["panel",{"_index":12,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["panel.component",{"_index":364,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["panel.component.html",{"_index":763,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["panel.component.scss",{"_index":762,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["panel.component.ts",{"_index":758,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{},"coverage.html":{}}}],["panel.component.ts:23",{"_index":769,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["panel.component.ts:24",{"_index":768,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["panel.component.ts:26",{"_index":770,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["panel.component.ts:28",{"_index":767,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["panel.component.ts:33",{"_index":775,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["panel.component.ts:36",{"_index":773,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["panel.component.ts:40",{"_index":771,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["panel/pages",{"_index":11,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["panel/pagination",{"_index":363,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"components/PaginationPagesPanelComponent.html":{},"coverage.html":{}}}],["panel_length",{"_index":42,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["panellength",{"_index":67,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["param",{"_index":57,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"injectables/UiService.html":{}}}],["parameters",{"_index":307,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"miscellaneous/functions.html":{}}}],["part",{"_index":761,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["path",{"_index":176,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["pathmatch",{"_index":290,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentRoutingModule.html":{}}}],["payload",{"_index":425,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"interfaces/ConsentsState.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["pipe",{"_index":657,"title":{"pipes/StringifyConsentPipe.html":{}},"body":{"components/MainAreaComponent.html":{},"pipes/StringifyConsentPipe.html":{},"coverage.html":{},"overview.html":{}}}],["pipes",{"_index":822,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["pipes/stringify",{"_index":354,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["pipetransform",{"_index":831,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["placeholder",{"_index":35,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["placeholderpageitem",{"_index":34,"title":{"interfaces/PlaceholderPageItem.html":{}},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["position",{"_index":643,"title":{},"body":{"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{}}}],["post",{"_index":178,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/variables.html":{}}}],["preferably",{"_index":54,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["prevclicked",{"_index":701,"title":{},"body":{"components/PaginationComponent.html":{}}}],["previous",{"_index":721,"title":{},"body":{"components/PaginationComponent.html":{},"miscellaneous/variables.html":{}}}],["previouspage",{"_index":517,"title":{},"body":{"interfaces/ConsentsState.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["prevpage",{"_index":695,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"injectables/TableHandlerService.html":{}}}],["primary",{"_index":20,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["private",{"_index":65,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"interceptors/ShowLoaderInterceptor.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{}}}],["process",{"_index":392,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"miscellaneous/variables.html":{}}}],["prod",{"_index":1018,"title":{},"body":{"index.html":{}}}],["production",{"_index":1020,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["progress",{"_index":642,"title":{},"body":{"components/LoaderComponent.html":{}}}],["project",{"_index":997,"title":{},"body":{"index.html":{}}}],["promise",{"_index":268,"title":{},"body":{"classes/AppPage.html":{},"guards/ConsentsResolverService.html":{}}}],["properties",{"_index":23,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"interfaces/ConsentsManagementState.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentFormComponent.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"interfaces/SharedState.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{}}}],["props",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["protractor",{"_index":270,"title":{},"body":{"classes/AppPage.html":{}}}],["provide",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["providedin",{"_index":44,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{}}}],["providers",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"modules/SharedModule.html":{},"overview.html":{}}}],["proxy",{"_index":381,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{}}}],["push",{"_index":995,"title":{},"body":{"index.html":{}}}],["put",{"_index":63,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["range",{"_index":52,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["reactiveformsmodule",{"_index":613,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["readonly",{"_index":386,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsService.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{}}}],["receive",{"_index":587,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["receivenewsletter",{"_index":164,"title":{},"body":{"modules/AppMockModule.html":{},"interfaces/Consent.html":{},"components/GiveConsentFormComponent.html":{},"miscellaneous/variables.html":{}}}],["redirectto",{"_index":289,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reducers",{"_index":408,"title":{},"body":{"interfaces/CollectedConsentsState.html":{},"interfaces/GiveConsentState.html":{},"interfaces/SharedState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["related",{"_index":444,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["reload",{"_index":1009,"title":{},"body":{"index.html":{}}}],["replacement",{"_index":726,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["represent",{"_index":16,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["representation",{"_index":689,"title":{},"body":{"injectables/PagesPanelGeneratorService.html":{},"pipes/StringifyConsentPipe.html":{}}}],["represents",{"_index":888,"title":{},"body":{"interfaces/UiState.html":{}}}],["req",{"_index":964,"title":{},"body":{"miscellaneous/functions.html":{}}}],["req.body",{"_index":172,"title":{},"body":{"modules/AppMockModule.html":{}}}],["request",{"_index":815,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{},"index.html":{}}}],["require",{"_index":937,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["require.context",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":201,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"overview.html":{}}}],["resolve",{"_index":376,"title":{},"body":{"modules/CollectedConsentsRoutingModule.html":{},"guards/ConsentsResolverService.html":{}}}],["resolve(route",{"_index":489,"title":{},"body":{"guards/ConsentsResolverService.html":{}}}],["resolver.service",{"_index":375,"title":{},"body":{"modules/CollectedConsentsRoutingModule.html":{}}}],["resolver.service.ts",{"_index":487,"title":{},"body":{"guards/ConsentsResolverService.html":{},"coverage.html":{}}}],["resolver.service.ts:10",{"_index":488,"title":{},"body":{"guards/ConsentsResolverService.html":{}}}],["resolver.service.ts:16",{"_index":492,"title":{},"body":{"guards/ConsentsResolverService.html":{}}}],["resolver/consents",{"_index":374,"title":{},"body":{"modules/CollectedConsentsRoutingModule.html":{},"guards/ConsentsResolverService.html":{},"coverage.html":{}}}],["resolvers/consents",{"_index":373,"title":{},"body":{"modules/CollectedConsentsRoutingModule.html":{}}}],["result",{"_index":78,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.matches",{"_index":659,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["results",{"_index":80,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":62,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"modules/AppMockModule.html":{},"classes/AppPage.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentFormComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":267,"title":{},"body":{"classes/AppPage.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{}}}],["rgba(0,0,0,.08",{"_index":680,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["right",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["root",{"_index":45,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"classes/AppPage.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{}}}],["root'},{'name",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["route",{"_index":493,"title":{},"body":{"guards/ConsentsResolverService.html":{}}}],["routedeclaration",{"_index":151,"title":{},"body":{"modules/AppMockModule.html":{},"miscellaneous/variables.html":{}}}],["routermodule",{"_index":277,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":377,"title":{},"body":{"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":292,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":491,"title":{},"body":{"guards/ConsentsResolverService.html":{}}}],["routes",{"_index":186,"title":{"routes.html":{}},"body":{"modules/AppMockModule.html":{},"modules/AppRoutingModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentRoutingModule.html":{},"overview.html":{},"routes.html":{}}}],["routing",{"_index":625,"title":{},"body":{"modules/GiveConsentRoutingModule.html":{}}}],["routing.module",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{}}}],["routing.module.ts",{"_index":276,"title":{},"body":{"modules/AppRoutingModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"modules/GiveConsentRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["routing/app",{"_index":241,"title":{},"body":{"modules/AppModule.html":{}}}],["routing/collected",{"_index":347,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["routing/give",{"_index":604,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["row",{"_index":331,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["run",{"_index":1002,"title":{},"body":{"index.html":{}}}],["running",{"_index":993,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":437,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"components/MainAreaComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":436,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"components/MainAreaComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"injectables/UiEffects.html":{}}}],["selectall(consentsstate).slice(currentindex",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["selectcollectedconsents",{"_index":918,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectconsents",{"_index":396,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectconsentsstore",{"_index":916,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectcurrentpage",{"_index":853,"title":{},"body":{"injectables/TableHandlerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selected",{"_index":17,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/GiveConsentFormComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{},"pipes/StringifyConsentPipe.html":{}}}],["selectid",{"_index":522,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["selectloading",{"_index":871,"title":{},"body":{"injectables/UiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["selectshared",{"_index":929,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["selecttotalpages",{"_index":852,"title":{},"body":{"injectables/TableHandlerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["selectuistate",{"_index":932,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["serve",{"_index":1004,"title":{},"body":{"index.html":{}}}],["server",{"_index":153,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"dependencies.html":{},"index.html":{}}}],["service",{"_index":382,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{}}}],["services/collected",{"_index":316,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"guards/ConsentsResolverService.html":{}}}],["services/consents",{"_index":549,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["services/show",{"_index":244,"title":{},"body":{"modules/AppModule.html":{}}}],["services/table",{"_index":752,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["set",{"_index":1067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setloading",{"_index":872,"title":{},"body":{"injectables/UiService.html":{},"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setloading(value",{"_index":874,"title":{},"body":{"injectables/UiService.html":{}}}],["setpage",{"_index":518,"title":{},"body":{"interfaces/ConsentsState.html":{},"components/PaginationControllerComponent.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["setpage(pagenumber",{"_index":743,"title":{},"body":{"components/PaginationControllerComponent.html":{},"injectables/TableHandlerService.html":{}}}],["shared",{"_index":804,"title":{},"body":{"interfaces/SharedState.html":{},"miscellaneous/variables.html":{}}}],["shared/models/consent",{"_index":470,"title":{},"body":{"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"pipes/StringifyConsentPipe.html":{}}}],["shared/services/consents/consents.service",{"_index":431,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{}}}],["shared/shared.module",{"_index":352,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{}}}],["shared/store/ui/ui.actions",{"_index":460,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["sharedfeaturekey",{"_index":803,"title":{},"body":{"interfaces/SharedState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["sharedmodule",{"_index":198,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["sharedstate",{"_index":797,"title":{"interfaces/SharedState.html":{}},"body":{"interfaces/SharedState.html":{},"coverage.html":{}}}],["sharereplay",{"_index":660,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["sharing",{"_index":781,"title":{},"body":{"modules/SharedModule.html":{}}}],["show",{"_index":731,"title":{},"body":{"components/PaginationControllerComponent.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["showing",{"_index":294,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/LoaderComponent.html":{}}}],["showloaderinterceptor",{"_index":199,"title":{"interceptors/ShowLoaderInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/ShowLoaderInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["shown",{"_index":589,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/UiService.html":{}}}],["showsuccessmessage",{"_index":459,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["showsuccessmessage(message",{"_index":878,"title":{},"body":{"injectables/UiService.html":{}}}],["sidenav",{"_index":670,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["simplechanges",{"_index":715,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["slice(startindex",{"_index":72,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["snack",{"_index":868,"title":{},"body":{"injectables/UiEffects.html":{},"injectables/UiService.html":{}}}],["snackbar",{"_index":858,"title":{},"body":{"injectables/UiEffects.html":{}}}],["solution",{"_index":968,"title":{},"body":{"index.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/AppComponent.html":{},"modules/AppMockModule.html":{},"modules/AppModule.html":{},"classes/AppPage.html":{},"modules/AppRoutingModule.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"modules/SharedModule.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"index.html":{}}}],["span')).gettext",{"_index":274,"title":{},"body":{"classes/AppPage.html":{}}}],["spec\\.ts",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app",{"_index":963,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../consents",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../consents.actions.ts",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../consents.reducer.ts",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../consents.selectors.ts",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.prod.ts",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../pages",{"_index":1035,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../reducers.ts",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../selector.ts",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../test.ts",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ui.actions.ts",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ui.reducer.ts",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../ui.selectors.ts",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":88,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.module.ts",{"_index":203,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/loader/loader.component.ts",{"_index":630,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["src/app/components/loader/loader.component.ts:13",{"_index":636,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/loader/loader.component.ts:18",{"_index":638,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/components/main",{"_index":647,"title":{},"body":{"components/MainAreaComponent.html":{},"coverage.html":{}}}],["src/app/mock/app",{"_index":140,"title":{},"body":{"modules/AppMockModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/collected",{"_index":6,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/CollectedConsentsComponent.html":{},"modules/CollectedConsentsModule.html":{},"modules/CollectedConsentsRoutingModule.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"injectables/ConsentsEffects.html":{},"guards/ConsentsResolverService.html":{},"interfaces/ConsentsState.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/give",{"_index":439,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"modules/GiveConsentModule.html":{},"modules/GiveConsentRoutingModule.html":{},"interfaces/GiveConsentState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/shared/models/consent.ts",{"_index":409,"title":{},"body":{"interfaces/Consent.html":{},"coverage.html":{}}}],["src/app/modules/shared/services/consents/consents.service.ts",{"_index":497,"title":{},"body":{"injectables/ConsentsService.html":{},"coverage.html":{}}}],["src/app/modules/shared/services/consents/consents.service.ts:13",{"_index":503,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["src/app/modules/shared/services/consents/consents.service.ts:18",{"_index":505,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["src/app/modules/shared/services/consents/consents.service.ts:22",{"_index":506,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["src/app/modules/shared/services/ui/ui.service.ts",{"_index":870,"title":{},"body":{"injectables/UiService.html":{},"coverage.html":{}}}],["src/app/modules/shared/services/ui/ui.service.ts:13",{"_index":873,"title":{},"body":{"injectables/UiService.html":{}}}],["src/app/modules/shared/services/ui/ui.service.ts:24",{"_index":875,"title":{},"body":{"injectables/UiService.html":{}}}],["src/app/modules/shared/services/ui/ui.service.ts:32",{"_index":879,"title":{},"body":{"injectables/UiService.html":{}}}],["src/app/modules/shared/shared.module.ts",{"_index":780,"title":{},"body":{"modules/SharedModule.html":{}}}],["src/app/modules/shared/store/reducers.ts",{"_index":798,"title":{},"body":{"interfaces/SharedState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/shared/store/selector.ts",{"_index":928,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/shared/store/ui/ui.actions.ts",{"_index":930,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/shared/store/ui/ui.effects.ts",{"_index":857,"title":{},"body":{"injectables/UiEffects.html":{},"coverage.html":{}}}],["src/app/modules/shared/store/ui/ui.effects.ts:10",{"_index":860,"title":{},"body":{"injectables/UiEffects.html":{}}}],["src/app/modules/shared/store/ui/ui.effects.ts:19",{"_index":866,"title":{},"body":{"injectables/UiEffects.html":{}}}],["src/app/modules/shared/store/ui/ui.reducer.ts",{"_index":886,"title":{},"body":{"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/shared/store/ui/ui.selectors.ts",{"_index":931,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/routing/app",{"_index":275,"title":{},"body":{"modules/AppRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/services/show",{"_index":807,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{},"coverage.html":{}}}],["src/environments/environment",{"_index":403,"title":{},"body":{"interfaces/CollectedConsentsState.html":{},"interfaces/GiveConsentState.html":{},"interfaces/SharedState.html":{}}}],["src/environments/environment.prod.ts",{"_index":933,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":934,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/test.ts",{"_index":935,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standard",{"_index":727,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["start",{"_index":50,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["started",{"_index":967,"title":{"index.html":{}},"body":{}}],["startindex",{"_index":73,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["state",{"_index":483,"title":{},"body":{"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"interfaces/ConsentsState.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"miscellaneous/variables.html":{}}}],["state.currentpage",{"_index":535,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["state.loading",{"_index":1070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["state.ui",{"_index":1072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["statements",{"_index":893,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":499,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["statistic",{"_index":595,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"pipes/StringifyConsentPipe.html":{}}}],["sticky",{"_index":677,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["store",{"_index":385,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{},"miscellaneous/variables.html":{}}}],["store.consents",{"_index":1063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store/consents",{"_index":471,"title":{},"body":{"injectables/ConsentsManagementService.html":{},"modules/GiveConsentModule.html":{}}}],["store/consents/consents.actions",{"_index":395,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/TableHandlerService.html":{}}}],["store/consents/consents.effects",{"_index":351,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["store/consents/consents.selectors",{"_index":397,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/TableHandlerService.html":{}}}],["store/reducers",{"_index":349,"title":{},"body":{"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"modules/SharedModule.html":{}}}],["store/ui/ui.actions",{"_index":883,"title":{},"body":{"injectables/UiService.html":{}}}],["store/ui/ui.effects",{"_index":786,"title":{},"body":{"modules/SharedModule.html":{}}}],["store/ui/ui.selectors",{"_index":882,"title":{},"body":{"injectables/UiService.html":{}}}],["stored",{"_index":1014,"title":{},"body":{"index.html":{}}}],["storedevtoolsmodule",{"_index":212,"title":{},"body":{"modules/AppModule.html":{}}}],["storedevtoolsmodule.instrument",{"_index":250,"title":{},"body":{"modules/AppModule.html":{}}}],["storemodule",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"modules/SharedModule.html":{}}}],["storemodule.forfeature",{"_index":365,"title":{},"body":{"modules/CollectedConsentsModule.html":{}}}],["storemodule.forfeature(fromgiveconsent.giveconsentfeaturekey",{"_index":620,"title":{},"body":{"modules/GiveConsentModule.html":{}}}],["storemodule.forfeature(fromshared.sharedfeaturekey",{"_index":790,"title":{},"body":{"modules/SharedModule.html":{}}}],["storemodule.forroot",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["string",{"_index":411,"title":{},"body":{"interfaces/Consent.html":{},"interfaces/ConsentsManagementState.html":{},"injectables/ConsentsService.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/UiService.html":{},"miscellaneous/variables.html":{}}}],["stringifyconsent",{"_index":323,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"pipes/StringifyConsentPipe.html":{}}}],["stringifyconsentpipe",{"_index":340,"title":{"pipes/StringifyConsentPipe.html":{}},"body":{"modules/CollectedConsentsModule.html":{},"pipes/StringifyConsentPipe.html":{},"coverage.html":{},"overview.html":{}}}],["styles",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["styleurls",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["submit",{"_index":543,"title":{},"body":{"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{}}}],["submit(consent",{"_index":547,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["submitted",{"_index":560,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["subrange",{"_index":51,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["success",{"_index":1066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["suitable",{"_index":728,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["support",{"_index":1028,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":1029,"title":{},"body":{"modules.html":{}}}],["switchmap",{"_index":421,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{}}}],["table",{"_index":295,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{}}}],["tablehandlerservice",{"_index":738,"title":{"injectables/TableHandlerService.html":{}},"body":{"components/PaginationControllerComponent.html":{},"injectables/TableHandlerService.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":938,"title":{},"body":{"coverage.html":{}}}],["tap",{"_index":862,"title":{},"body":{"injectables/UiEffects.html":{}}}],["targeted",{"_index":590,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"pipes/StringifyConsentPipe.html":{}}}],["targetedads",{"_index":167,"title":{},"body":{"modules/AppMockModule.html":{},"interfaces/Consent.html":{},"components/GiveConsentFormComponent.html":{},"miscellaneous/variables.html":{}}}],["template",{"_index":84,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["templateurl",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["test",{"_index":669,"title":{},"body":{"components/MainAreaComponent.html":{},"index.html":{}}}],["tested",{"_index":975,"title":{},"body":{"index.html":{}}}],["tests",{"_index":977,"title":{},"body":{"index.html":{}}}],["text",{"_index":825,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["this.actions$.pipe",{"_index":419,"title":{},"body":{"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/UiEffects.html":{}}}],["this.atleastonepermissionrequiredvalidator",{"_index":579,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["this.breakpointobserver.observe(breakpoints.handset",{"_index":656,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["this.collectedconsentsservice.consents",{"_index":313,"title":{},"body":{"components/CollectedConsentsComponent.html":{}}}],["this.collectedconsentsservice.loadconsents",{"_index":495,"title":{},"body":{"guards/ConsentsResolverService.html":{}}}],["this.consentsservice.createconsent(payload).pipe",{"_index":448,"title":{},"body":{"injectables/ConsentsManagementEffects.html":{}}}],["this.consentsservice.getconsents().pipe",{"_index":422,"title":{},"body":{"injectables/ConsentsEffects.html":{}}}],["this.currentpage",{"_index":778,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["this.form",{"_index":576,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["this.form.valid",{"_index":581,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["this.giveconsentservice.giveconsent(consent",{"_index":551,"title":{},"body":{"components/GiveConsentComponent.html":{}}}],["this.httpclient.get(consentsservice.consents_url",{"_index":509,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["this.httpclient.post(consentsservice.consents_url",{"_index":508,"title":{},"body":{"injectables/ConsentsService.html":{}}}],["this.loadingservice.selectloading",{"_index":639,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.nextclicked.emit",{"_index":718,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.pagechanged.emit(pagenumber",{"_index":717,"title":{},"body":{"components/PaginationComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["this.pageitems",{"_index":776,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["this.pagespanelgeneratorservice.generate(this.totalpages",{"_index":777,"title":{},"body":{"components/PaginationPagesPanelComponent.html":{}}}],["this.prevclicked.emit",{"_index":719,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.snackbar.open(payload",{"_index":863,"title":{},"body":{"injectables/UiEffects.html":{}}}],["this.store.dispatch(createconsent",{"_index":472,"title":{},"body":{"injectables/ConsentsManagementService.html":{}}}],["this.store.dispatch(loadconsents",{"_index":398,"title":{},"body":{"injectables/CollectedConsentsService.html":{}}}],["this.store.dispatch(nextpage",{"_index":854,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["this.store.dispatch(previouspage",{"_index":855,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["this.store.dispatch(setloading",{"_index":884,"title":{},"body":{"injectables/UiService.html":{}}}],["this.store.dispatch(setpage",{"_index":856,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["this.store.dispatch(showsuccessmessage",{"_index":885,"title":{},"body":{"injectables/UiService.html":{}}}],["this.store.select(hasnextpage",{"_index":847,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["this.store.select(hasprevpage",{"_index":849,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["this.store.select(selectconsents",{"_index":394,"title":{},"body":{"injectables/CollectedConsentsService.html":{}}}],["this.store.select(selectcurrentpage",{"_index":845,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["this.store.select(selectloading",{"_index":881,"title":{},"body":{"injectables/UiService.html":{}}}],["this.store.select(selecttotalpages",{"_index":850,"title":{},"body":{"injectables/TableHandlerService.html":{}}}],["this.submitted.emit(this.form.value",{"_index":582,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["this.tablehandlerservice.currentpage",{"_index":745,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["this.tablehandlerservice.hasnextpage",{"_index":747,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["this.tablehandlerservice.hasprevpage",{"_index":749,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["this.tablehandlerservice.nextpage",{"_index":755,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["this.tablehandlerservice.prevpage",{"_index":756,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["this.tablehandlerservice.setpage(pagenumber",{"_index":757,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["this.tablehandlerservice.totalpages",{"_index":750,"title":{},"body":{"components/PaginationControllerComponent.html":{}}}],["this.uiservice.setloading(false",{"_index":821,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["this.uiservice.setloading(true",{"_index":819,"title":{},"body":{"interceptors/ShowLoaderInterceptor.html":{}}}],["thoroughly",{"_index":974,"title":{},"body":{"index.html":{}}}],["three",{"_index":29,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["title",{"_index":662,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["toolbar",{"_index":673,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["toolbar.mat",{"_index":676,"title":{},"body":{"components/MainAreaComponent.html":{}}}],["top",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{}}}],["total",{"_index":59,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"interfaces/PlaceholderPageItem.html":{}}}],["totalpages",{"_index":58,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"injectables/TableHandlerService.html":{}}}],["totalpagescount",{"_index":532,"title":{},"body":{"interfaces/ConsentsState.html":{},"miscellaneous/variables.html":{}}}],["trackvisits",{"_index":166,"title":{},"body":{"modules/AppMockModule.html":{},"interfaces/Consent.html":{},"components/GiveConsentFormComponent.html":{},"miscellaneous/variables.html":{}}}],["transform",{"_index":826,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["transform(value",{"_index":827,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["tree",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["true",{"_index":185,"title":{},"body":{"modules/AppMockModule.html":{},"modules/AppModule.html":{},"components/GiveConsentFormComponent.html":{},"miscellaneous/variables.html":{}}}],["tslib",{"_index":957,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":24,"title":{},"body":{"interfaces/ActivePageNumberItem.html":{},"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"interfaces/CollectedConsentsState.html":{},"interfaces/Consent.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsManagementService.html":{},"interfaces/ConsentsManagementState.html":{},"guards/ConsentsResolverService.html":{},"injectables/ConsentsService.html":{},"interfaces/ConsentsState.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"interfaces/GiveConsentState.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"interfaces/NumberPageItem.html":{},"injectables/PagesPanelGeneratorService.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"interfaces/PlaceholderPageItem.html":{},"interfaces/SharedState.html":{},"interceptors/ShowLoaderInterceptor.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":1033,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["ui",{"_index":799,"title":{},"body":{"interfaces/SharedState.html":{},"injectables/UiService.html":{},"miscellaneous/variables.html":{}}}],["ui.actions",{"_index":869,"title":{},"body":{"injectables/UiEffects.html":{},"interfaces/UiState.html":{}}}],["ui/ui.reducer",{"_index":802,"title":{},"body":{"interfaces/SharedState.html":{}}}],["uieffects",{"_index":785,"title":{"injectables/UiEffects.html":{}},"body":{"modules/SharedModule.html":{},"injectables/UiEffects.html":{},"coverage.html":{}}}],["uireducer",{"_index":801,"title":{},"body":{"interfaces/SharedState.html":{},"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["uiservice",{"_index":635,"title":{"injectables/UiService.html":{}},"body":{"components/LoaderComponent.html":{},"interceptors/ShowLoaderInterceptor.html":{},"injectables/UiService.html":{},"coverage.html":{}}}],["uistate",{"_index":800,"title":{"interfaces/UiState.html":{}},"body":{"interfaces/SharedState.html":{},"interfaces/UiState.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":1021,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":829,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["use",{"_index":1017,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":257,"title":{},"body":{"modules/AppModule.html":{}}}],["usevalue",{"_index":794,"title":{},"body":{"modules/SharedModule.html":{}}}],["using",{"_index":983,"title":{},"body":{"index.html":{}}}],["validators",{"_index":574,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["validators.email",{"_index":578,"title":{},"body":{"components/GiveConsentFormComponent.html":{}}}],["value",{"_index":312,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsEffects.html":{},"injectables/ConsentsManagementEffects.html":{},"injectables/ConsentsService.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"pipes/StringifyConsentPipe.html":{},"injectables/TableHandlerService.html":{},"injectables/UiEffects.html":{},"injectables/UiService.html":{},"miscellaneous/variables.html":{}}}],["value.receivenewsletter",{"_index":832,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["value.targetedads",{"_index":834,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["value.trackvisits",{"_index":836,"title":{},"body":{"pipes/StringifyConsentPipe.html":{}}}],["var",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{}}}],["variable",{"_index":898,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1036,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":1000,"title":{},"body":{"index.html":{}}}],["via",{"_index":996,"title":{},"body":{"index.html":{}}}],["visibility",{"_index":877,"title":{},"body":{"injectables/UiService.html":{}}}],["visit",{"_index":594,"title":{},"body":{"components/GiveConsentFormComponent.html":{},"pipes/StringifyConsentPipe.html":{}}}],["void",{"_index":310,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"guards/ConsentsResolverService.html":{},"components/GiveConsentComponent.html":{},"components/GiveConsentFormComponent.html":{},"components/LoaderComponent.html":{},"components/PaginationComponent.html":{},"components/PaginationControllerComponent.html":{},"components/PaginationPagesPanelComponent.html":{},"injectables/TableHandlerService.html":{},"injectables/UiService.html":{}}}],["want",{"_index":989,"title":{},"body":{"index.html":{}}}],["which'll",{"_index":880,"title":{},"body":{"injectables/UiService.html":{}}}],["width",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/MainAreaComponent.html":{}}}],["working",{"_index":383,"title":{},"body":{"injectables/CollectedConsentsService.html":{},"injectables/ConsentsManagementService.html":{},"injectables/TableHandlerService.html":{}}}],["wrapper",{"_index":333,"title":{},"body":{"components/CollectedConsentsComponent.html":{},"components/GiveConsentComponent.html":{},"components/LoaderComponent.html":{}}}],["yes",{"_index":965,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["z",{"_index":645,"title":{},"body":{"components/LoaderComponent.html":{},"components/MainAreaComponent.html":{}}}],["zone.js",{"_index":959,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"modules/CollectedConsentsModule.html":{},"modules/GiveConsentModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/ActivePageNumberItem.html":{"url":"interfaces/ActivePageNumberItem.html","title":"interface - ActivePageNumberItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActivePageNumberItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n        \n\n            \n                Description\n            \n            \n                Represent a selected page number (primary button with number)\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        number\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        number\n                                    \n                                \n                                \n                                    \n                                        number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Represent three dots (...) in {@link PaginationPagesPanelComponent}\n */\nexport interface PlaceholderPageItem {\n  type: 'placeholder';\n}\n\n/**\n * Represent a non-selected page number (button with {@link number})\n */\nexport interface NumberPageItem {\n  type: 'pageNumber';\n  number: number;\n}\n\n/**\n * Represent a selected page number (primary button with {@link number})\n */\nexport interface ActivePageNumberItem {\n  type: 'activePageNumber';\n  number: number;\n}\n\nexport type PageItem = PlaceholderPageItem | NumberPageItem | ActivePageNumberItem;\n\nconst PANEL_LENGTH = 5;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PagesPanelGeneratorService {\n  constructor() {\n  }\n\n  /**\n   * Calculate the start page number of subrange of the pages range so\n   * currentPage will be preferably at the center of this subrange or at least inside of the subrange\n   * @param totalPages - total count of pages\n   * @param currentPage - current page\n   * @return start index (start page) of subrange\n   */\n  // put currentPage in the center of the panel or at least inside of one\n  private calculateStartIndex(totalPages: number, currentPage: number): number {\n    const panelLength = PANEL_LENGTH;\n    const half = Math.floor(panelLength / 2);\n    if (currentPage + half  {\n        const pageNumber = index + 1;\n        if (pageNumber === currentPage + 1) {\n          return { type: 'activePageNumber', number: pageNumber } as ActivePageNumberItem;\n        } else {\n          return { type: 'pageNumber', number: pageNumber } as NumberPageItem;\n        }\n      })\n      .slice(startIndex, startIndex + PANEL_LENGTH)\n    ;\n\n    // If there are pages before startIndex we add ... before \"the body\"\n    if (startIndex !== 0) {\n      result = [{ type: 'placeholder' }, ...result];\n    }\n\n    // If there are pages after startIndex we add ... after \"the body\"\n    if ((startIndex + PANEL_LENGTH + 1) \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                .main-area {\n  margin-top: 25px;\n}\n\nmat-nav-list {\n  margin-right: 25px;\n  margin-left: 25px;\n  margin-bottom: 25px;\n  width: 240px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectedConsentsComponent', 'selector': 'app-collected-consents'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'GiveConsentFormComponent', 'selector': 'app-give-consent-form'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainAreaComponent', 'selector': 'app-main-area'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'PaginationControllerComponent', 'selector': 'app-pagination-controller'},{'name': 'PaginationPagesPanelComponent', 'selector': 'app-pagination-pages-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppMockModule.html":{"url":"modules/AppMockModule.html","title":"module - AppMockModule","body":"\n                   \n\n\n\n\n    Modules\n    AppMockModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/mock/app-mock.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Module for angular-level http mock\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { json, NgxMockServerModule, RouteDeclaration } from 'ngx-mock-server';\nimport { Consent } from '../modules/shared/models/consent';\nimport { HttpRequest } from '@angular/common/http';\nimport * as faker from 'faker';\n\nlet consents: Consent[] = [...Array(4)].map((_, index) => ({\n  id: index,\n  name: faker.name.findName(),\n  email: faker.internet.email(),\n  receiveNewsletter: faker.random.boolean(),\n  trackVisits: faker.random.boolean(),\n  targetedAds: faker.random.boolean()\n}));\n\nlet id = consents.length;\n\nexport function createConsent(req?: HttpRequest) {\n  const data = { ...req.body, id: id++ };\n  consents = [...consents, data];\n  return json(200, data);\n}\n\nexport function getConsents() {\n  return json(200, consents);\n}\n\nconst appMockRoutes: RouteDeclaration[] = [\n  {\n    path: '/consents',\n    method: 'POST',\n    callback: createConsent\n  },\n  {\n    path: '/consents',\n    method: 'GET',\n    callback: getConsents\n  }\n];\n\n/**\n * Module for angular-level http mock\n */\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    NgxMockServerModule.forRoot({ enabled: true, routes: appMockRoutes })\n  ]\n})\nexport class AppMockModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nAppModule -->\n\nLoaderComponent->AppModule\n\n\n\n\n\nMainAreaComponent\n\nMainAreaComponent\n\nAppModule -->\n\nMainAreaComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppMockModule\n\nAppMockModule\n\nAppModule -->\n\nAppMockModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nShowLoaderInterceptor\n\nShowLoaderInterceptor\n\nAppModule -->\n\nShowLoaderInterceptor->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            LoaderComponent\n                        \n                        \n                            MainAreaComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ShowLoaderInterceptor\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppMockModule\n                        \n                        \n                            AppRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { StoreModule } from '@ngrx/store';\nimport { StoreDevtoolsModule } from '@ngrx/store-devtools';\nimport { environment } from '../environments/environment';\nimport { EffectsModule } from '@ngrx/effects';\nimport { MatListModule } from '@angular/material/list';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { MainAreaComponent } from './components/main-area/main-area.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { SharedModule } from './modules/shared/shared.module';\nimport { LoaderComponent } from './components/loader/loader.component';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { AppRoutingModule } from './routing/app-routing.module';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ShowLoaderInterceptor } from './services/show-loader/show-loader.interceptor';\nimport { NgxMockServerModule } from 'ngx-mock-server';\nimport { AppMockModule } from './mock/app-mock.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    MainAreaComponent,\n    LoaderComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    StoreModule.forRoot({}, {}),\n    StoreDevtoolsModule.instrument({ maxAge: 25, logOnly: environment.production }),\n    EffectsModule.forRoot([]),\n    MatListModule,\n    FlexLayoutModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatProgressBarModule,\n    SharedModule,\n    AppMockModule\n  ],\n  providers: [\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ShowLoaderInterceptor,\n      multi: true\n    }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AppPage.html":{"url":"classes/AppPage.html","title":"class - AppPage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AppPage\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            e2e/src/app.po.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getTitleText\n                            \n                            \n                                navigateTo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getTitleText\n                        \n                        \n                    \n                \n            \n            \n                \ngetTitleText()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            navigateTo\n                        \n                        \n                    \n                \n            \n            \n                \nnavigateTo()\n                \n            \n\n\n            \n                \n                    Defined in e2e/src/app.po.ts:4\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { browser, by, element } from 'protractor';\n\nexport class AppPage {\n  navigateTo(): Promise {\n    return browser.get(browser.baseUrl) as Promise;\n  }\n\n  getTitleText(): Promise {\n    return element(by.css('app-root .content span')).getText() as Promise;\n  }\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/routing/app-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst defaultRoute = '/give-consent';\n\nconst routes: Routes = [\n  {\n    path: 'give-consent',\n    loadChildren: () => \"import('../modules/give-consent/give-consent.module').then(m => m.GiveConsentModule)\"\n  },\n  {\n    path: 'consents',\n    loadChildren: () => \"import('../modules/collected-consents/collected-consents.module').then(m => m.CollectedConsentsModule)\"\n  },\n  { path: '', redirectTo: defaultRoute, pathMatch: 'full' },\n  { path: '**', redirectTo: defaultRoute, pathMatch: 'full' }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes),\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CollectedConsentsComponent.html":{"url":"components/CollectedConsentsComponent.html","title":"component - CollectedConsentsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CollectedConsentsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/collected-consents/components/collected-consents/collected-consents.component.ts\n\n\n    \n        Description\n    \n    \n        Root component for showing of consents table\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-collected-consents\n            \n\n            \n                styleUrls\n                ./collected-consents.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./collected-consents.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                consents$\n                            \n                            \n                                displayedColumns\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(collectedConsentsService: CollectedConsentsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/collected-consents/components/collected-consents/collected-consents.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        collectedConsentsService\n                                                  \n                                                        \n                                                                        CollectedConsentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/collected-consents.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            consents$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.collectedConsentsService.consents$\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/collected-consents.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayedColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : ['name', 'email', 'consents']\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/collected-consents.component.ts:16\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { CollectedConsentsService } from '../../services/collected-consents/collected-consents.service';\nimport { MatTableDataSource } from '@angular/material/table';\n\n/**\n * Root component for showing of consents table\n */\n@Component({\n  selector: 'app-collected-consents',\n  templateUrl: './collected-consents.component.html',\n  styleUrls: ['./collected-consents.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class CollectedConsentsComponent implements OnInit {\n  consents$ = this.collectedConsentsService.consents$;\n  displayedColumns = ['name', 'email', 'consents'];\n  constructor(\n    private collectedConsentsService: CollectedConsentsService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n       Name \n       {{element.name}} \n    \n\n    \n       Email \n       {{element.email}} \n    \n\n    \n       Consent given for \n       {{element | stringifyConsent}} \n    \n\n    \n    \n  \n  \n\n\n\n    \n\n    \n                \n                    ./collected-consents.component.scss\n                \n                table {\n  width: 100%;\n  margin-bottom: 16px;\n}\n\n:host {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n}\n\n.consents-table-wrapper {\n  min-width: 1000px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '             Name        {{element.name}}                Email        {{element.email}}                Consent given for        {{element | stringifyConsent}}                 '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectedConsentsComponent', 'selector': 'app-collected-consents'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'GiveConsentFormComponent', 'selector': 'app-give-consent-form'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainAreaComponent', 'selector': 'app-main-area'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'PaginationControllerComponent', 'selector': 'app-pagination-controller'},{'name': 'PaginationPagesPanelComponent', 'selector': 'app-pagination-pages-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CollectedConsentsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CollectedConsentsModule.html":{"url":"modules/CollectedConsentsModule.html","title":"module - CollectedConsentsModule","body":"\n                   \n\n\n\n\n    Modules\n    CollectedConsentsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CollectedConsentsModule\n\n\n\ncluster_CollectedConsentsModule_declarations\n\n\n\ncluster_CollectedConsentsModule_imports\n\n\n\n\nCollectedConsentsComponent\n\nCollectedConsentsComponent\n\n\n\nCollectedConsentsModule\n\nCollectedConsentsModule\n\nCollectedConsentsModule -->\n\nCollectedConsentsComponent->CollectedConsentsModule\n\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\nCollectedConsentsModule -->\n\nPaginationComponent->CollectedConsentsModule\n\n\n\n\n\nPaginationControllerComponent\n\nPaginationControllerComponent\n\nCollectedConsentsModule -->\n\nPaginationControllerComponent->CollectedConsentsModule\n\n\n\n\n\nPaginationPagesPanelComponent\n\nPaginationPagesPanelComponent\n\nCollectedConsentsModule -->\n\nPaginationPagesPanelComponent->CollectedConsentsModule\n\n\n\n\n\nStringifyConsentPipe\n\nStringifyConsentPipe\n\nCollectedConsentsModule -->\n\nStringifyConsentPipe->CollectedConsentsModule\n\n\n\n\n\nCollectedConsentsRoutingModule\n\nCollectedConsentsRoutingModule\n\nCollectedConsentsModule -->\n\nCollectedConsentsRoutingModule->CollectedConsentsModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nCollectedConsentsModule -->\n\nSharedModule->CollectedConsentsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/collected-consents/collected-consents.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Module for displaying list of created consents\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CollectedConsentsComponent\n                        \n                        \n                            PaginationComponent\n                        \n                        \n                            PaginationControllerComponent\n                        \n                        \n                            PaginationPagesPanelComponent\n                        \n                        \n                            StringifyConsentPipe\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CollectedConsentsRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CollectedConsentsComponent } from './components/collected-consents/collected-consents.component';\nimport { CollectedConsentsRoutingModule } from './routing/collected-consents-routing.module';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromCollectedConsents from './store/reducers';\nimport { EffectsModule } from '@ngrx/effects';\nimport { ConsentsEffects } from './store/consents/consents.effects';\nimport { SharedModule } from '../shared/shared.module';\nimport { MatTableModule } from '@angular/material/table';\nimport { StringifyConsentPipe } from './pipes/stringify-consent/stringify-consent.pipe';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { PaginationControllerComponent } from './components/collected-consents/pagination-controller/pagination-controller.component';\nimport { PaginationComponent } from './components/collected-consents/pagination-controller/pagination/pagination.component';\nimport { FlexModule } from '@angular/flex-layout';\nimport { PaginationPagesPanelComponent } from './components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\n\n\n/**\n * Module for displaying list of created consents\n */\n@NgModule({\n  declarations: [\n    CollectedConsentsComponent,\n    StringifyConsentPipe,\n    PaginationControllerComponent,\n    PaginationComponent,\n    PaginationPagesPanelComponent\n  ],\n  imports: [\n    CommonModule,\n    CollectedConsentsRoutingModule,\n    StoreModule.forFeature(\n      fromCollectedConsents.collectedConsentsFeatureKey,\n      fromCollectedConsents.reducers,\n      { metaReducers: fromCollectedConsents.metaReducers }\n    ),\n    EffectsModule.forFeature([ConsentsEffects]),\n    SharedModule,\n    MatTableModule,\n    MatPaginatorModule,\n    FlexModule,\n    MatIconModule,\n    MatButtonModule\n  ]\n})\nexport class CollectedConsentsModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CollectedConsentsRoutingModule.html":{"url":"modules/CollectedConsentsRoutingModule.html","title":"module - CollectedConsentsRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    CollectedConsentsRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/collected-consents/routing/collected-consents-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CollectedConsentsComponent } from '../components/collected-consents/collected-consents.component';\nimport { ConsentsResolverService } from './resolvers/consents-resolver/consents-resolver.service';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: CollectedConsentsComponent,\n    resolve: {\n      consents: ConsentsResolverService\n    }\n  }\n];\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class CollectedConsentsRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CollectedConsentsService.html":{"url":"injectables/CollectedConsentsService.html","title":"injectable - CollectedConsentsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  CollectedConsentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/collected-consents/services/collected-consents/collected-consents.service.ts\n        \n\n            \n                Description\n            \n            \n                Proxy service for working with ConsentsState store\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                consents$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadConsents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/collected-consents/services/collected-consents/collected-consents.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            loadConsents\n                        \n                        \n                    \n                \n            \n            \n                \nloadConsents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/services/collected-consents/collected-consents.service.ts:22\n                \n            \n\n\n            \n                \n                    Initiate process of loading of consents\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            consents$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.store.select(selectConsents)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/services/collected-consents/collected-consents.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { loadConsents} from '../../store/consents/consents.actions';\nimport { selectConsents} from '../../store/consents/consents.selectors';\n\n/**\n * Proxy service for working with {@link ConsentsState} store\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class CollectedConsentsService {\n  readonly consents$ = this.store.select(selectConsents);\n\n  constructor(\n    private store: Store\n  ) { }\n\n  /**\n   * Initiate process of loading of consents\n   */\n  loadConsents() {\n    this.store.dispatch(loadConsents());\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CollectedConsentsState.html":{"url":"interfaces/CollectedConsentsState.html","title":"interface - CollectedConsentsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CollectedConsentsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/collected-consents/store/reducers.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        consents\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        consents\n                                    \n                                \n                                \n                                    \n                                        consents:         ConsentsState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConsentsState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ActionReducerMap,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from 'src/environments/environment';\nimport { consentsReducer, ConsentsState } from './consents/consents.reducer';\n\nexport const collectedConsentsFeatureKey = 'collectedConsents';\n\nexport interface CollectedConsentsState {\n  consents: ConsentsState;\n}\n\nexport const reducers: ActionReducerMap = {\n  consents: consentsReducer\n};\n\n\nexport const metaReducers: MetaReducer[] = !environment.production ? [] : [];\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Consent.html":{"url":"interfaces/Consent.html","title":"interface - Consent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Consent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/shared/models/consent.ts\n        \n\n            \n                Description\n            \n            \n                Consent model\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        email\n                                \n                                \n                                            Optional\n                                        id\n                                \n                                \n                                            Optional\n                                        name\n                                \n                                \n                                            Optional\n                                        receiveNewsletter\n                                \n                                \n                                            Optional\n                                        targetedAds\n                                \n                                \n                                            Optional\n                                        trackVisits\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        receiveNewsletter\n                                    \n                                \n                                \n                                    \n                                        receiveNewsletter:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        targetedAds\n                                    \n                                \n                                \n                                    \n                                        targetedAds:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        trackVisits\n                                    \n                                \n                                \n                                    \n                                        trackVisits:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface Consent {\n  id?: number;\n  name?: string;\n  email?: string;\n  receiveNewsletter?: boolean;\n  targetedAds?: boolean;\n  trackVisits?: boolean;\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsentsEffects.html":{"url":"injectables/ConsentsEffects.html","title":"injectable - ConsentsEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsentsEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/collected-consents/store/consents/consents.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loadConsents$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, consentsService: ConsentsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/collected-consents/store/consents/consents.effects.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        consentsService\n                                                  \n                                                        \n                                                                        ConsentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadConsents$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEffect(() => {\n    return this.actions$.pipe(\n      ofType(loadConsents.type),\n      switchMap(() => {\n        return this.consentsService.getConsents().pipe(\n          map(consents => loadConsentsSuccess({ payload: consents })),\n          catchError(error => of(loadConsentsFail({ payload: error.message })))\n        );\n      })\n    );\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/store/consents/consents.effects.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { ConsentsService } from '../../../shared/services/consents/consents.service';\nimport { loadConsents, loadConsentsFail, loadConsentsSuccess } from './consents.actions';\nimport { catchError, map, switchMap } from 'rxjs/operators';\nimport { of } from 'rxjs';\n\n\n@Injectable()\nexport class ConsentsEffects {\n  constructor(\n    private actions$: Actions,\n    private consentsService: ConsentsService\n  ) {\n  }\n\n  loadConsents$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(loadConsents.type),\n      switchMap(() => {\n        return this.consentsService.getConsents().pipe(\n          map(consents => loadConsentsSuccess({ payload: consents })),\n          catchError(error => of(loadConsentsFail({ payload: error.message })))\n        );\n      })\n    );\n  });\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsentsManagementEffects.html":{"url":"injectables/ConsentsManagementEffects.html","title":"injectable - ConsentsManagementEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsentsManagementEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/give-consent/store/consents-management/consents-management.effects.ts\n        \n\n            \n                Description\n            \n            \n                Effects related to management of consents\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createConsent$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, consentsService: ConsentsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/give-consent/store/consents-management/consents-management.effects.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        consentsService\n                                                  \n                                                        \n                                                                        ConsentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createConsent$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEffect(() => {\n    return this.actions$.pipe(\n      ofType(createConsent.type),\n      switchMap(({ payload }) => {\n        return this.consentsService.createConsent(payload).pipe(\n          mapTo(showSuccessMessage({ payload: 'Consent is created!' })),\n          catchError((e) => of(createConsentFail({ payload: e.message })))\n        );\n      })\n    );\n  })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/give-consent/store/consents-management/consents-management.effects.ts:23\n                            \n                        \n\n                \n                    \n                        Handling of creating consent process\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { createConsent, createConsentFail } from './consents-management.actions';\nimport { catchError, map, mapTo, switchMap } from 'rxjs/operators';\nimport { ConsentsService } from '../../../shared/services/consents/consents.service';\nimport { showSuccessMessage } from '../../../shared/store/ui/ui.actions';\nimport { of } from 'rxjs';\n\n/**\n * Effects related to management of consents\n */\n@Injectable()\nexport class ConsentsManagementEffects {\n  constructor(\n    private actions$: Actions,\n    private consentsService: ConsentsService\n  ) {\n  }\n\n  /**\n   * Handling of creating consent process\n   */\n  createConsent$ = createEffect(() => {\n    return this.actions$.pipe(\n      ofType(createConsent.type),\n      switchMap(({ payload }) => {\n        return this.consentsService.createConsent(payload).pipe(\n          mapTo(showSuccessMessage({ payload: 'Consent is created!' })),\n          catchError((e) => of(createConsentFail({ payload: e.message })))\n        );\n      })\n    );\n  });\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsentsManagementService.html":{"url":"injectables/ConsentsManagementService.html","title":"injectable - ConsentsManagementService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsentsManagementService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/give-consent/services/consents-management.service.ts\n        \n\n            \n                Description\n            \n            \n                Proxy service for working with ConsentsManagementState store\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                giveConsent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/give-consent/services/consents-management.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            giveConsent\n                        \n                        \n                    \n                \n            \n            \n                \ngiveConsent(consent: Consent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/give-consent/services/consents-management.service.ts:23\n                \n            \n\n\n            \n                \n                    Initiate process of creating a new consent\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    consent\n                                    \n                                                Consent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nNew consent\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Consent } from '../../shared/models/consent';\nimport { Store } from '@ngrx/store';\nimport { createConsent } from '../store/consents-management/consents-management.actions';\n\n/**\n * Proxy service for working with {@link ConsentsManagementState} store\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsentsManagementService {\n\n  constructor(\n    private store: Store\n  ) {\n  }\n\n  /**\n   * Initiate process of creating a new consent\n   * @param consent - New consent\n   */\n  giveConsent(consent: Consent) {\n    this.store.dispatch(createConsent({ payload: consent }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConsentsManagementState.html":{"url":"interfaces/ConsentsManagementState.html","title":"interface - ConsentsManagementState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConsentsManagementState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/give-consent/store/consents-management/consents-management.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        error\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Action, createReducer, on } from '@ngrx/store';\nimport { createConsentFail } from './consents-management.actions';\n\n\nexport const createConsentFeatureKey = 'consentsManagement';\n\nexport interface ConsentsManagementState {\n  error: string;\n}\n\nexport const initialState: ConsentsManagementState = {\n  error: null\n};\n\n\nexport const consentsManagementReducer = createReducer(\n  initialState,\n  on(createConsentFail, (state, { payload }) => ({ ...state, error: payload }))\n);\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/ConsentsResolverService.html":{"url":"guards/ConsentsResolverService.html","title":"guard - ConsentsResolverService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    ConsentsResolverService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/modules/collected-consents/routing/resolvers/consents-resolver/consents-resolver.service.ts\n            \n\n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(collectedConsentsService: CollectedConsentsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/collected-consents/routing/resolvers/consents-resolver/consents-resolver.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        collectedConsentsService\n                                                  \n                                                        \n                                                                        CollectedConsentsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            resolve\n                        \n                        \n                    \n                \n            \n            \n                \nresolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/routing/resolvers/consents-resolver/consents-resolver.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                                ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    state\n                                    \n                                                RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable | Promise | void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { ActivatedRouteSnapshot, Resolve, RouterStateSnapshot } from '@angular/router';\nimport { Consent } from '../../../../shared/models/consent';\nimport { Observable, of } from 'rxjs';\nimport { CollectedConsentsService } from '../../../services/collected-consents/collected-consents.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsentsResolverService implements Resolve{\n\n  constructor(\n    private collectedConsentsService: CollectedConsentsService\n  ) { }\n\n  resolve(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable | Promise | void {\n    this.collectedConsentsService.loadConsents();\n    return of(undefined);\n  }\n}\n\n        \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConsentsService.html":{"url":"injectables/ConsentsService.html","title":"injectable - ConsentsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ConsentsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/shared/services/consents/consents.service.ts\n        \n\n            \n                Description\n            \n            \n                Consents gateway\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                    Readonly\n                                CONSENTS_URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createConsent\n                            \n                            \n                                getConsents\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpClient: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/shared/services/consents/consents.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpClient\n                                                  \n                                                        \n                                                                        HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createConsent\n                        \n                        \n                    \n                \n            \n            \n                \ncreateConsent(consent: Consent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/services/consents/consents.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consent\n                                    \n                                                Consent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConsents\n                        \n                        \n                    \n                \n            \n            \n                \ngetConsents()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/services/consents/consents.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Observable\n\n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                                Readonly\n                            CONSENTS_URL\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/consents'\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/shared/services/consents/consents.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Consent } from '../../models/consent';\nimport { Observable } from 'rxjs';\n\n/**\n * Consents gateway\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ConsentsService {\n  static readonly CONSENTS_URL = '/consents';\n  constructor(\n    private httpClient: HttpClient\n  ) { }\n\n  createConsent(consent: Consent): Observable {\n    return this.httpClient.post(ConsentsService.CONSENTS_URL, consent);\n  }\n\n  getConsents(): Observable {\n    return this.httpClient.get(ConsentsService.CONSENTS_URL);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConsentsState.html":{"url":"interfaces/ConsentsState.html","title":"interface - ConsentsState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ConsentsState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/collected-consents/store/consents/consents.reducer.ts\n        \n\n\n            \n                Extends\n            \n            \n                    EntityState\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        currentPage\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        currentPage\n                                    \n                                \n                                \n                                    \n                                        currentPage:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { createEntityAdapter, EntityAdapter, EntityState } from '@ngrx/entity';\nimport { Consent } from '../../../shared/models/consent';\nimport { loadConsentsSuccess, nextPage, previousPage, setPage } from './consents.actions';\n\n\nexport const consentsFeatureKey = 'consents';\nexport const PAGE_SIZE = 2;\n\nexport interface ConsentsState extends EntityState {\n  currentPage: number;\n}\n\nexport const consentsAdapter = createEntityAdapter({\n  selectId: consent => consent.id\n});\n\nexport const initialState: ConsentsState = consentsAdapter.getInitialState({\n  currentPage: 0\n});\n\nexport const calculateTotalPagesCount = (state: ConsentsState): number => {\n  const numberOfEntities = Object.values(state.entities).length;\n  return Math.floor(numberOfEntities / PAGE_SIZE) + (numberOfEntities % PAGE_SIZE === 0 ? 0 : 1);\n};\n\nexport const consentsReducer = createReducer(\n  initialState,\n  on(loadConsentsSuccess, (state, { payload }) => {\n    return { ...consentsAdapter.setAll(payload, state), currentPage: 0 };\n  }),\n  on(nextPage, state => {\n    const totalPagesCount = calculateTotalPagesCount(state);\n    const { currentPage } = state;\n    return (currentPage + 1) >= totalPagesCount ? state : { ...state, currentPage: currentPage + 1 };\n  }),\n  on(previousPage, state => {\n    return state.currentPage === 0 ? state : { ...state, currentPage: state.currentPage - 1 };\n  }),\n  on(setPage, (state, { payload }) => {\n    const totalPagesCount = calculateTotalPagesCount(state);\n    return (payload >= 0 && payload \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GiveConsentComponent.html":{"url":"components/GiveConsentComponent.html","title":"component - GiveConsentComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GiveConsentComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/give-consent/components/give-consent/give-consent.component.ts\n\n\n    \n        Description\n    \n    \n        Main form for creating of consent entity\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-give-consent\n            \n\n            \n                styleUrls\n                ./give-consent.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./give-consent.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(giveConsentService: ConsentsManagementService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/give-consent/components/give-consent/give-consent.component.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        giveConsentService\n                                                  \n                                                        \n                                                                        ConsentsManagementService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit(consent: Consent)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/give-consent/components/give-consent/give-consent.component.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consent\n                                    \n                                                Consent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { ConsentsManagementService } from '../../services/consents-management.service';\nimport { Consent } from '../../../shared/models/consent';\n\n/**\n * Main form for creating of consent entity\n */\n@Component({\n  selector: 'app-give-consent',\n  templateUrl: './give-consent.component.html',\n  styleUrls: ['./give-consent.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GiveConsentComponent {\n  constructor(\n    private giveConsentService: ConsentsManagementService\n  ) {\n  }\n\n  submit(consent: Consent) {\n    this.giveConsentService.giveConsent(consent);\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./give-consent.component.scss\n                \n                .form-wrapper {\n  width: 500px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectedConsentsComponent', 'selector': 'app-collected-consents'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'GiveConsentFormComponent', 'selector': 'app-give-consent-form'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainAreaComponent', 'selector': 'app-main-area'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'PaginationControllerComponent', 'selector': 'app-pagination-controller'},{'name': 'PaginationPagesPanelComponent', 'selector': 'app-pagination-pages-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GiveConsentComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GiveConsentFormComponent.html":{"url":"components/GiveConsentFormComponent.html","title":"component - GiveConsentFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  GiveConsentFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/give-consent/components/give-consent/give-consent-form/give-consent-form.component.ts\n\n\n    \n        Description\n    \n    \n        Dumb component the form of creating of consent entity\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-give-consent-form\n            \n\n            \n                styleUrls\n                ./give-consent-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./give-consent-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                atLeastOnePermissionRequiredValidator\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                submitted\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/give-consent/components/give-consent/give-consent-form/give-consent-form.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                        FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        submitted\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/give-consent/components/give-consent/give-consent-form/give-consent-form.component.ts:15\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            atLeastOnePermissionRequiredValidator\n                        \n                        \n                    \n                \n            \n            \n                \natLeastOnePermissionRequiredValidator()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/give-consent/components/give-consent/give-consent-form/give-consent-form.component.ts:35\n                \n            \n\n\n            \n                \n                    Check if at least one consent is selected\n\n\n                    \n                        Returns :     (formGroup: any) => { atLeastOnPermissionRequired: boolean; }\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/give-consent/components/give-consent/give-consent-form/give-consent-form.component.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            submit\n                        \n                        \n                    \n                \n            \n            \n                \nsubmit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/give-consent/components/give-consent/give-consent-form/give-consent-form.component.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/give-consent/components/give-consent/give-consent-form/give-consent-form.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Consent } from '../../../../shared/models/consent';\n\n/**\n * Dumb component the form of creating of consent entity\n */\n@Component({\n  selector: 'app-give-consent-form',\n  templateUrl: './give-consent-form.component.html',\n  styleUrls: ['./give-consent-form.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class GiveConsentFormComponent implements OnInit {\n  @Output() submitted = new EventEmitter();\n\n  form: FormGroup;\n  constructor(\n    private fb: FormBuilder\n  ) {\n    this.form = fb.group({\n      name: null,\n      email: [null, [Validators.email]],\n      receiveNewsletter: null,\n      targetedAds: null,\n      trackVisits: null\n    }, {\n      validators: this.atLeastOnePermissionRequiredValidator()\n    });\n  }\n\n  /**\n   * Check if at least one consent is selected\n   */\n  atLeastOnePermissionRequiredValidator() {\n    return (formGroup: FormGroup) => {\n      const { receiveNewsletter, targetedAds, trackVisits } = formGroup.value;\n      return (receiveNewsletter || targetedAds || trackVisits) ? null : {\n        atLeastOnPermissionRequired: true\n      };\n    };\n  }\n\n  ngOnInit() {\n  }\n\n  submit() {\n    if (!this.form.valid) {\n      return;\n    }\n\n    this.submitted.emit(this.form.value);\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        Name\n        \n      \n      \n        Email address\n        \n        Email has incorrect format\n      \n    \n    I agree:\n    \n      Receive newsletter\n      Be shown targeted ads\n      Contribute to anonymous visit statistic\n    \n    \n      Give consent\n    \n  \n\n\n    \n\n    \n                \n                    ./give-consent-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Name                            Email address                Email has incorrect format              I agree:          Receive newsletter      Be shown targeted ads      Contribute to anonymous visit statistic              Give consent      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectedConsentsComponent', 'selector': 'app-collected-consents'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'GiveConsentFormComponent', 'selector': 'app-give-consent-form'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainAreaComponent', 'selector': 'app-main-area'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'PaginationControllerComponent', 'selector': 'app-pagination-controller'},{'name': 'PaginationPagesPanelComponent', 'selector': 'app-pagination-pages-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GiveConsentFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GiveConsentModule.html":{"url":"modules/GiveConsentModule.html","title":"module - GiveConsentModule","body":"\n                   \n\n\n\n\n    Modules\n    GiveConsentModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_GiveConsentModule\n\n\n\ncluster_GiveConsentModule_declarations\n\n\n\ncluster_GiveConsentModule_imports\n\n\n\n\nGiveConsentComponent\n\nGiveConsentComponent\n\n\n\nGiveConsentModule\n\nGiveConsentModule\n\nGiveConsentModule -->\n\nGiveConsentComponent->GiveConsentModule\n\n\n\n\n\nGiveConsentFormComponent\n\nGiveConsentFormComponent\n\nGiveConsentModule -->\n\nGiveConsentFormComponent->GiveConsentModule\n\n\n\n\n\nGiveConsentRoutingModule\n\nGiveConsentRoutingModule\n\nGiveConsentModule -->\n\nGiveConsentRoutingModule->GiveConsentModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nGiveConsentModule -->\n\nSharedModule->GiveConsentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/give-consent/give-consent.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Module for displaying list of created consents\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GiveConsentComponent\n                        \n                        \n                            GiveConsentFormComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GiveConsentRoutingModule\n                        \n                        \n                            SharedModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { GiveConsentComponent } from './components/give-consent/give-consent.component';\nimport { GiveConsentRoutingModule } from './routing/give-consent-routing.module';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatCardModule } from '@angular/material/card';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FlexModule } from '@angular/flex-layout';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { HttpClientModule } from '@angular/common/http';\nimport { GiveConsentFormComponent } from './components/give-consent/give-consent-form/give-consent-form.component';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromGiveConsent from './store/reducers';\nimport { EffectsModule } from '@ngrx/effects';\nimport { SharedModule } from '../shared/shared.module';\nimport { ConsentsManagementEffects } from './store/consents-management/consents-management.effects';\n\n\n/**\n * Module for displaying list of created consents\n */\n@NgModule({\n  declarations: [GiveConsentComponent, GiveConsentFormComponent],\n  imports: [\n    CommonModule,\n    GiveConsentRoutingModule,\n    MatInputModule,\n    MatButtonModule,\n    MatSelectModule,\n    MatRadioModule,\n    MatCardModule,\n    ReactiveFormsModule,\n    FlexModule,\n    MatCheckboxModule,\n    HttpClientModule,\n    StoreModule.forFeature(fromGiveConsent.giveConsentFeatureKey, fromGiveConsent.reducers, { metaReducers: fromGiveConsent.metaReducers }),\n    EffectsModule.forFeature([ConsentsManagementEffects]),\n    SharedModule\n  ]\n})\nexport class GiveConsentModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GiveConsentRoutingModule.html":{"url":"modules/GiveConsentRoutingModule.html","title":"module - GiveConsentRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    GiveConsentRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/give-consent/routing/give-consent-routing.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule, Routes } from '@angular/router';\nimport { GiveConsentComponent } from '../components/give-consent/give-consent.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    pathMatch: 'full',\n    component: GiveConsentComponent\n  }\n];\n\n/**\n * Routing module for {@link GiveConsentModule}\n */\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes)\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class GiveConsentRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/GiveConsentState.html":{"url":"interfaces/GiveConsentState.html","title":"interface - GiveConsentState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  GiveConsentState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/give-consent/store/reducers.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        consentsManagement\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        consentsManagement\n                                    \n                                \n                                \n                                    \n                                        consentsManagement:         ConsentsManagementState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ConsentsManagementState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ActionReducerMap,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from 'src/environments/environment';\nimport { consentsManagementReducer, ConsentsManagementState } from './consents-management/consents-management.reducer';\n\nexport const giveConsentFeatureKey = 'giveConsent';\n\nexport interface GiveConsentState {\n  consentsManagement: ConsentsManagementState;\n}\n\nexport const reducers: ActionReducerMap = {\n  consentsManagement: consentsManagementReducer\n};\n\nexport const metaReducers: MetaReducer[] = !environment.production ? [] : [];\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/loader/loader.component.ts\n\n\n    \n        Description\n    \n    \n        Wrapper for mat-loading-bar for showing at the top of the page\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loader\n            \n\n            \n                styleUrls\n                ./loader.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loading$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loadingService: UiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/loader/loader.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loadingService\n                                                  \n                                                        \n                                                                        UiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/loader/loader.component.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loading$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.loadingService.selectLoading$\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/loader/loader.component.ts:13\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { UiService } from '../../modules/shared/services/ui/ui.service';\n\n/**\n * Wrapper for mat-loading-bar for showing at the top of the page\n */\n@Component({\n  selector: 'app-loader',\n  templateUrl: './loader.component.html',\n  styleUrls: ['./loader.component.scss']\n})\nexport class LoaderComponent implements OnInit {\n  loading$ = this.loadingService.selectLoading$;\n  constructor(\n    private loadingService: UiService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./loader.component.scss\n                \n                mat-progress-bar {\n  position: absolute;\n  z-index: 1000;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectedConsentsComponent', 'selector': 'app-collected-consents'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'GiveConsentFormComponent', 'selector': 'app-give-consent-form'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainAreaComponent', 'selector': 'app-main-area'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'PaginationControllerComponent', 'selector': 'app-pagination-controller'},{'name': 'PaginationPagesPanelComponent', 'selector': 'app-pagination-pages-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MainAreaComponent.html":{"url":"components/MainAreaComponent.html","title":"component - MainAreaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MainAreaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/main-area/main-area.component.ts\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-main-area\n            \n\n            \n                styleUrls\n                ./main-area.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./main-area.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isHandset$\n                            \n                            \n                                links\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(breakpointObserver: BreakpointObserver)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/main-area/main-area.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isHandset$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    )\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/main-area/main-area.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            links\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { title: 'Give consent', link: '/give-consent' },\n    { title: 'Collected consents', link: '/consents' },\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in src/app/components/main-area/main-area.component.ts:12\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-main-area',\n  templateUrl: './main-area.component.html',\n  styleUrls: ['./main-area.component.scss']\n})\nexport class MainAreaComponent {\n  links = [\n    { title: 'Give consent', link: '/give-consent' },\n    { title: 'Collected consents', link: '/consents' },\n  ];\n  isHandset$: Observable = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n\n    \n\n    \n        \n  \n    \n    \n      {{ item.title }}\n    \n  \n  \n    \n      \n        menu\n      \n      Didomi test app\n    \n    \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./main-area.component.scss\n                \n                .sidenav-container {\n  height: 100%;\n}\n\n.sidenav {\n  width: 200px;\n}\n\n.sidenav .mat-toolbar {\n  background: inherit;\n}\n\n.mat-toolbar.mat-primary {\n  position: sticky;\n  top: 0;\n  z-index: 1;\n}\na.active {\n  background-color: rgba(0,0,0,.08);\n}\n\n.content {\n  padding-top: 16px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ item.title }}                          menu            Didomi test app                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectedConsentsComponent', 'selector': 'app-collected-consents'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'GiveConsentFormComponent', 'selector': 'app-give-consent-form'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainAreaComponent', 'selector': 'app-main-area'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'PaginationControllerComponent', 'selector': 'app-pagination-controller'},{'name': 'PaginationPagesPanelComponent', 'selector': 'app-pagination-pages-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MainAreaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NumberPageItem.html":{"url":"interfaces/NumberPageItem.html","title":"interface - NumberPageItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  NumberPageItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n        \n\n            \n                Description\n            \n            \n                Represent a non-selected page number (button with number)\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        number\n                                \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        number\n                                    \n                                \n                                \n                                    \n                                        number:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Represent three dots (...) in {@link PaginationPagesPanelComponent}\n */\nexport interface PlaceholderPageItem {\n  type: 'placeholder';\n}\n\n/**\n * Represent a non-selected page number (button with {@link number})\n */\nexport interface NumberPageItem {\n  type: 'pageNumber';\n  number: number;\n}\n\n/**\n * Represent a selected page number (primary button with {@link number})\n */\nexport interface ActivePageNumberItem {\n  type: 'activePageNumber';\n  number: number;\n}\n\nexport type PageItem = PlaceholderPageItem | NumberPageItem | ActivePageNumberItem;\n\nconst PANEL_LENGTH = 5;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PagesPanelGeneratorService {\n  constructor() {\n  }\n\n  /**\n   * Calculate the start page number of subrange of the pages range so\n   * currentPage will be preferably at the center of this subrange or at least inside of the subrange\n   * @param totalPages - total count of pages\n   * @param currentPage - current page\n   * @return start index (start page) of subrange\n   */\n  // put currentPage in the center of the panel or at least inside of one\n  private calculateStartIndex(totalPages: number, currentPage: number): number {\n    const panelLength = PANEL_LENGTH;\n    const half = Math.floor(panelLength / 2);\n    if (currentPage + half  {\n        const pageNumber = index + 1;\n        if (pageNumber === currentPage + 1) {\n          return { type: 'activePageNumber', number: pageNumber } as ActivePageNumberItem;\n        } else {\n          return { type: 'pageNumber', number: pageNumber } as NumberPageItem;\n        }\n      })\n      .slice(startIndex, startIndex + PANEL_LENGTH)\n    ;\n\n    // If there are pages before startIndex we add ... before \"the body\"\n    if (startIndex !== 0) {\n      result = [{ type: 'placeholder' }, ...result];\n    }\n\n    // If there are pages after startIndex we add ... after \"the body\"\n    if ((startIndex + PANEL_LENGTH + 1) \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PagesPanelGeneratorService.html":{"url":"injectables/PagesPanelGeneratorService.html","title":"injectable - PagesPanelGeneratorService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PagesPanelGeneratorService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                calculateStartIndex\n                            \n                            \n                                generate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts:33\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Private\n                            calculateStartIndex\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    calculateStartIndex(totalPages: number, currentPage: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts:45\n                \n            \n\n\n            \n                \n                    Calculate the start page number of subrange of the pages range so\ncurrentPage will be preferably at the center of this subrange or at least inside of the subrange\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    totalPages\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntotal count of pages\n\n\n                                    \n                                \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ncurrent page\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        start index (start page) of subrange\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            generate\n                        \n                        \n                    \n                \n            \n            \n                \ngenerate(totalPages: number, currentPage: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts:60\n                \n            \n\n\n            \n                \n                    Generate intermediate representation for PaginationPagesPanelComponent\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    totalPages\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ntotal count of pages\n\n\n                                    \n                                \n                                \n                                    currentPage\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \ncurrent page\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         PageItem[]\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Represent three dots (...) in {@link PaginationPagesPanelComponent}\n */\nexport interface PlaceholderPageItem {\n  type: 'placeholder';\n}\n\n/**\n * Represent a non-selected page number (button with {@link number})\n */\nexport interface NumberPageItem {\n  type: 'pageNumber';\n  number: number;\n}\n\n/**\n * Represent a selected page number (primary button with {@link number})\n */\nexport interface ActivePageNumberItem {\n  type: 'activePageNumber';\n  number: number;\n}\n\nexport type PageItem = PlaceholderPageItem | NumberPageItem | ActivePageNumberItem;\n\nconst PANEL_LENGTH = 5;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PagesPanelGeneratorService {\n  constructor() {\n  }\n\n  /**\n   * Calculate the start page number of subrange of the pages range so\n   * currentPage will be preferably at the center of this subrange or at least inside of the subrange\n   * @param totalPages - total count of pages\n   * @param currentPage - current page\n   * @return start index (start page) of subrange\n   */\n  // put currentPage in the center of the panel or at least inside of one\n  private calculateStartIndex(totalPages: number, currentPage: number): number {\n    const panelLength = PANEL_LENGTH;\n    const half = Math.floor(panelLength / 2);\n    if (currentPage + half  {\n        const pageNumber = index + 1;\n        if (pageNumber === currentPage + 1) {\n          return { type: 'activePageNumber', number: pageNumber } as ActivePageNumberItem;\n        } else {\n          return { type: 'pageNumber', number: pageNumber } as NumberPageItem;\n        }\n      })\n      .slice(startIndex, startIndex + PANEL_LENGTH)\n    ;\n\n    // If there are pages before startIndex we add ... before \"the body\"\n    if (startIndex !== 0) {\n      result = [{ type: 'placeholder' }, ...result];\n    }\n\n    // If there are pages after startIndex we add ... after \"the body\"\n    if ((startIndex + PANEL_LENGTH + 1) \n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaginationComponent.html":{"url":"components/PaginationComponent.html","title":"component - PaginationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PaginationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts\n\n\n    \n        Description\n    \n    \n        Dumb component for displaying of paginator\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pagination\n            \n\n            \n                styleUrls\n                ./pagination.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pagination.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePageNumber\n                            \n                            \n                                nextPage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                prevPage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                canNext\n                            \n                            \n                                canPrev\n                            \n                            \n                                currentPage\n                            \n                            \n                                totalPages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                nextClicked\n                            \n                            \n                                pageChanged\n                            \n                            \n                                prevClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:30\n                            \n                        \n\n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        canNext\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        canPrev\n                    \n                \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        currentPage\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        totalPages\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:24\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        nextClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pageChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        prevClicked\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:29\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changePageNumber\n                        \n                        \n                    \n                \n            \n            \n                \nchangePageNumber(pageNumber: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            nextPage\n                        \n                        \n                    \n                \n            \n            \n                \nnextPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            prevPage\n                        \n                        \n                    \n                \n            \n            \n                \nprevPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { PageItem, PagesPanelGeneratorService } from './pagination-pages-panel/pages-panel-generator/pages-panel-generator.service';\n\n/**\n * Dumb component for displaying of paginator\n */\n@Component({\n  selector: 'app-pagination',\n  templateUrl: './pagination.component.html',\n  styleUrls: ['./pagination.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PaginationComponent implements OnInit {\n  @Input() currentPage: number;\n  @Input() totalPages: number;\n  @Input() canNext: boolean;\n  @Input() canPrev: boolean;\n\n  @Output() nextClicked = new EventEmitter();\n  @Output() prevClicked = new EventEmitter();\n  @Output() pageChanged = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  changePageNumber(pageNumber: number) {\n    this.pageChanged.emit(pageNumber);\n  }\n\n  nextPage() {\n    this.nextClicked.emit();\n  }\n\n  prevPage() {\n    this.prevClicked.emit();\n  }\n\n}\n\n    \n\n    \n        \n  \n    chevron_left Previous page\n  \n  \n  \n    Next page chevron_right\n  \n\n\n    \n\n    \n                \n                    ./pagination.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      chevron_left Previous page          Next page chevron_right  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectedConsentsComponent', 'selector': 'app-collected-consents'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'GiveConsentFormComponent', 'selector': 'app-give-consent-form'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainAreaComponent', 'selector': 'app-main-area'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'PaginationControllerComponent', 'selector': 'app-pagination-controller'},{'name': 'PaginationPagesPanelComponent', 'selector': 'app-pagination-pages-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaginationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaginationControllerComponent.html":{"url":"components/PaginationControllerComponent.html","title":"component - PaginationControllerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PaginationControllerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts\n\n\n    \n        Description\n    \n    \n        Pagination controller as a replacement of standard mat-paginator.\nStandard mat-paginator is not suitable here, because it doesn't show pages numbers\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pagination-controller\n            \n\n            \n                styleUrls\n                ./pagination-controller.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pagination-controller.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage$\n                            \n                            \n                                hasNextPage$\n                            \n                            \n                                hasPrevPage$\n                            \n                            \n                                totalPages$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                nextPage\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                prevPage\n                            \n                            \n                                setPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(tableHandlerService: TableHandlerService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tableHandlerService\n                                                  \n                                                        \n                                                                        TableHandlerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            nextPage\n                        \n                        \n                    \n                \n            \n            \n                \nnextPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            prevPage\n                        \n                        \n                    \n                \n            \n            \n                \nprevPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPage\n                        \n                        \n                    \n                \n            \n            \n                \nsetPage(pageNumber: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            currentPage$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.tableHandlerService.currentPage$\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasNextPage$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.tableHandlerService.hasNextPage$\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasPrevPage$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.tableHandlerService.hasPrevPage\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            totalPages$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.tableHandlerService.totalPages$\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { TableHandlerService } from '../../../services/table-handler/table-handler.service';\n\n/**\n * Pagination controller as a replacement of standard mat-paginator.\n * Standard mat-paginator is not suitable here, because it doesn't show pages numbers\n */\n@Component({\n  selector: 'app-pagination-controller',\n  templateUrl: './pagination-controller.component.html',\n  styleUrls: ['./pagination-controller.component.scss']\n})\nexport class PaginationControllerComponent implements OnInit {\n  totalPages$ = this.tableHandlerService.totalPages$;\n  currentPage$ = this.tableHandlerService.currentPage$;\n  hasNextPage$ = this.tableHandlerService.hasNextPage$;\n  hasPrevPage$ = this.tableHandlerService.hasPrevPage;\n\n  constructor(\n    private tableHandlerService: TableHandlerService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  nextPage() {\n    this.tableHandlerService.nextPage();\n  }\n\n  prevPage() {\n    this.tableHandlerService.prevPage();\n  }\n\n  setPage(pageNumber: number) {\n    this.tableHandlerService.setPage(pageNumber);\n  }\n\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./pagination-controller.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectedConsentsComponent', 'selector': 'app-collected-consents'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'GiveConsentFormComponent', 'selector': 'app-give-consent-form'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainAreaComponent', 'selector': 'app-main-area'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'PaginationControllerComponent', 'selector': 'app-pagination-controller'},{'name': 'PaginationPagesPanelComponent', 'selector': 'app-pagination-pages-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaginationControllerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaginationPagesPanelComponent.html":{"url":"components/PaginationPagesPanelComponent.html","title":"component - PaginationPagesPanelComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PaginationPagesPanelComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts\n\n\n    \n        Description\n    \n    \n        Component of pages numbers. It's the central part of PaginationComponent\n\n    \n\n\n    \n        Implements\n    \n    \n                    OnInit\n                    OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-pagination-pages-panel\n            \n\n            \n                styleUrls\n                ./pagination-pages-panel.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./pagination-pages-panel.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                pageItems\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                changePageNumber\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentPage\n                            \n                            \n                                totalPages\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                pageChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(pagesPanelGeneratorService: PagesPanelGeneratorService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pagesPanelGeneratorService\n                                                  \n                                                        \n                                                                        PagesPanelGeneratorService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentPage\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        totalPages\n                    \n                \n                \n                    \n                        Type :         number\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        pageChanged\n                    \n                \n                \n                    \n                        Type :         EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            changePageNumber\n                        \n                        \n                    \n                \n            \n            \n                \nchangePageNumber(pageNumber: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnChanges\n                        \n                        \n                    \n                \n            \n            \n                \nngOnChanges(changes: SimpleChanges)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    changes\n                                    \n                                                SimpleChanges\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            ngOnInit\n                        \n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pageItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         PageItem[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  ChangeDetectionStrategy,\n  Component,\n  EventEmitter,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport { PageItem, PagesPanelGeneratorService } from './pages-panel-generator/pages-panel-generator.service';\n\n/**\n * Component of pages numbers. It's the central part of {@link PaginationComponent}\n */\n@Component({\n  selector: 'app-pagination-pages-panel',\n  templateUrl: './pagination-pages-panel.component.html',\n  styleUrls: ['./pagination-pages-panel.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PaginationPagesPanelComponent implements OnInit, OnChanges {\n  @Input() totalPages: number;\n  @Input() currentPage: number;\n\n  @Output() pageChanged = new EventEmitter();\n\n  pageItems: PageItem[] = [];\n  constructor(\n    private pagesPanelGeneratorService: PagesPanelGeneratorService\n  ) { }\n\n  ngOnInit(): void {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    this.pageItems = this.pagesPanelGeneratorService.generate(this.totalPages, this.currentPage);\n  }\n\n  changePageNumber(pageNumber: number) {\n    return this.pageChanged.emit(pageNumber - 1);\n  }\n\n\n\n}\n\n    \n\n    \n        \n  \n    \n      ...\n      {{item.number}}\n      {{item.number}}\n    \n  \n\n\n    \n\n    \n                \n                    ./pagination-pages-panel.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            ...      {{item.number}}      {{item.number}}      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CollectedConsentsComponent', 'selector': 'app-collected-consents'},{'name': 'GiveConsentComponent', 'selector': 'app-give-consent'},{'name': 'GiveConsentFormComponent', 'selector': 'app-give-consent-form'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'MainAreaComponent', 'selector': 'app-main-area'},{'name': 'PaginationComponent', 'selector': 'app-pagination'},{'name': 'PaginationControllerComponent', 'selector': 'app-pagination-controller'},{'name': 'PaginationPagesPanelComponent', 'selector': 'app-pagination-pages-panel'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PaginationPagesPanelComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/PlaceholderPageItem.html":{"url":"interfaces/PlaceholderPageItem.html","title":"interface - PlaceholderPageItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  PlaceholderPageItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n        \n\n            \n                Description\n            \n            \n                Represent three dots (...) in PaginationPagesPanelComponent\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \n\n                                    \n                                \n\n\n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n/**\n * Represent three dots (...) in {@link PaginationPagesPanelComponent}\n */\nexport interface PlaceholderPageItem {\n  type: 'placeholder';\n}\n\n/**\n * Represent a non-selected page number (button with {@link number})\n */\nexport interface NumberPageItem {\n  type: 'pageNumber';\n  number: number;\n}\n\n/**\n * Represent a selected page number (primary button with {@link number})\n */\nexport interface ActivePageNumberItem {\n  type: 'activePageNumber';\n  number: number;\n}\n\nexport type PageItem = PlaceholderPageItem | NumberPageItem | ActivePageNumberItem;\n\nconst PANEL_LENGTH = 5;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PagesPanelGeneratorService {\n  constructor() {\n  }\n\n  /**\n   * Calculate the start page number of subrange of the pages range so\n   * currentPage will be preferably at the center of this subrange or at least inside of the subrange\n   * @param totalPages - total count of pages\n   * @param currentPage - current page\n   * @return start index (start page) of subrange\n   */\n  // put currentPage in the center of the panel or at least inside of one\n  private calculateStartIndex(totalPages: number, currentPage: number): number {\n    const panelLength = PANEL_LENGTH;\n    const half = Math.floor(panelLength / 2);\n    if (currentPage + half  {\n        const pageNumber = index + 1;\n        if (pageNumber === currentPage + 1) {\n          return { type: 'activePageNumber', number: pageNumber } as ActivePageNumberItem;\n        } else {\n          return { type: 'pageNumber', number: pageNumber } as NumberPageItem;\n        }\n      })\n      .slice(startIndex, startIndex + PANEL_LENGTH)\n    ;\n\n    // If there are pages before startIndex we add ... before \"the body\"\n    if (startIndex !== 0) {\n      result = [{ type: 'placeholder' }, ...result];\n    }\n\n    // If there are pages after startIndex we add ... after \"the body\"\n    if ((startIndex + PANEL_LENGTH + 1) \n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/shared/shared.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Module for sharing code between modules\n\n        \n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { StoreModule } from '@ngrx/store';\nimport * as fromShared from './store/reducers';\nimport { EffectsModule } from '@ngrx/effects';\nimport { UiEffects } from './store/ui/ui.effects';\nimport { MAT_SNACK_BAR_DEFAULT_OPTIONS, MatSnackBarModule } from '@angular/material/snack-bar';\n\n/**\n * Module for sharing code between modules\n */\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule,\n    StoreModule.forFeature(fromShared.sharedFeatureKey, fromShared.reducers, { metaReducers: fromShared.metaReducers }),\n    EffectsModule.forFeature([UiEffects]),\n    MatSnackBarModule\n  ],\n  providers: [\n    { provide: MAT_SNACK_BAR_DEFAULT_OPTIONS, useValue: { duration: 2500 } }\n  ]\n})\nexport class SharedModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SharedState.html":{"url":"interfaces/SharedState.html","title":"interface - SharedState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SharedState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/shared/store/reducers.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        ui\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        ui\n                                    \n                                \n                                \n                                    \n                                        ui:         UiState\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UiState\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {\n  ActionReducerMap,\n  MetaReducer\n} from '@ngrx/store';\nimport { environment } from 'src/environments/environment';\nimport { uiReducer, UiState } from './ui/ui.reducer';\n\nexport const sharedFeatureKey = 'shared';\n\nexport interface SharedState {\n  ui: UiState;\n}\n\nexport const reducers: ActionReducerMap = {\n  ui: uiReducer\n};\n\n\nexport const metaReducers: MetaReducer[] = !environment.production ? [] : [];\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/ShowLoaderInterceptor.html":{"url":"interceptors/ShowLoaderInterceptor.html","title":"interceptor - ShowLoaderInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Interceptors\n  ShowLoaderInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/show-loader/show-loader.interceptor.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(uiService: UiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/services/show-loader/show-loader.interceptor.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        uiService\n                                                  \n                                                        \n                                                                        UiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            intercept\n                        \n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/show-loader/show-loader.interceptor.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                                HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport {\n  HttpRequest,\n  HttpHandler,\n  HttpEvent,\n  HttpInterceptor\n} from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { UiService } from '../../modules/shared/services/ui/ui.service';\nimport { finalize } from 'rxjs/operators';\n\n@Injectable()\nexport class ShowLoaderInterceptor implements HttpInterceptor {\n\n  constructor(\n    private uiService: UiService\n  ) {}\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    this.uiService.setLoading(true);\n    return next.handle(request).pipe(finalize(() => this.uiService.setLoading(false)));\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/StringifyConsentPipe.html":{"url":"pipes/StringifyConsentPipe.html","title":"pipe - StringifyConsentPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  StringifyConsentPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/collected-consents/pipes/stringify-consent/stringify-consent.pipe.ts\n        \n\n            \n                Description\n            \n            \n                Show text representation of selected consents\n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        stringifyConsent\n                    \n                \n            \n        \n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            transform\n                        \n                        \n                    \n                \n            \n            \n                \ntransform(value: Consent, ...args: unknown[])\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/pipes/stringify-consent/stringify-consent.pipe.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                Consent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    args\n                                    \n                                            unknown[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Consent } from '../../../shared/models/consent';\n\n/**\n * Show text representation of selected consents\n */\n@Pipe({\n  name: 'stringifyConsent'\n})\nexport class StringifyConsentPipe implements PipeTransform {\n\n  transform(value: Consent, ...args: unknown[]): unknown {\n    const consents: string[] = [];\n    if (value.receiveNewsletter) {\n      consents.push('Receive newsletter');\n    }\n\n    if (value.targetedAds) {\n      consents.push('Be shown targeted ads');\n    }\n\n    if (value.trackVisits) {\n      consents.push('Contribute to anonymous visit statistic');\n    }\n\n    return consents.join(', ');\n  }\n\n}\n\n    \n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TableHandlerService.html":{"url":"injectables/TableHandlerService.html","title":"injectable - TableHandlerService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TableHandlerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/collected-consents/services/table-handler/table-handler.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for working with the consents table state.\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                currentPage$\n                            \n                            \n                                    Readonly\n                                hasNextPage$\n                            \n                            \n                                    Readonly\n                                hasPrevPage\n                            \n                            \n                                    Readonly\n                                totalPages$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                nextPage\n                            \n                            \n                                prevPage\n                            \n                            \n                                setPage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/collected-consents/services/table-handler/table-handler.service.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            nextPage\n                        \n                        \n                    \n                \n            \n            \n                \nnextPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/services/table-handler/table-handler.service.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            prevPage\n                        \n                        \n                    \n                \n            \n            \n                \nprevPage()\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/services/table-handler/table-handler.service.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setPage\n                        \n                        \n                    \n                \n            \n            \n                \nsetPage(pageNumber: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/collected-consents/services/table-handler/table-handler.service.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    pageNumber\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            currentPage$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.store.select(selectCurrentPage)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/services/table-handler/table-handler.service.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            hasNextPage$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.store.select(hasNextPage)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/services/table-handler/table-handler.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            hasPrevPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.store.select(hasPrevPage)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/services/table-handler/table-handler.service.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            totalPages$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.store.select(selectTotalPages)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/collected-consents/services/table-handler/table-handler.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { hasNextPage, selectTotalPages, hasPrevPage, selectCurrentPage } from '../../store/consents/consents.selectors';\nimport { Store } from '@ngrx/store';\nimport { previousPage, nextPage, setPage } from '../../store/consents/consents.actions';\n\n/**\n * Service for working with the consents table state.\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TableHandlerService {\n  readonly totalPages$ = this.store.select(selectTotalPages);\n  readonly currentPage$ = this.store.select(selectCurrentPage);\n  readonly hasNextPage$ = this.store.select(hasNextPage);\n  readonly hasPrevPage = this.store.select(hasPrevPage);\n\n  constructor(\n    private store: Store\n  ) { }\n\n  nextPage() {\n    this.store.dispatch(nextPage());\n  }\n\n  prevPage() {\n    this.store.dispatch(previousPage());\n  }\n\n  setPage(pageNumber: number) {\n    this.store.dispatch(setPage({ payload: pageNumber }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UiEffects.html":{"url":"injectables/UiEffects.html","title":"injectable - UiEffects","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UiEffects\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/shared/store/ui/ui.effects.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showSuccessMessage$\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(actions$: Actions, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/shared/store/ui/ui.effects.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        actions$\n                                                  \n                                                        \n                                                                    Actions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSuccessMessage$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEffect(() => this.actions$.pipe(\n    ofType(showSuccessMessage.type),\n    tap(({ payload }) => this.snackBar.open(payload))\n  ), { dispatch: false })\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/shared/store/ui/ui.effects.ts:19\n                            \n                        \n\n                \n                    \n                        Show message in snack bar\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Actions, createEffect, ofType } from '@ngrx/effects';\nimport { showSuccessMessage } from './ui.actions';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { tap } from 'rxjs/operators';\n\n\n\n@Injectable()\nexport class UiEffects {\n  constructor(\n    private actions$: Actions,\n    private snackBar: MatSnackBar\n  ) {}\n\n  /**\n   * Show message in snack bar\n   */\n  showSuccessMessage$ = createEffect(() => this.actions$.pipe(\n    ofType(showSuccessMessage.type),\n    tap(({ payload }) => this.snackBar.open(payload))\n  ), { dispatch: false });\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UiService.html":{"url":"injectables/UiService.html","title":"injectable - UiService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UiService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/shared/services/ui/ui.service.ts\n        \n\n            \n                Description\n            \n            \n                Service for ui state management\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                selectLoading$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setLoading\n                            \n                            \n                                showSuccessMessage\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(store: Store)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/shared/services/ui/ui.service.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        store\n                                                  \n                                                        \n                                                                    Store\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            setLoading\n                        \n                        \n                    \n                \n            \n            \n                \nsetLoading(value: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/services/ui/ui.service.ts:24\n                \n            \n\n\n            \n                \n                    Show or hide the loading bar at the top of the page\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nvisibility of loading bar\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            showSuccessMessage\n                        \n                        \n                    \n                \n            \n            \n                \nshowSuccessMessage(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/modules/shared/services/ui/ui.service.ts:32\n                \n            \n\n\n            \n                \n                    Show message in snack bar\n\n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        \nmessage which'll be shown in snack bar\n\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            selectLoading$\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : this.store.select(selectLoading)\n                        \n                    \n                        \n                            \n                                    Defined in src/app/modules/shared/services/ui/ui.service.ts:13\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Store } from '@ngrx/store';\nimport { selectLoading } from '../../store/ui/ui.selectors';\nimport { setLoading, showSuccessMessage } from '../../store/ui/ui.actions';\n\n/**\n * Service for ui state management\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UiService {\n  readonly selectLoading$ = this.store.select(selectLoading);\n\n  constructor(\n    private store: Store\n  ) {\n  }\n\n  /**\n   * Show or hide the loading bar at the top of the page\n   * @param value - visibility of loading bar\n   */\n  setLoading(value: boolean) {\n    this.store.dispatch(setLoading({ payload: value }));\n  }\n\n  /**\n   * Show message in snack bar\n   * @param message - message which'll be shown in snack bar\n   */\n  showSuccessMessage(message: string) {\n    this.store.dispatch(showSuccessMessage({ payload: message }));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/UiState.html":{"url":"interfaces/UiState.html","title":"interface - UiState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  UiState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/shared/store/ui/ui.reducer.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        loading\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loading\n                                    \n                                \n                                \n                                    \n                                        loading:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field represents the state of loading bar at the top of the page (show or hide)\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { createReducer, on } from '@ngrx/store';\nimport { setLoading } from './ui.actions';\n\nexport interface UiState {\n  /**\n   * Field represents the state of loading bar at the top of the page (show or hide)\n   */\n  loading: boolean;\n}\n\nexport const initialState: UiState = {\n  loading: false\n};\n\n\nexport const uiReducer = createReducer(\n  initialState,\n  on(setLoading, (state, { payload }) => ({...state, loading: payload}))\n);\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                e2e/src/app.po.ts\n            \n            class\n            AppPage\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/components/main-area/main-area.component.ts\n            \n            component\n            MainAreaComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/mock/app-mock.module.ts\n            \n            function\n            createConsent\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock/app-mock.module.ts\n            \n            function\n            getConsents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock/app-mock.module.ts\n            \n            variable\n            appMockRoutes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock/app-mock.module.ts\n            \n            variable\n            consents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/mock/app-mock.module.ts\n            \n            variable\n            id\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/components/collected-consents/collected-consents.component.ts\n            \n            component\n            CollectedConsentsComponent\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination-controller.component.ts\n            \n            component\n            PaginationControllerComponent\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n            \n            injectable\n            PagesPanelGeneratorService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n            \n            interface\n            ActivePageNumberItem\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n            \n            interface\n            NumberPageItem\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n            \n            interface\n            PlaceholderPageItem\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n            \n            variable\n            PANEL_LENGTH\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pagination-pages-panel.component.ts\n            \n            component\n            PaginationPagesPanelComponent\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination.component.ts\n            \n            component\n            PaginationComponent\n            \n                7 %\n                (1/13)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/pipes/stringify-consent/stringify-consent.pipe.ts\n            \n            pipe\n            StringifyConsentPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/routing/resolvers/consents-resolver/consents-resolver.service.ts\n            \n            guard\n            ConsentsResolverService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/services/collected-consents/collected-consents.service.ts\n            \n            injectable\n            CollectedConsentsService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/services/table-handler/table-handler.service.ts\n            \n            injectable\n            TableHandlerService\n            \n                11 %\n                (1/9)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.actions.ts\n            \n            variable\n            loadConsents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.actions.ts\n            \n            variable\n            loadConsentsFail\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.actions.ts\n            \n            variable\n            loadConsentsSuccess\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.actions.ts\n            \n            variable\n            nextPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.actions.ts\n            \n            variable\n            previousPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.actions.ts\n            \n            variable\n            setPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.effects.ts\n            \n            injectable\n            ConsentsEffects\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.reducer.ts\n            \n            interface\n            ConsentsState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.reducer.ts\n            \n            variable\n            calculateTotalPagesCount\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.reducer.ts\n            \n            variable\n            consentsAdapter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.reducer.ts\n            \n            variable\n            consentsFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.reducer.ts\n            \n            variable\n            consentsReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.reducer.ts\n            \n            variable\n            PAGE_SIZE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.selectors.ts\n            \n            variable\n            hasNextPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.selectors.ts\n            \n            variable\n            hasPrevPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.selectors.ts\n            \n            variable\n            selectConsents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.selectors.ts\n            \n            variable\n            selectConsentsStore\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.selectors.ts\n            \n            variable\n            selectCurrentPage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.selectors.ts\n            \n            variable\n            selectTotalPages\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/consents/consents.selectors.ts\n            \n            variable\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/reducers.ts\n            \n            interface\n            CollectedConsentsState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/reducers.ts\n            \n            variable\n            collectedConsentsFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/reducers.ts\n            \n            variable\n            metaReducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/reducers.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/collected-consents/store/selector.ts\n            \n            variable\n            selectCollectedConsents\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/components/give-consent/give-consent-form/give-consent-form.component.ts\n            \n            component\n            GiveConsentFormComponent\n            \n                28 %\n                (2/7)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/components/give-consent/give-consent.component.ts\n            \n            component\n            GiveConsentComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/services/consents-management.service.ts\n            \n            injectable\n            ConsentsManagementService\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/consents-management/consents-management.actions.ts\n            \n            variable\n            createConsent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/consents-management/consents-management.actions.ts\n            \n            variable\n            createConsentFail\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/consents-management/consents-management.effects.ts\n            \n            injectable\n            ConsentsManagementEffects\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/consents-management/consents-management.reducer.ts\n            \n            interface\n            ConsentsManagementState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/consents-management/consents-management.reducer.ts\n            \n            variable\n            consentsManagementReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/consents-management/consents-management.reducer.ts\n            \n            variable\n            createConsentFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/consents-management/consents-management.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/reducers.ts\n            \n            interface\n            GiveConsentState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/reducers.ts\n            \n            variable\n            giveConsentFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/reducers.ts\n            \n            variable\n            metaReducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/give-consent/store/reducers.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/models/consent.ts\n            \n            interface\n            Consent\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/modules/shared/services/consents/consents.service.ts\n            \n            injectable\n            ConsentsService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/app/modules/shared/services/ui/ui.service.ts\n            \n            injectable\n            UiService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/reducers.ts\n            \n            interface\n            SharedState\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/reducers.ts\n            \n            variable\n            metaReducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/reducers.ts\n            \n            variable\n            reducers\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/reducers.ts\n            \n            variable\n            sharedFeatureKey\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/selector.ts\n            \n            variable\n            selectShared\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/ui/ui.actions.ts\n            \n            variable\n            setLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/ui/ui.actions.ts\n            \n            variable\n            showSuccessMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/ui/ui.effects.ts\n            \n            injectable\n            UiEffects\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/ui/ui.reducer.ts\n            \n            interface\n            UiState\n            \n                50 %\n                (1/2)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/ui/ui.reducer.ts\n            \n            variable\n            initialState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/ui/ui.reducer.ts\n            \n            variable\n            uiReducer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/ui/ui.selectors.ts\n            \n            variable\n            selectLoading\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/shared/store/ui/ui.selectors.ts\n            \n            variable\n            selectUiState\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/routing/app-routing.module.ts\n            \n            variable\n            defaultRoute\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/services/show-loader/show-loader.interceptor.ts\n            \n            interceptor\n            ShowLoaderInterceptor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/environments/environment.prod.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ~9.1.4\n        \n            @angular/cdk : ^9.2.2\n        \n            @angular/common : ~9.1.4\n        \n            @angular/compiler : ~9.1.4\n        \n            @angular/core : ~9.1.4\n        \n            @angular/flex-layout : ^9.0.0-beta.29\n        \n            @angular/forms : ~9.1.4\n        \n            @angular/material : ^9.2.2\n        \n            @angular/platform-browser : ~9.1.4\n        \n            @angular/platform-browser-dynamic : ~9.1.4\n        \n            @angular/router : ~9.1.4\n        \n            @ngrx/effects : ^9.1.0\n        \n            @ngrx/entity : ^9.1.0\n        \n            @ngrx/schematics : ^9.1.0\n        \n            @ngrx/store : ^9.1.0\n        \n            @ngrx/store-devtools : ^9.1.0\n        \n            faker : ^4.1.0\n        \n            jasmine-marbles : ^0.6.0\n        \n            ngx-mock-server : ^2.0.0\n        \n            rxjs : ~6.5.4\n        \n            tslib : ^1.10.0\n        \n            zone.js : ~0.10.2\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createConsent   (src/.../app-mock.module.ts)\n                        \n                        \n                            getConsents   (src/.../app-mock.module.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/mock/app-mock.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            createConsent\n                        \n                        \n                    \n                \n            \n            \n                \ncreateConsent(req?)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        Yes\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getConsents\n                        \n                        \n                    \n                \n            \n            \n                \ngetConsents()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDidomi Test App\n\nIt's my solution for Didomi code challenge. The app is available on Github Pages.\nKey features :key:\n\nThoroughly tested. ~80 tests, ~90% code coverage :lock:\nFront-end level mocks of http-request, using my package ngx-mock-server (yes, it can be effortlessly deployed on Github Pages :palm_tree:)\nHandy Compodoc documentation. Do you not want to generate it manually? Check it out online! :green_book:\nRunning tests and app deployment on push via Github Actions\n\nThis project was generated with Angular CLI version 9.1.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nGenerate documentation\nRun npm run compodoc to generate documentation via Compodoc. The documentation will be stored in the dist/docs directory.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppMockModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CollectedConsentsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CollectedConsentsRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GiveConsentModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        GiveConsentRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_CollectedConsentsModule\n\n\n\ncluster_CollectedConsentsModule_declarations\n\n\n\ncluster_CollectedConsentsModule_imports\n\n\n\ncluster_GiveConsentModule\n\n\n\ncluster_GiveConsentModule_declarations\n\n\n\ncluster_GiveConsentModule_imports\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nAppModule -->\n\nLoaderComponent->AppModule\n\n\n\n\n\nMainAreaComponent\n\nMainAreaComponent\n\nAppModule -->\n\nMainAreaComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppMockModule\n\nAppMockModule\n\nAppModule -->\n\nAppMockModule->AppModule\n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nSharedModule\n\nSharedModule\n\nAppModule -->\n\nSharedModule->AppModule\n\n\n\n\n\nCollectedConsentsModule\n\nCollectedConsentsModule\n\nCollectedConsentsModule -->\n\nSharedModule->CollectedConsentsModule\n\n\n\n\n\nGiveConsentModule\n\nGiveConsentModule\n\nGiveConsentModule -->\n\nSharedModule->GiveConsentModule\n\n\n\n\n\nShowLoaderInterceptor\n\nShowLoaderInterceptor\n\nAppModule -->\n\nShowLoaderInterceptor->AppModule\n\n\n\n\n\nCollectedConsentsComponent\n\nCollectedConsentsComponent\n\nCollectedConsentsModule -->\n\nCollectedConsentsComponent->CollectedConsentsModule\n\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\nCollectedConsentsModule -->\n\nPaginationComponent->CollectedConsentsModule\n\n\n\n\n\nPaginationControllerComponent\n\nPaginationControllerComponent\n\nCollectedConsentsModule -->\n\nPaginationControllerComponent->CollectedConsentsModule\n\n\n\n\n\nPaginationPagesPanelComponent\n\nPaginationPagesPanelComponent\n\nCollectedConsentsModule -->\n\nPaginationPagesPanelComponent->CollectedConsentsModule\n\n\n\n\n\nStringifyConsentPipe\n\nStringifyConsentPipe\n\nCollectedConsentsModule -->\n\nStringifyConsentPipe->CollectedConsentsModule\n\n\n\n\n\nCollectedConsentsRoutingModule\n\nCollectedConsentsRoutingModule\n\nCollectedConsentsModule -->\n\nCollectedConsentsRoutingModule->CollectedConsentsModule\n\n\n\n\n\nGiveConsentComponent\n\nGiveConsentComponent\n\nGiveConsentModule -->\n\nGiveConsentComponent->GiveConsentModule\n\n\n\n\n\nGiveConsentFormComponent\n\nGiveConsentFormComponent\n\nGiveConsentModule -->\n\nGiveConsentFormComponent->GiveConsentModule\n\n\n\n\n\nGiveConsentRoutingModule\n\nGiveConsentRoutingModule\n\nGiveConsentModule -->\n\nGiveConsentRoutingModule->GiveConsentModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        8 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    9 Components\n                \n            \n        \n        \n            \n                \n                    \n                    9 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Pipe\n                \n            \n        \n        \n            \n                \n                    \n                    1 Class\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    10 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        8 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            PageItem   (src/.../pages-panel-generator.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n    \n    \n        \n            \n                \n                    \n                    PageItem\n                \n            \n            \n                \n                            PlaceholderPageItem | NumberPageItem | ActivePageNumberItem\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appMockRoutes   (src/.../app-mock.module.ts)\n                        \n                        \n                            calculateTotalPagesCount   (src/.../consents.reducer.ts)\n                        \n                        \n                            collectedConsentsFeatureKey   (src/.../reducers.ts)\n                        \n                        \n                            consents   (src/.../app-mock.module.ts)\n                        \n                        \n                            consentsAdapter   (src/.../consents.reducer.ts)\n                        \n                        \n                            consentsFeatureKey   (src/.../consents.reducer.ts)\n                        \n                        \n                            consentsManagementReducer   (src/.../consents-management.reducer.ts)\n                        \n                        \n                            consentsReducer   (src/.../consents.reducer.ts)\n                        \n                        \n                            context   (src/.../test.ts)\n                        \n                        \n                            createConsent   (src/.../consents-management.actions.ts)\n                        \n                        \n                            createConsentFail   (src/.../consents-management.actions.ts)\n                        \n                        \n                            createConsentFeatureKey   (src/.../consents-management.reducer.ts)\n                        \n                        \n                            defaultRoute   (src/.../app-routing.module.ts)\n                        \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            giveConsentFeatureKey   (src/.../reducers.ts)\n                        \n                        \n                            hasNextPage   (src/.../consents.selectors.ts)\n                        \n                        \n                            hasPrevPage   (src/.../consents.selectors.ts)\n                        \n                        \n                            id   (src/.../app-mock.module.ts)\n                        \n                        \n                            initialState   (src/.../consents.reducer.ts)\n                        \n                        \n                            initialState   (src/.../consents-management.reducer.ts)\n                        \n                        \n                            initialState   (src/.../ui.reducer.ts)\n                        \n                        \n                            loadConsents   (src/.../consents.actions.ts)\n                        \n                        \n                            loadConsentsFail   (src/.../consents.actions.ts)\n                        \n                        \n                            loadConsentsSuccess   (src/.../consents.actions.ts)\n                        \n                        \n                            metaReducers   (src/.../reducers.ts)\n                        \n                        \n                            metaReducers   (src/.../reducers.ts)\n                        \n                        \n                            metaReducers   (src/.../reducers.ts)\n                        \n                        \n                            nextPage   (src/.../consents.actions.ts)\n                        \n                        \n                            PAGE_SIZE   (src/.../consents.reducer.ts)\n                        \n                        \n                            PANEL_LENGTH   (src/.../pages-panel-generator.service.ts)\n                        \n                        \n                            previousPage   (src/.../consents.actions.ts)\n                        \n                        \n                            reducers   (src/.../reducers.ts)\n                        \n                        \n                            reducers   (src/.../reducers.ts)\n                        \n                        \n                            reducers   (src/.../reducers.ts)\n                        \n                        \n                            require   (src/.../test.ts)\n                        \n                        \n                            selectCollectedConsents   (src/.../selector.ts)\n                        \n                        \n                            selectConsents   (src/.../consents.selectors.ts)\n                        \n                        \n                            selectConsentsStore   (src/.../consents.selectors.ts)\n                        \n                        \n                            selectCurrentPage   (src/.../consents.selectors.ts)\n                        \n                        \n                            selectLoading   (src/.../ui.selectors.ts)\n                        \n                        \n                            selectShared   (src/.../selector.ts)\n                        \n                        \n                            selectTotalPages   (src/.../consents.selectors.ts)\n                        \n                        \n                            selectUiState   (src/.../ui.selectors.ts)\n                        \n                        \n                            setLoading   (src/.../ui.actions.ts)\n                        \n                        \n                            setPage   (src/.../consents.actions.ts)\n                        \n                        \n                            sharedFeatureKey   (src/.../reducers.ts)\n                        \n                        \n                            showSuccessMessage   (src/.../ui.actions.ts)\n                        \n                        \n                            uiReducer   (src/.../ui.reducer.ts)\n                        \n                        \n                               (src/.../consents.selectors.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/mock/app-mock.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            appMockRoutes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     RouteDeclaration[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  {\n    path: '/consents',\n    method: 'POST',\n    callback: createConsent\n  },\n  {\n    path: '/consents',\n    method: 'GET',\n    callback: getConsents\n  }\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            consents\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Consent[]\n\n                        \n                    \n                    \n                        \n                            Default value : [...Array(4)].map((_, index) => ({\n  id: index,\n  name: faker.name.findName(),\n  email: faker.internet.email(),\n  receiveNewsletter: faker.random.boolean(),\n  trackVisits: faker.random.boolean(),\n  targetedAds: faker.random.boolean()\n}))\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : consents.length\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/collected-consents/store/consents/consents.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            calculateTotalPagesCount\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : (state: ConsentsState): number => {\n  const numberOfEntities = Object.values(state.entities).length;\n  return Math.floor(numberOfEntities / PAGE_SIZE) + (numberOfEntities % PAGE_SIZE === 0 ? 0 : 1);\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            consentsAdapter\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createEntityAdapter({\n  selectId: consent => consent.id\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            consentsFeatureKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'consents'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            consentsReducer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createReducer(\n  initialState,\n  on(loadConsentsSuccess, (state, { payload }) => {\n    return { ...consentsAdapter.setAll(payload, state), currentPage: 0 };\n  }),\n  on(nextPage, state => {\n    const totalPagesCount = calculateTotalPagesCount(state);\n    const { currentPage } = state;\n    return (currentPage + 1) >= totalPagesCount ? state : { ...state, currentPage: currentPage + 1 };\n  }),\n  on(previousPage, state => {\n    return state.currentPage === 0 ? state : { ...state, currentPage: state.currentPage - 1 };\n  }),\n  on(setPage, (state, { payload }) => {\n    const totalPagesCount = calculateTotalPagesCount(state);\n    return (payload >= 0 && payload \n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConsentsState\n\n                        \n                    \n                    \n                        \n                            Default value : consentsAdapter.getInitialState({\n  currentPage: 0\n})\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            PAGE_SIZE\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/collected-consents/store/reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            collectedConsentsFeatureKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'collectedConsents'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            metaReducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MetaReducer[]\n\n                        \n                    \n                    \n                        \n                            Default value : !environment.production ? [] : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  consents: consentsReducer\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/give-consent/store/consents-management/consents-management.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            consentsManagementReducer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createReducer(\n  initialState,\n  on(createConsentFail, (state, { payload }) => ({ ...state, error: payload }))\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createConsentFeatureKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'consentsManagement'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ConsentsManagementState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  error: null\n}\n                        \n                    \n\n\n            \n        \n\n    src/test.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            context\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : require.context('./', true, /\\.spec\\.ts$/)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            require\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/give-consent/store/consents-management/consents-management.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            createConsent\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[CreateConsent] create consent',\n  props()\n)\n                        \n                    \n\n                \n                    \n                        Action for initiate process of creating a consent entity\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createConsentFail\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[CreateConsent] create consent fail',\n  props()\n)\n                        \n                    \n\n                \n                    \n                        Action of consent creating process failure\n\n                    \n                \n\n            \n        \n\n    src/app/routing/app-routing.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            defaultRoute\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : '/give-consent'\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/give-consent/store/reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            giveConsentFeatureKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'giveConsent'\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            metaReducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MetaReducer[]\n\n                        \n                    \n                    \n                        \n                            Default value : !environment.production ? [] : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  consentsManagement: consentsManagementReducer\n}\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/collected-consents/store/consents/consents.selectors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            hasNextPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n  selectConsentsStore,\n  (consentsState) => {\n    const totalPagesCount = calculateTotalPagesCount(consentsState);\n    return (consentsState.currentPage + 1) \n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasPrevPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n  selectConsentsStore,\n  (consentsState) => consentsState.currentPage > 0\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectConsents\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n  selectConsentsStore,\n  (consentsState) => {\n    const currentIndex = consentsState.currentPage * PAGE_SIZE;\n    return selectAll(consentsState).slice(currentIndex, currentIndex + PAGE_SIZE);\n  }\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectConsentsStore\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n  selectCollectedConsents,\n  store => store.consents\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectCurrentPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n  selectConsentsStore,\n  state => state.currentPage\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectTotalPages\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(\n  selectConsentsStore,\n  calculateTotalPagesCount\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : consentsAdapter.getSelectors()\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/shared/store/ui/ui.reducer.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            initialState\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UiState\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  loading: false\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uiReducer\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createReducer(\n  initialState,\n  on(setLoading, (state, { payload }) => ({...state, loading: payload}))\n)\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/collected-consents/store/consents/consents.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            loadConsents\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[Consents] load consents'\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadConsentsFail\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[Consents] load consents fail',\n  props()\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadConsentsSuccess\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[Consents] load consents success',\n  props()\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nextPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[Consents] next page'\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            previousPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[Consents] previous page'\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setPage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[Consents] set page',\n  props()\n)\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/shared/store/reducers.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            metaReducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MetaReducer[]\n\n                        \n                    \n                    \n                        \n                            Default value : !environment.production ? [] : []\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reducers\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         ActionReducerMap\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  ui: uiReducer\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sharedFeatureKey\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Default value : 'shared'\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/collected-consents/components/collected-consents/pagination-controller/pagination/pagination-pages-panel/pages-panel-generator/pages-panel-generator.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            PANEL_LENGTH\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         number\n\n                        \n                    \n                    \n                        \n                            Default value : 5\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/collected-consents/store/selector.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectCollectedConsents\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createFeatureSelector(collectedConsentsFeatureKey)\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/shared/store/ui/ui.selectors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectUiState, state => state.loading)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectUiState\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createSelector(selectShared, state => state.ui)\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/shared/store/selector.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            selectShared\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createFeatureSelector(sharedFeatureKey)\n                        \n                    \n\n\n            \n        \n\n    src/app/modules/shared/store/ui/ui.actions.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            setLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[Ui] set loading',\n  props()\n)\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showSuccessMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : createAction(\n  '[Ui] show success message',\n  props()\n)\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
